2024-12-04 21:14:06,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 21:14:06,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 21:14:06,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 21:14:06,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 21:14:22,111:INFO:PyCaret ClassificationExperiment
2024-12-04 21:14:22,112:INFO:Logging name: clf-default-name
2024-12-04 21:14:22,112:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-04 21:14:22,112:INFO:version 3.3.2
2024-12-04 21:14:22,112:INFO:Initializing setup()
2024-12-04 21:14:22,112:INFO:self.USI: ea4c
2024-12-04 21:14:22,112:INFO:self._variable_keys: {'idx', '_ml_usecase', 'seed', 'pipeline', 'gpu_n_jobs_param', 'USI', 'X_train', 'fold_shuffle_param', 'target_param', '_available_plots', 'memory', 'is_multiclass', 'gpu_param', 'log_plots_param', 'y', 'exp_id', 'y_test', 'X_test', 'data', 'n_jobs_param', 'y_train', 'logging_param', 'fold_generator', 'html_param', 'exp_name_log', 'X', 'fix_imbalance', 'fold_groups_param'}
2024-12-04 21:14:22,112:INFO:Checking environment
2024-12-04 21:14:22,112:INFO:python_version: 3.11.9
2024-12-04 21:14:22,112:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-12-04 21:14:22,113:INFO:machine: AMD64
2024-12-04 21:14:22,168:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-04 21:14:22,178:INFO:Memory: svmem(total=8345964544, available=623091712, percent=92.5, used=7722872832, free=623091712)
2024-12-04 21:14:22,179:INFO:Physical Core: 4
2024-12-04 21:14:22,179:INFO:Logical Core: 8
2024-12-04 21:14:22,179:INFO:Checking libraries
2024-12-04 21:14:22,179:INFO:System:
2024-12-04 21:14:22,179:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-12-04 21:14:22,179:INFO:executable: C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Scripts\python.exe
2024-12-04 21:14:22,179:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-04 21:14:22,179:INFO:PyCaret required dependencies:
2024-12-04 21:14:22,303:INFO:                 pip: 24.3.1
2024-12-04 21:14:22,303:INFO:          setuptools: 68.2.0
2024-12-04 21:14:22,303:INFO:             pycaret: 3.3.2
2024-12-04 21:14:22,303:INFO:             IPython: 8.29.0
2024-12-04 21:14:22,303:INFO:          ipywidgets: 8.1.5
2024-12-04 21:14:22,303:INFO:                tqdm: 4.67.0
2024-12-04 21:14:22,304:INFO:               numpy: 1.26.4
2024-12-04 21:14:22,304:INFO:              pandas: 2.1.4
2024-12-04 21:14:22,304:INFO:              jinja2: 3.1.4
2024-12-04 21:14:22,305:INFO:               scipy: 1.11.4
2024-12-04 21:14:22,305:INFO:              joblib: 1.3.2
2024-12-04 21:14:22,305:INFO:             sklearn: 1.4.2
2024-12-04 21:14:22,305:INFO:                pyod: 2.0.2
2024-12-04 21:14:22,305:INFO:            imblearn: 0.12.4
2024-12-04 21:14:22,305:INFO:   category_encoders: 2.6.4
2024-12-04 21:14:22,305:INFO:            lightgbm: 4.5.0
2024-12-04 21:14:22,305:INFO:               numba: 0.60.0
2024-12-04 21:14:22,305:INFO:            requests: 2.32.3
2024-12-04 21:14:22,305:INFO:          matplotlib: 3.7.5
2024-12-04 21:14:22,305:INFO:          scikitplot: 0.3.7
2024-12-04 21:14:22,305:INFO:         yellowbrick: 1.5
2024-12-04 21:14:22,305:INFO:              plotly: 5.24.1
2024-12-04 21:14:22,305:INFO:    plotly-resampler: Not installed
2024-12-04 21:14:22,305:INFO:             kaleido: 0.2.1
2024-12-04 21:14:22,306:INFO:           schemdraw: 0.15
2024-12-04 21:14:22,306:INFO:         statsmodels: 0.14.4
2024-12-04 21:14:22,306:INFO:              sktime: 0.26.0
2024-12-04 21:14:22,306:INFO:               tbats: 1.1.3
2024-12-04 21:14:22,306:INFO:            pmdarima: 2.0.4
2024-12-04 21:14:22,306:INFO:              psutil: 6.1.0
2024-12-04 21:14:22,306:INFO:          markupsafe: 2.1.5
2024-12-04 21:14:22,306:INFO:             pickle5: Not installed
2024-12-04 21:14:22,306:INFO:         cloudpickle: 3.1.0
2024-12-04 21:14:22,306:INFO:         deprecation: 2.1.0
2024-12-04 21:14:22,306:INFO:              xxhash: 3.5.0
2024-12-04 21:14:22,306:INFO:           wurlitzer: Not installed
2024-12-04 21:14:22,306:INFO:PyCaret optional dependencies:
2024-12-04 21:14:22,332:INFO:                shap: Not installed
2024-12-04 21:14:22,332:INFO:           interpret: Not installed
2024-12-04 21:14:22,332:INFO:                umap: Not installed
2024-12-04 21:14:22,332:INFO:     ydata_profiling: Not installed
2024-12-04 21:14:22,332:INFO:  explainerdashboard: Not installed
2024-12-04 21:14:22,332:INFO:             autoviz: 0.1.905
2024-12-04 21:14:22,332:INFO:           fairlearn: Not installed
2024-12-04 21:14:22,332:INFO:          deepchecks: Not installed
2024-12-04 21:14:22,332:INFO:             xgboost: 1.6.2
2024-12-04 21:14:22,332:INFO:            catboost: Not installed
2024-12-04 21:14:22,332:INFO:              kmodes: Not installed
2024-12-04 21:14:22,332:INFO:             mlxtend: Not installed
2024-12-04 21:14:22,332:INFO:       statsforecast: Not installed
2024-12-04 21:14:22,332:INFO:        tune_sklearn: Not installed
2024-12-04 21:14:22,332:INFO:                 ray: Not installed
2024-12-04 21:14:22,332:INFO:            hyperopt: Not installed
2024-12-04 21:14:22,333:INFO:              optuna: Not installed
2024-12-04 21:14:22,333:INFO:               skopt: Not installed
2024-12-04 21:14:22,333:INFO:              mlflow: Not installed
2024-12-04 21:14:22,333:INFO:              gradio: Not installed
2024-12-04 21:14:22,333:INFO:             fastapi: Not installed
2024-12-04 21:14:22,333:INFO:             uvicorn: Not installed
2024-12-04 21:14:22,333:INFO:              m2cgen: Not installed
2024-12-04 21:14:22,333:INFO:           evidently: Not installed
2024-12-04 21:14:22,333:INFO:               fugue: Not installed
2024-12-04 21:14:22,333:INFO:           streamlit: Not installed
2024-12-04 21:14:22,333:INFO:             prophet: Not installed
2024-12-04 21:14:22,333:INFO:None
2024-12-04 21:14:22,333:INFO:Set up data.
2024-12-04 21:14:22,368:INFO:Set up folding strategy.
2024-12-04 21:14:22,368:INFO:Set up train/test split.
2024-12-04 21:14:22,415:INFO:Set up index.
2024-12-04 21:14:22,415:INFO:Assigning column types.
2024-12-04 21:14:22,433:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-04 21:14:22,495:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 21:14:22,511:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 21:14:22,593:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:23,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:23,340:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 21:14:23,341:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 21:14:23,382:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:23,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:23,387:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-04 21:14:23,457:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 21:14:23,507:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:23,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:23,584:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 21:14:23,633:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:23,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:23,639:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-04 21:14:23,749:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:23,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:23,856:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:23,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:23,865:INFO:Preparing preprocessing pipeline...
2024-12-04 21:14:23,870:INFO:Set up label encoding.
2024-12-04 21:14:23,871:INFO:Set up simple imputation.
2024-12-04 21:14:23,938:INFO:Finished creating preprocessing pipeline.
2024-12-04 21:14:23,951:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-04 21:14:23,951:INFO:Creating final display dataframe.
2024-12-04 21:14:24,188:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               5533
1                        Target                                          Treatment
2                   Target type                                         Multiclass
3                Target mapping  Chemotherapy: 0, Radiation Therapy: 1, Surgery...
4           Original data shape                                        (11592, 36)
5        Transformed data shape                                        (11592, 36)
6   Transformed train set shape                                         (8114, 36)
7    Transformed test set shape                                         (3478, 36)
8              Numeric features                                                 35
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               ea4c
2024-12-04 21:14:24,292:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:24,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:24,408:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:24,412:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:24,413:INFO:setup() successfully completed in 2.31s...............
2024-12-04 21:14:24,414:INFO:Initializing compare_models()
2024-12-04 21:14:24,414:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-12-04 21:14:24,414:INFO:Checking exceptions
2024-12-04 21:14:24,432:INFO:Preparing display monitor
2024-12-04 21:14:24,443:INFO:Initializing Logistic Regression
2024-12-04 21:14:24,443:INFO:Total runtime is 0.0 minutes
2024-12-04 21:14:24,443:INFO:SubProcess create_model() called ==================================
2024-12-04 21:14:24,444:INFO:Initializing create_model()
2024-12-04 21:14:24,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:14:24,444:INFO:Checking exceptions
2024-12-04 21:14:24,444:INFO:Importing libraries
2024-12-04 21:14:24,444:INFO:Copying training dataset
2024-12-04 21:14:24,473:INFO:Defining folds
2024-12-04 21:14:24,473:INFO:Declaring metric variables
2024-12-04 21:14:24,474:INFO:Importing untrained model
2024-12-04 21:14:24,474:INFO:Logistic Regression Imported successfully
2024-12-04 21:14:24,474:INFO:Starting cross validation
2024-12-04 21:14:24,475:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:14:48,643:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,644:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,645:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,652:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,654:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,669:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,670:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,670:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,670:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,672:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,692:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,695:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,699:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,699:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,699:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,710:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,712:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,712:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,713:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,716:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,719:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,724:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,732:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,736:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,745:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,761:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,774:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,785:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,795:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,209:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:49,209:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:49,214:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,216:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,224:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,225:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,244:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,245:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,281:INFO:Calculating mean and std
2024-12-04 21:14:49,286:INFO:Creating metrics dataframe
2024-12-04 21:14:49,320:INFO:Uploading results into container
2024-12-04 21:14:49,327:INFO:Uploading model into container now
2024-12-04 21:14:49,333:INFO:_master_model_container: 1
2024-12-04 21:14:49,334:INFO:_display_container: 2
2024-12-04 21:14:49,335:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5533, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-04 21:14:49,335:INFO:create_model() successfully completed......................................
2024-12-04 21:14:51,966:INFO:SubProcess create_model() end ==================================
2024-12-04 21:14:51,966:INFO:Creating metrics dataframe
2024-12-04 21:14:51,985:INFO:Initializing K Neighbors Classifier
2024-12-04 21:14:51,985:INFO:Total runtime is 0.459041440486908 minutes
2024-12-04 21:14:51,985:INFO:SubProcess create_model() called ==================================
2024-12-04 21:14:51,986:INFO:Initializing create_model()
2024-12-04 21:14:51,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:14:51,986:INFO:Checking exceptions
2024-12-04 21:14:51,986:INFO:Importing libraries
2024-12-04 21:14:52,031:INFO:Copying training dataset
2024-12-04 21:14:52,158:INFO:Defining folds
2024-12-04 21:14:52,159:INFO:Declaring metric variables
2024-12-04 21:14:52,165:INFO:Importing untrained model
2024-12-04 21:14:52,166:INFO:K Neighbors Classifier Imported successfully
2024-12-04 21:14:52,167:INFO:Starting cross validation
2024-12-04 21:14:52,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:14:57,585:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,650:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,683:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,700:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,710:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,716:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,740:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,745:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,764:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,036:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,066:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,103:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,113:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,166:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,182:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,183:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,186:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,204:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,218:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,243:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,250:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,253:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,276:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,369:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,397:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,423:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,592:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,614:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,634:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,663:INFO:Calculating mean and std
2024-12-04 21:14:58,664:INFO:Creating metrics dataframe
2024-12-04 21:14:58,668:INFO:Uploading results into container
2024-12-04 21:14:58,670:INFO:Uploading model into container now
2024-12-04 21:14:58,671:INFO:_master_model_container: 2
2024-12-04 21:14:58,672:INFO:_display_container: 2
2024-12-04 21:14:58,672:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-04 21:14:58,672:INFO:create_model() successfully completed......................................
2024-12-04 21:14:58,886:INFO:SubProcess create_model() end ==================================
2024-12-04 21:14:58,886:INFO:Creating metrics dataframe
2024-12-04 21:14:58,903:INFO:Initializing Naive Bayes
2024-12-04 21:14:58,903:INFO:Total runtime is 0.5743334253629049 minutes
2024-12-04 21:14:58,904:INFO:SubProcess create_model() called ==================================
2024-12-04 21:14:58,904:INFO:Initializing create_model()
2024-12-04 21:14:58,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:14:58,904:INFO:Checking exceptions
2024-12-04 21:14:58,904:INFO:Importing libraries
2024-12-04 21:14:58,905:INFO:Copying training dataset
2024-12-04 21:14:58,969:INFO:Defining folds
2024-12-04 21:14:58,970:INFO:Declaring metric variables
2024-12-04 21:14:58,971:INFO:Importing untrained model
2024-12-04 21:14:58,974:INFO:Naive Bayes Imported successfully
2024-12-04 21:14:58,975:INFO:Starting cross validation
2024-12-04 21:14:58,978:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:14:59,263:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,279:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,294:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,305:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,316:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,336:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,503:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,535:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,542:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,560:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,566:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,569:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,598:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,600:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,627:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,628:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,632:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,632:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,653:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,671:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,677:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,708:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,720:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,731:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,758:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,827:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,924:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,948:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,977:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:00,026:INFO:Calculating mean and std
2024-12-04 21:15:00,028:INFO:Creating metrics dataframe
2024-12-04 21:15:00,036:INFO:Uploading results into container
2024-12-04 21:15:00,051:INFO:Uploading model into container now
2024-12-04 21:15:00,084:INFO:_master_model_container: 3
2024-12-04 21:15:00,084:INFO:_display_container: 2
2024-12-04 21:15:00,085:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 21:15:00,085:INFO:create_model() successfully completed......................................
2024-12-04 21:15:00,368:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:00,368:INFO:Creating metrics dataframe
2024-12-04 21:15:00,378:INFO:Initializing Decision Tree Classifier
2024-12-04 21:15:00,378:INFO:Total runtime is 0.5989306092262269 minutes
2024-12-04 21:15:00,378:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:00,379:INFO:Initializing create_model()
2024-12-04 21:15:00,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:00,379:INFO:Checking exceptions
2024-12-04 21:15:00,380:INFO:Importing libraries
2024-12-04 21:15:00,380:INFO:Copying training dataset
2024-12-04 21:15:00,428:INFO:Defining folds
2024-12-04 21:15:00,428:INFO:Declaring metric variables
2024-12-04 21:15:00,428:INFO:Importing untrained model
2024-12-04 21:15:00,429:INFO:Decision Tree Classifier Imported successfully
2024-12-04 21:15:00,429:INFO:Starting cross validation
2024-12-04 21:15:00,430:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:15:01,579:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,595:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,615:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,640:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,651:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,668:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,674:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,687:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,701:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,841:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,874:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,889:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,893:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,908:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,913:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,926:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,927:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,930:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,949:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,959:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,982:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,069:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,087:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,097:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,431:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,442:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,452:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,457:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,467:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,478:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,497:INFO:Calculating mean and std
2024-12-04 21:15:02,499:INFO:Creating metrics dataframe
2024-12-04 21:15:02,501:INFO:Uploading results into container
2024-12-04 21:15:02,503:INFO:Uploading model into container now
2024-12-04 21:15:02,503:INFO:_master_model_container: 4
2024-12-04 21:15:02,504:INFO:_display_container: 2
2024-12-04 21:15:02,504:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5533, splitter='best')
2024-12-04 21:15:02,504:INFO:create_model() successfully completed......................................
2024-12-04 21:15:02,577:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:02,577:INFO:Creating metrics dataframe
2024-12-04 21:15:02,580:INFO:Initializing SVM - Linear Kernel
2024-12-04 21:15:02,580:INFO:Total runtime is 0.6356274962425232 minutes
2024-12-04 21:15:02,581:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:02,581:INFO:Initializing create_model()
2024-12-04 21:15:02,581:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:02,581:INFO:Checking exceptions
2024-12-04 21:15:02,581:INFO:Importing libraries
2024-12-04 21:15:02,581:INFO:Copying training dataset
2024-12-04 21:15:02,603:INFO:Defining folds
2024-12-04 21:15:02,603:INFO:Declaring metric variables
2024-12-04 21:15:02,603:INFO:Importing untrained model
2024-12-04 21:15:02,604:INFO:SVM - Linear Kernel Imported successfully
2024-12-04 21:15:02,604:INFO:Starting cross validation
2024-12-04 21:15:02,605:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:15:04,608:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,615:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,626:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,629:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,633:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,639:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,642:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,643:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,646:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,647:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,648:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,648:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,657:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,663:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,664:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,664:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,674:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,676:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,678:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,680:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,682:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,702:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,708:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,709:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,711:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,725:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,727:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,729:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,733:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,748:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,654:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:05,656:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:05,661:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,664:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,674:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,684:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,689:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,728:INFO:Calculating mean and std
2024-12-04 21:15:05,731:INFO:Creating metrics dataframe
2024-12-04 21:15:05,737:INFO:Uploading results into container
2024-12-04 21:15:05,738:INFO:Uploading model into container now
2024-12-04 21:15:05,739:INFO:_master_model_container: 5
2024-12-04 21:15:05,739:INFO:_display_container: 2
2024-12-04 21:15:05,740:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5533, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-04 21:15:05,740:INFO:create_model() successfully completed......................................
2024-12-04 21:15:05,861:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:05,861:INFO:Creating metrics dataframe
2024-12-04 21:15:05,868:INFO:Initializing Ridge Classifier
2024-12-04 21:15:05,869:INFO:Total runtime is 0.6904449621836345 minutes
2024-12-04 21:15:05,869:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:05,870:INFO:Initializing create_model()
2024-12-04 21:15:05,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:05,870:INFO:Checking exceptions
2024-12-04 21:15:05,870:INFO:Importing libraries
2024-12-04 21:15:05,870:INFO:Copying training dataset
2024-12-04 21:15:05,921:INFO:Defining folds
2024-12-04 21:15:05,921:INFO:Declaring metric variables
2024-12-04 21:15:05,922:INFO:Importing untrained model
2024-12-04 21:15:05,924:INFO:Ridge Classifier Imported successfully
2024-12-04 21:15:05,925:INFO:Starting cross validation
2024-12-04 21:15:05,927:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:15:06,143:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,144:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,145:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,152:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,153:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,153:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,156:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,161:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,164:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,168:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,171:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,173:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,175:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,176:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,178:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,179:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,186:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,191:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,192:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,192:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,193:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,193:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,195:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,198:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,201:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,208:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,210:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,232:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,246:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,291:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,296:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,299:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,304:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,307:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,316:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,321:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,328:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,354:INFO:Calculating mean and std
2024-12-04 21:15:06,354:INFO:Creating metrics dataframe
2024-12-04 21:15:06,357:INFO:Uploading results into container
2024-12-04 21:15:06,358:INFO:Uploading model into container now
2024-12-04 21:15:06,358:INFO:_master_model_container: 6
2024-12-04 21:15:06,358:INFO:_display_container: 2
2024-12-04 21:15:06,359:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5533, solver='auto',
                tol=0.0001)
2024-12-04 21:15:06,359:INFO:create_model() successfully completed......................................
2024-12-04 21:15:06,437:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:06,437:INFO:Creating metrics dataframe
2024-12-04 21:15:06,441:INFO:Initializing Random Forest Classifier
2024-12-04 21:15:06,441:INFO:Total runtime is 0.6999706705411276 minutes
2024-12-04 21:15:06,442:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:06,442:INFO:Initializing create_model()
2024-12-04 21:15:06,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:06,442:INFO:Checking exceptions
2024-12-04 21:15:06,442:INFO:Importing libraries
2024-12-04 21:15:06,442:INFO:Copying training dataset
2024-12-04 21:15:06,459:INFO:Defining folds
2024-12-04 21:15:06,459:INFO:Declaring metric variables
2024-12-04 21:15:06,459:INFO:Importing untrained model
2024-12-04 21:15:06,460:INFO:Random Forest Classifier Imported successfully
2024-12-04 21:15:06,460:INFO:Starting cross validation
2024-12-04 21:15:06,461:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:15:17,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,259:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,259:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,276:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,280:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,309:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,309:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,324:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,324:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,336:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,351:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,353:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,363:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,365:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,368:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,379:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,385:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,393:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,471:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,482:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,493:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,916:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,933:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,946:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,949:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,963:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,974:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,997:INFO:Calculating mean and std
2024-12-04 21:15:19,998:INFO:Creating metrics dataframe
2024-12-04 21:15:20,001:INFO:Uploading results into container
2024-12-04 21:15:20,002:INFO:Uploading model into container now
2024-12-04 21:15:20,002:INFO:_master_model_container: 7
2024-12-04 21:15:20,003:INFO:_display_container: 2
2024-12-04 21:15:20,003:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5533, verbose=0,
                       warm_start=False)
2024-12-04 21:15:20,003:INFO:create_model() successfully completed......................................
2024-12-04 21:15:20,092:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:20,092:INFO:Creating metrics dataframe
2024-12-04 21:15:20,096:INFO:Initializing Quadratic Discriminant Analysis
2024-12-04 21:15:20,096:INFO:Total runtime is 0.9275567968686422 minutes
2024-12-04 21:15:20,096:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:20,096:INFO:Initializing create_model()
2024-12-04 21:15:20,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:20,096:INFO:Checking exceptions
2024-12-04 21:15:20,096:INFO:Importing libraries
2024-12-04 21:15:20,096:INFO:Copying training dataset
2024-12-04 21:15:20,128:INFO:Defining folds
2024-12-04 21:15:20,128:INFO:Declaring metric variables
2024-12-04 21:15:20,128:INFO:Importing untrained model
2024-12-04 21:15:20,129:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-04 21:15:20,129:INFO:Starting cross validation
2024-12-04 21:15:20,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:15:20,449:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,457:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,475:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,482:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,489:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,505:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,509:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,515:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,523:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,529:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,546:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,547:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,553:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,556:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,561:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,565:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,567:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,569:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,573:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,577:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,580:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,582:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,583:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,595:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,598:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,605:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,614:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,615:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,619:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,621:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,635:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,637:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,661:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,666:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,676:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,677:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,679:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,688:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,689:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,904:INFO:Calculating mean and std
2024-12-04 21:15:20,950:INFO:Creating metrics dataframe
2024-12-04 21:15:20,962:INFO:Uploading results into container
2024-12-04 21:15:20,963:INFO:Uploading model into container now
2024-12-04 21:15:20,965:INFO:_master_model_container: 8
2024-12-04 21:15:20,965:INFO:_display_container: 2
2024-12-04 21:15:20,968:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-04 21:15:20,971:INFO:create_model() successfully completed......................................
2024-12-04 21:15:21,119:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:21,120:INFO:Creating metrics dataframe
2024-12-04 21:15:21,126:INFO:Initializing Ada Boost Classifier
2024-12-04 21:15:21,126:INFO:Total runtime is 0.9447174350420634 minutes
2024-12-04 21:15:21,126:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:21,126:INFO:Initializing create_model()
2024-12-04 21:15:21,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:21,127:INFO:Checking exceptions
2024-12-04 21:15:21,127:INFO:Importing libraries
2024-12-04 21:15:21,127:INFO:Copying training dataset
2024-12-04 21:15:21,175:INFO:Defining folds
2024-12-04 21:15:21,175:INFO:Declaring metric variables
2024-12-04 21:15:21,176:INFO:Importing untrained model
2024-12-04 21:15:21,176:INFO:Ada Boost Classifier Imported successfully
2024-12-04 21:15:21,177:INFO:Starting cross validation
2024-12-04 21:15:21,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:15:21,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:21,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:21,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:21,379:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:21,379:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:21,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:21,387:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:23,744:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:23,751:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,781:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,796:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,809:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:23,815:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,833:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,846:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,894:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:23,954:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:23,963:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:23,970:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,994:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:24,000:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,001:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,014:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,018:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,047:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,223:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:24,229:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,244:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,270:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,287:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:24,294:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,310:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,330:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,378:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:24,385:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,398:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:24,405:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,409:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,420:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,427:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,438:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,743:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:25,749:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,760:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,771:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,834:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:25,839:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,848:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,860:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,878:INFO:Calculating mean and std
2024-12-04 21:15:25,880:INFO:Creating metrics dataframe
2024-12-04 21:15:25,885:INFO:Uploading results into container
2024-12-04 21:15:25,885:INFO:Uploading model into container now
2024-12-04 21:15:25,886:INFO:_master_model_container: 9
2024-12-04 21:15:25,887:INFO:_display_container: 2
2024-12-04 21:15:25,888:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5533)
2024-12-04 21:15:25,888:INFO:create_model() successfully completed......................................
2024-12-04 21:15:25,978:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:25,978:INFO:Creating metrics dataframe
2024-12-04 21:15:25,984:INFO:Initializing Gradient Boosting Classifier
2024-12-04 21:15:25,984:INFO:Total runtime is 1.0256857872009277 minutes
2024-12-04 21:15:25,985:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:25,985:INFO:Initializing create_model()
2024-12-04 21:15:25,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:25,985:INFO:Checking exceptions
2024-12-04 21:15:25,985:INFO:Importing libraries
2024-12-04 21:15:25,985:INFO:Copying training dataset
2024-12-04 21:15:26,014:INFO:Defining folds
2024-12-04 21:15:26,014:INFO:Declaring metric variables
2024-12-04 21:15:26,014:INFO:Importing untrained model
2024-12-04 21:15:26,015:INFO:Gradient Boosting Classifier Imported successfully
2024-12-04 21:15:26,016:INFO:Starting cross validation
2024-12-04 21:15:26,018:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:16:34,717:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:34,725:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:34,750:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:34,772:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:37,837:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:37,844:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:37,859:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:37,913:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:37,967:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:37,972:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:37,975:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:37,979:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:37,995:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:38,010:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:38,013:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:38,027:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:38,779:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:38,787:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:38,803:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:38,821:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:39,112:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:39,118:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:39,133:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:39,149:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:40,602:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:40,609:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:40,623:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:40,635:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:40,636:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:40,643:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:40,656:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:40,671:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:05,622:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:05,626:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:05,633:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:05,642:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:06,848:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:06,851:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:06,858:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:06,864:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:06,890:INFO:Calculating mean and std
2024-12-04 21:17:06,898:INFO:Creating metrics dataframe
2024-12-04 21:17:06,928:INFO:Uploading results into container
2024-12-04 21:17:06,932:INFO:Uploading model into container now
2024-12-04 21:17:06,940:INFO:_master_model_container: 10
2024-12-04 21:17:06,940:INFO:_display_container: 2
2024-12-04 21:17:06,944:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5533, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-04 21:17:06,944:INFO:create_model() successfully completed......................................
2024-12-04 21:17:07,335:INFO:SubProcess create_model() end ==================================
2024-12-04 21:17:07,335:INFO:Creating metrics dataframe
2024-12-04 21:17:07,340:INFO:Initializing Linear Discriminant Analysis
2024-12-04 21:17:07,340:INFO:Total runtime is 2.714960757891337 minutes
2024-12-04 21:17:07,340:INFO:SubProcess create_model() called ==================================
2024-12-04 21:17:07,340:INFO:Initializing create_model()
2024-12-04 21:17:07,340:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:17:07,340:INFO:Checking exceptions
2024-12-04 21:17:07,341:INFO:Importing libraries
2024-12-04 21:17:07,342:INFO:Copying training dataset
2024-12-04 21:17:07,363:INFO:Defining folds
2024-12-04 21:17:07,364:INFO:Declaring metric variables
2024-12-04 21:17:07,364:INFO:Importing untrained model
2024-12-04 21:17:07,364:INFO:Linear Discriminant Analysis Imported successfully
2024-12-04 21:17:07,364:INFO:Starting cross validation
2024-12-04 21:17:07,366:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:17:07,571:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,578:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,581:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,584:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,585:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,590:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,598:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,604:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,604:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,606:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,607:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,609:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,613:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,615:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,621:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,625:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,628:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,628:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,630:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,631:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,631:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,643:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,647:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,655:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,660:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,669:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,672:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,675:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,675:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,690:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,704:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,740:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,745:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,750:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,753:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,754:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,761:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,762:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,768:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,784:INFO:Calculating mean and std
2024-12-04 21:17:07,785:INFO:Creating metrics dataframe
2024-12-04 21:17:07,786:INFO:Uploading results into container
2024-12-04 21:17:07,787:INFO:Uploading model into container now
2024-12-04 21:17:07,788:INFO:_master_model_container: 11
2024-12-04 21:17:07,788:INFO:_display_container: 2
2024-12-04 21:17:07,788:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-04 21:17:07,788:INFO:create_model() successfully completed......................................
2024-12-04 21:17:07,871:INFO:SubProcess create_model() end ==================================
2024-12-04 21:17:07,871:INFO:Creating metrics dataframe
2024-12-04 21:17:07,876:INFO:Initializing Extra Trees Classifier
2024-12-04 21:17:07,877:INFO:Total runtime is 2.723903894424438 minutes
2024-12-04 21:17:07,877:INFO:SubProcess create_model() called ==================================
2024-12-04 21:17:07,877:INFO:Initializing create_model()
2024-12-04 21:17:07,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:17:07,877:INFO:Checking exceptions
2024-12-04 21:17:07,878:INFO:Importing libraries
2024-12-04 21:17:07,878:INFO:Copying training dataset
2024-12-04 21:17:07,895:INFO:Defining folds
2024-12-04 21:17:07,895:INFO:Declaring metric variables
2024-12-04 21:17:07,895:INFO:Importing untrained model
2024-12-04 21:17:07,896:INFO:Extra Trees Classifier Imported successfully
2024-12-04 21:17:07,896:INFO:Starting cross validation
2024-12-04 21:17:07,897:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:17:16,523:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,573:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,582:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,587:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,600:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,617:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,619:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,631:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,635:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,647:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,648:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,686:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,700:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,713:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,714:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,728:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,732:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,940:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,956:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:17,016:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:17,304:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:17,512:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:17,529:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:18,926:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:18,946:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:19,018:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:19,027:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:19,038:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:19,098:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:19,134:INFO:Calculating mean and std
2024-12-04 21:17:19,136:INFO:Creating metrics dataframe
2024-12-04 21:17:19,140:INFO:Uploading results into container
2024-12-04 21:17:19,141:INFO:Uploading model into container now
2024-12-04 21:17:19,143:INFO:_master_model_container: 12
2024-12-04 21:17:19,143:INFO:_display_container: 2
2024-12-04 21:17:19,145:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5533, verbose=0,
                     warm_start=False)
2024-12-04 21:17:19,145:INFO:create_model() successfully completed......................................
2024-12-04 21:17:19,292:INFO:SubProcess create_model() end ==================================
2024-12-04 21:17:19,292:INFO:Creating metrics dataframe
2024-12-04 21:17:19,452:INFO:Initializing Extreme Gradient Boosting
2024-12-04 21:17:19,452:INFO:Total runtime is 2.9168253183364863 minutes
2024-12-04 21:17:19,452:INFO:SubProcess create_model() called ==================================
2024-12-04 21:17:19,453:INFO:Initializing create_model()
2024-12-04 21:17:19,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:17:19,453:INFO:Checking exceptions
2024-12-04 21:17:19,453:INFO:Importing libraries
2024-12-04 21:17:19,453:INFO:Copying training dataset
2024-12-04 21:17:19,473:INFO:Defining folds
2024-12-04 21:17:19,474:INFO:Declaring metric variables
2024-12-04 21:17:19,474:INFO:Importing untrained model
2024-12-04 21:17:19,635:INFO:Extreme Gradient Boosting Imported successfully
2024-12-04 21:17:19,640:INFO:Starting cross validation
2024-12-04 21:17:19,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:18:05,555:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:05,577:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:05,597:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:05,700:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:05,717:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:05,740:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,598:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,617:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,672:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,768:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,784:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,797:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,834:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,847:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,893:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:07,366:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:07,381:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:07,395:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:07,814:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:07,823:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:07,835:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:08,087:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:08,099:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:08,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,074:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,084:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,093:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,439:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,447:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,455:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,472:INFO:Calculating mean and std
2024-12-04 21:18:22,474:INFO:Creating metrics dataframe
2024-12-04 21:18:22,478:INFO:Uploading results into container
2024-12-04 21:18:22,479:INFO:Uploading model into container now
2024-12-04 21:18:22,480:INFO:_master_model_container: 13
2024-12-04 21:18:22,480:INFO:_display_container: 2
2024-12-04 21:18:22,481:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic',
              predictor=None, random_state=5533, reg_alpha=None, ...)
2024-12-04 21:18:22,481:INFO:create_model() successfully completed......................................
2024-12-04 21:18:22,569:INFO:SubProcess create_model() end ==================================
2024-12-04 21:18:22,570:INFO:Creating metrics dataframe
2024-12-04 21:18:22,575:INFO:Initializing Light Gradient Boosting Machine
2024-12-04 21:18:22,575:INFO:Total runtime is 3.968869082132975 minutes
2024-12-04 21:18:22,575:INFO:SubProcess create_model() called ==================================
2024-12-04 21:18:22,575:INFO:Initializing create_model()
2024-12-04 21:18:22,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:18:22,575:INFO:Checking exceptions
2024-12-04 21:18:22,575:INFO:Importing libraries
2024-12-04 21:18:22,576:INFO:Copying training dataset
2024-12-04 21:18:22,594:INFO:Defining folds
2024-12-04 21:18:22,594:INFO:Declaring metric variables
2024-12-04 21:18:22,594:INFO:Importing untrained model
2024-12-04 21:18:22,595:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-04 21:18:22,595:INFO:Starting cross validation
2024-12-04 21:18:22,596:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:18:32,714:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,714:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,728:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,729:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,747:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,749:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,755:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,768:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,786:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,114:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,132:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,156:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,157:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,215:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,237:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,316:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,330:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,344:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:34,348:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:34,350:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:34,361:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:34,364:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:34,375:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:34,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,678:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,678:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,689:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,693:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,701:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,708:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,727:INFO:Calculating mean and std
2024-12-04 21:18:36,728:INFO:Creating metrics dataframe
2024-12-04 21:18:36,733:INFO:Uploading results into container
2024-12-04 21:18:36,734:INFO:Uploading model into container now
2024-12-04 21:18:36,735:INFO:_master_model_container: 14
2024-12-04 21:18:36,735:INFO:_display_container: 2
2024-12-04 21:18:36,735:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5533, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-04 21:18:36,735:INFO:create_model() successfully completed......................................
2024-12-04 21:18:36,860:INFO:SubProcess create_model() end ==================================
2024-12-04 21:18:36,860:INFO:Creating metrics dataframe
2024-12-04 21:18:36,868:INFO:Initializing Dummy Classifier
2024-12-04 21:18:36,869:INFO:Total runtime is 4.207104746500651 minutes
2024-12-04 21:18:36,869:INFO:SubProcess create_model() called ==================================
2024-12-04 21:18:36,869:INFO:Initializing create_model()
2024-12-04 21:18:36,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:18:36,870:INFO:Checking exceptions
2024-12-04 21:18:36,870:INFO:Importing libraries
2024-12-04 21:18:36,870:INFO:Copying training dataset
2024-12-04 21:18:36,899:INFO:Defining folds
2024-12-04 21:18:36,900:INFO:Declaring metric variables
2024-12-04 21:18:36,900:INFO:Importing untrained model
2024-12-04 21:18:36,901:INFO:Dummy Classifier Imported successfully
2024-12-04 21:18:36,901:INFO:Starting cross validation
2024-12-04 21:18:36,903:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:18:37,063:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,075:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,077:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,079:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,083:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,089:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,091:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,092:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,093:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,093:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,099:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,100:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,100:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,102:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,104:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,105:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,105:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,106:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,107:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,112:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,115:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,120:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,120:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,122:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,127:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,131:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,134:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,140:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,149:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,163:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,169:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,216:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,218:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,225:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,227:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,233:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,234:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,238:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,239:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,260:INFO:Calculating mean and std
2024-12-04 21:18:37,261:INFO:Creating metrics dataframe
2024-12-04 21:18:37,263:INFO:Uploading results into container
2024-12-04 21:18:37,264:INFO:Uploading model into container now
2024-12-04 21:18:37,265:INFO:_master_model_container: 15
2024-12-04 21:18:37,265:INFO:_display_container: 2
2024-12-04 21:18:37,267:INFO:DummyClassifier(constant=None, random_state=5533, strategy='prior')
2024-12-04 21:18:37,267:INFO:create_model() successfully completed......................................
2024-12-04 21:18:37,370:INFO:SubProcess create_model() end ==================================
2024-12-04 21:18:37,370:INFO:Creating metrics dataframe
2024-12-04 21:18:37,439:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-04 21:18:37,441:INFO:Initializing create_model()
2024-12-04 21:18:37,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:18:37,442:INFO:Checking exceptions
2024-12-04 21:18:37,444:INFO:Importing libraries
2024-12-04 21:18:37,444:INFO:Copying training dataset
2024-12-04 21:18:37,470:INFO:Defining folds
2024-12-04 21:18:37,470:INFO:Declaring metric variables
2024-12-04 21:18:37,471:INFO:Importing untrained model
2024-12-04 21:18:37,471:INFO:Declaring custom model
2024-12-04 21:18:37,472:INFO:Naive Bayes Imported successfully
2024-12-04 21:18:37,473:INFO:Cross validation set to False
2024-12-04 21:18:37,473:INFO:Fitting Model
2024-12-04 21:18:37,507:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 21:18:37,507:INFO:create_model() successfully completed......................................
2024-12-04 21:18:37,592:INFO:_master_model_container: 15
2024-12-04 21:18:37,592:INFO:_display_container: 2
2024-12-04 21:18:37,592:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 21:18:37,592:INFO:compare_models() successfully completed......................................
2024-12-04 21:18:37,595:INFO:Initializing evaluate_model()
2024-12-04 21:18:37,595:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-12-04 21:18:38,911:INFO:Initializing plot_model()
2024-12-04 21:18:38,912:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-12-04 21:18:38,912:INFO:Checking exceptions
2024-12-04 21:18:38,925:INFO:Preloading libraries
2024-12-04 21:18:38,925:INFO:Copying training dataset
2024-12-04 21:18:38,925:INFO:Plot type: pipeline
2024-12-04 21:18:40,519:INFO:Visual Rendered Successfully
2024-12-04 21:18:40,608:INFO:plot_model() successfully completed......................................
2024-12-04 21:18:40,609:INFO:Initializing plot_model()
2024-12-04 21:18:40,609:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 21:18:40,609:INFO:Checking exceptions
2024-12-04 21:18:40,618:INFO:Preloading libraries
2024-12-04 21:18:40,618:INFO:Copying training dataset
2024-12-04 21:18:40,618:INFO:Plot type: auc
2024-12-04 21:18:40,871:INFO:Fitting Model
2024-12-04 21:18:40,883:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2024-12-04 21:18:40,884:INFO:Scoring test/hold-out set
2024-12-04 21:18:41,458:INFO:Visual Rendered Successfully
2024-12-04 21:18:41,582:INFO:plot_model() successfully completed......................................
2024-12-04 21:18:41,582:INFO:Initializing plot_model()
2024-12-04 21:18:41,582:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 21:18:41,582:INFO:Checking exceptions
2024-12-04 21:18:41,595:INFO:Preloading libraries
2024-12-04 21:18:41,597:INFO:Copying training dataset
2024-12-04 21:18:41,597:INFO:Plot type: confusion_matrix
2024-12-04 21:18:41,927:INFO:Fitting Model
2024-12-04 21:18:41,928:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2024-12-04 21:18:41,928:INFO:Scoring test/hold-out set
2024-12-04 21:18:42,451:INFO:Visual Rendered Successfully
2024-12-04 21:18:42,554:INFO:plot_model() successfully completed......................................
2024-12-04 21:18:42,555:INFO:Initializing predict_model()
2024-12-04 21:18:42,555:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000029498653EC0>)
2024-12-04 21:18:42,555:INFO:Checking exceptions
2024-12-04 21:18:42,555:INFO:Preloading libraries
2024-12-04 21:18:43,010:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:43,113:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:43,193:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:43,539:INFO:Initializing predict_model()
2024-12-04 21:18:43,539:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000029498653EC0>)
2024-12-04 21:18:43,540:INFO:Checking exceptions
2024-12-04 21:18:43,540:INFO:Preloading libraries
2024-12-04 21:18:43,540:INFO:Set up data.
2024-12-04 21:18:43,593:INFO:Set up index.
2024-12-04 21:18:43,776:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:43,830:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:43,889:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:44,119:INFO:Initializing save_model()
2024-12-04 21:18:44,119:INFO:save_model(model=GaussianNB(priors=None, var_smoothing=1e-09), model_name=Airflow/models/my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-12-04 21:18:44,120:INFO:Adding model into prep_pipe
2024-12-04 21:18:44,128:INFO:Airflow/models/my_best_pipeline.pkl saved in current working directory
2024-12-04 21:18:44,135:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnicity', 'Family_History',
                                             'Comorbidity_Diabet...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2024-12-04 21:18:44,135:INFO:save_model() successfully completed......................................
