2024-12-04 21:14:06,007:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 21:14:06,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 21:14:06,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 21:14:06,008:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 21:14:22,111:INFO:PyCaret ClassificationExperiment
2024-12-04 21:14:22,112:INFO:Logging name: clf-default-name
2024-12-04 21:14:22,112:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-04 21:14:22,112:INFO:version 3.3.2
2024-12-04 21:14:22,112:INFO:Initializing setup()
2024-12-04 21:14:22,112:INFO:self.USI: ea4c
2024-12-04 21:14:22,112:INFO:self._variable_keys: {'idx', '_ml_usecase', 'seed', 'pipeline', 'gpu_n_jobs_param', 'USI', 'X_train', 'fold_shuffle_param', 'target_param', '_available_plots', 'memory', 'is_multiclass', 'gpu_param', 'log_plots_param', 'y', 'exp_id', 'y_test', 'X_test', 'data', 'n_jobs_param', 'y_train', 'logging_param', 'fold_generator', 'html_param', 'exp_name_log', 'X', 'fix_imbalance', 'fold_groups_param'}
2024-12-04 21:14:22,112:INFO:Checking environment
2024-12-04 21:14:22,112:INFO:python_version: 3.11.9
2024-12-04 21:14:22,112:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-12-04 21:14:22,113:INFO:machine: AMD64
2024-12-04 21:14:22,168:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-04 21:14:22,178:INFO:Memory: svmem(total=8345964544, available=623091712, percent=92.5, used=7722872832, free=623091712)
2024-12-04 21:14:22,179:INFO:Physical Core: 4
2024-12-04 21:14:22,179:INFO:Logical Core: 8
2024-12-04 21:14:22,179:INFO:Checking libraries
2024-12-04 21:14:22,179:INFO:System:
2024-12-04 21:14:22,179:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-12-04 21:14:22,179:INFO:executable: C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Scripts\python.exe
2024-12-04 21:14:22,179:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-04 21:14:22,179:INFO:PyCaret required dependencies:
2024-12-04 21:14:22,303:INFO:                 pip: 24.3.1
2024-12-04 21:14:22,303:INFO:          setuptools: 68.2.0
2024-12-04 21:14:22,303:INFO:             pycaret: 3.3.2
2024-12-04 21:14:22,303:INFO:             IPython: 8.29.0
2024-12-04 21:14:22,303:INFO:          ipywidgets: 8.1.5
2024-12-04 21:14:22,303:INFO:                tqdm: 4.67.0
2024-12-04 21:14:22,304:INFO:               numpy: 1.26.4
2024-12-04 21:14:22,304:INFO:              pandas: 2.1.4
2024-12-04 21:14:22,304:INFO:              jinja2: 3.1.4
2024-12-04 21:14:22,305:INFO:               scipy: 1.11.4
2024-12-04 21:14:22,305:INFO:              joblib: 1.3.2
2024-12-04 21:14:22,305:INFO:             sklearn: 1.4.2
2024-12-04 21:14:22,305:INFO:                pyod: 2.0.2
2024-12-04 21:14:22,305:INFO:            imblearn: 0.12.4
2024-12-04 21:14:22,305:INFO:   category_encoders: 2.6.4
2024-12-04 21:14:22,305:INFO:            lightgbm: 4.5.0
2024-12-04 21:14:22,305:INFO:               numba: 0.60.0
2024-12-04 21:14:22,305:INFO:            requests: 2.32.3
2024-12-04 21:14:22,305:INFO:          matplotlib: 3.7.5
2024-12-04 21:14:22,305:INFO:          scikitplot: 0.3.7
2024-12-04 21:14:22,305:INFO:         yellowbrick: 1.5
2024-12-04 21:14:22,305:INFO:              plotly: 5.24.1
2024-12-04 21:14:22,305:INFO:    plotly-resampler: Not installed
2024-12-04 21:14:22,305:INFO:             kaleido: 0.2.1
2024-12-04 21:14:22,306:INFO:           schemdraw: 0.15
2024-12-04 21:14:22,306:INFO:         statsmodels: 0.14.4
2024-12-04 21:14:22,306:INFO:              sktime: 0.26.0
2024-12-04 21:14:22,306:INFO:               tbats: 1.1.3
2024-12-04 21:14:22,306:INFO:            pmdarima: 2.0.4
2024-12-04 21:14:22,306:INFO:              psutil: 6.1.0
2024-12-04 21:14:22,306:INFO:          markupsafe: 2.1.5
2024-12-04 21:14:22,306:INFO:             pickle5: Not installed
2024-12-04 21:14:22,306:INFO:         cloudpickle: 3.1.0
2024-12-04 21:14:22,306:INFO:         deprecation: 2.1.0
2024-12-04 21:14:22,306:INFO:              xxhash: 3.5.0
2024-12-04 21:14:22,306:INFO:           wurlitzer: Not installed
2024-12-04 21:14:22,306:INFO:PyCaret optional dependencies:
2024-12-04 21:14:22,332:INFO:                shap: Not installed
2024-12-04 21:14:22,332:INFO:           interpret: Not installed
2024-12-04 21:14:22,332:INFO:                umap: Not installed
2024-12-04 21:14:22,332:INFO:     ydata_profiling: Not installed
2024-12-04 21:14:22,332:INFO:  explainerdashboard: Not installed
2024-12-04 21:14:22,332:INFO:             autoviz: 0.1.905
2024-12-04 21:14:22,332:INFO:           fairlearn: Not installed
2024-12-04 21:14:22,332:INFO:          deepchecks: Not installed
2024-12-04 21:14:22,332:INFO:             xgboost: 1.6.2
2024-12-04 21:14:22,332:INFO:            catboost: Not installed
2024-12-04 21:14:22,332:INFO:              kmodes: Not installed
2024-12-04 21:14:22,332:INFO:             mlxtend: Not installed
2024-12-04 21:14:22,332:INFO:       statsforecast: Not installed
2024-12-04 21:14:22,332:INFO:        tune_sklearn: Not installed
2024-12-04 21:14:22,332:INFO:                 ray: Not installed
2024-12-04 21:14:22,332:INFO:            hyperopt: Not installed
2024-12-04 21:14:22,333:INFO:              optuna: Not installed
2024-12-04 21:14:22,333:INFO:               skopt: Not installed
2024-12-04 21:14:22,333:INFO:              mlflow: Not installed
2024-12-04 21:14:22,333:INFO:              gradio: Not installed
2024-12-04 21:14:22,333:INFO:             fastapi: Not installed
2024-12-04 21:14:22,333:INFO:             uvicorn: Not installed
2024-12-04 21:14:22,333:INFO:              m2cgen: Not installed
2024-12-04 21:14:22,333:INFO:           evidently: Not installed
2024-12-04 21:14:22,333:INFO:               fugue: Not installed
2024-12-04 21:14:22,333:INFO:           streamlit: Not installed
2024-12-04 21:14:22,333:INFO:             prophet: Not installed
2024-12-04 21:14:22,333:INFO:None
2024-12-04 21:14:22,333:INFO:Set up data.
2024-12-04 21:14:22,368:INFO:Set up folding strategy.
2024-12-04 21:14:22,368:INFO:Set up train/test split.
2024-12-04 21:14:22,415:INFO:Set up index.
2024-12-04 21:14:22,415:INFO:Assigning column types.
2024-12-04 21:14:22,433:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-04 21:14:22,495:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 21:14:22,511:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 21:14:22,593:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:23,274:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:23,340:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 21:14:23,341:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 21:14:23,382:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:23,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:23,387:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-04 21:14:23,457:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 21:14:23,507:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:23,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:23,584:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 21:14:23,633:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:23,639:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:23,639:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-04 21:14:23,749:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:23,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:23,856:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:23,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:23,865:INFO:Preparing preprocessing pipeline...
2024-12-04 21:14:23,870:INFO:Set up label encoding.
2024-12-04 21:14:23,871:INFO:Set up simple imputation.
2024-12-04 21:14:23,938:INFO:Finished creating preprocessing pipeline.
2024-12-04 21:14:23,951:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-04 21:14:23,951:INFO:Creating final display dataframe.
2024-12-04 21:14:24,188:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               5533
1                        Target                                          Treatment
2                   Target type                                         Multiclass
3                Target mapping  Chemotherapy: 0, Radiation Therapy: 1, Surgery...
4           Original data shape                                        (11592, 36)
5        Transformed data shape                                        (11592, 36)
6   Transformed train set shape                                         (8114, 36)
7    Transformed test set shape                                         (3478, 36)
8              Numeric features                                                 35
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               ea4c
2024-12-04 21:14:24,292:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:24,296:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:24,408:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 21:14:24,412:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 21:14:24,413:INFO:setup() successfully completed in 2.31s...............
2024-12-04 21:14:24,414:INFO:Initializing compare_models()
2024-12-04 21:14:24,414:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-12-04 21:14:24,414:INFO:Checking exceptions
2024-12-04 21:14:24,432:INFO:Preparing display monitor
2024-12-04 21:14:24,443:INFO:Initializing Logistic Regression
2024-12-04 21:14:24,443:INFO:Total runtime is 0.0 minutes
2024-12-04 21:14:24,443:INFO:SubProcess create_model() called ==================================
2024-12-04 21:14:24,444:INFO:Initializing create_model()
2024-12-04 21:14:24,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:14:24,444:INFO:Checking exceptions
2024-12-04 21:14:24,444:INFO:Importing libraries
2024-12-04 21:14:24,444:INFO:Copying training dataset
2024-12-04 21:14:24,473:INFO:Defining folds
2024-12-04 21:14:24,473:INFO:Declaring metric variables
2024-12-04 21:14:24,474:INFO:Importing untrained model
2024-12-04 21:14:24,474:INFO:Logistic Regression Imported successfully
2024-12-04 21:14:24,474:INFO:Starting cross validation
2024-12-04 21:14:24,475:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:14:48,643:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,644:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,645:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,652:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,654:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,669:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,670:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,670:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,670:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,672:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,692:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,695:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,699:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,699:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,699:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,710:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,712:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,712:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,713:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,716:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,719:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,724:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,732:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,736:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:48,745:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,761:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,774:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,785:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:48,795:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,209:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:49,209:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:14:49,214:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,216:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,224:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,225:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,244:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,245:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:49,281:INFO:Calculating mean and std
2024-12-04 21:14:49,286:INFO:Creating metrics dataframe
2024-12-04 21:14:49,320:INFO:Uploading results into container
2024-12-04 21:14:49,327:INFO:Uploading model into container now
2024-12-04 21:14:49,333:INFO:_master_model_container: 1
2024-12-04 21:14:49,334:INFO:_display_container: 2
2024-12-04 21:14:49,335:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5533, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-04 21:14:49,335:INFO:create_model() successfully completed......................................
2024-12-04 21:14:51,966:INFO:SubProcess create_model() end ==================================
2024-12-04 21:14:51,966:INFO:Creating metrics dataframe
2024-12-04 21:14:51,985:INFO:Initializing K Neighbors Classifier
2024-12-04 21:14:51,985:INFO:Total runtime is 0.459041440486908 minutes
2024-12-04 21:14:51,985:INFO:SubProcess create_model() called ==================================
2024-12-04 21:14:51,986:INFO:Initializing create_model()
2024-12-04 21:14:51,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:14:51,986:INFO:Checking exceptions
2024-12-04 21:14:51,986:INFO:Importing libraries
2024-12-04 21:14:52,031:INFO:Copying training dataset
2024-12-04 21:14:52,158:INFO:Defining folds
2024-12-04 21:14:52,159:INFO:Declaring metric variables
2024-12-04 21:14:52,165:INFO:Importing untrained model
2024-12-04 21:14:52,166:INFO:K Neighbors Classifier Imported successfully
2024-12-04 21:14:52,167:INFO:Starting cross validation
2024-12-04 21:14:52,173:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:14:57,585:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,650:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,683:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,700:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,710:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,716:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,740:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,745:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:57,764:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,036:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,066:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,103:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,113:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,166:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,182:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,183:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,186:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,204:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,218:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,243:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,250:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,253:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,276:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,369:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,397:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,423:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,592:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,614:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,634:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:58,663:INFO:Calculating mean and std
2024-12-04 21:14:58,664:INFO:Creating metrics dataframe
2024-12-04 21:14:58,668:INFO:Uploading results into container
2024-12-04 21:14:58,670:INFO:Uploading model into container now
2024-12-04 21:14:58,671:INFO:_master_model_container: 2
2024-12-04 21:14:58,672:INFO:_display_container: 2
2024-12-04 21:14:58,672:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-04 21:14:58,672:INFO:create_model() successfully completed......................................
2024-12-04 21:14:58,886:INFO:SubProcess create_model() end ==================================
2024-12-04 21:14:58,886:INFO:Creating metrics dataframe
2024-12-04 21:14:58,903:INFO:Initializing Naive Bayes
2024-12-04 21:14:58,903:INFO:Total runtime is 0.5743334253629049 minutes
2024-12-04 21:14:58,904:INFO:SubProcess create_model() called ==================================
2024-12-04 21:14:58,904:INFO:Initializing create_model()
2024-12-04 21:14:58,904:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:14:58,904:INFO:Checking exceptions
2024-12-04 21:14:58,904:INFO:Importing libraries
2024-12-04 21:14:58,905:INFO:Copying training dataset
2024-12-04 21:14:58,969:INFO:Defining folds
2024-12-04 21:14:58,970:INFO:Declaring metric variables
2024-12-04 21:14:58,971:INFO:Importing untrained model
2024-12-04 21:14:58,974:INFO:Naive Bayes Imported successfully
2024-12-04 21:14:58,975:INFO:Starting cross validation
2024-12-04 21:14:58,978:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:14:59,263:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,279:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,294:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,305:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,316:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,336:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,503:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,535:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,542:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,560:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,566:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,569:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,598:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,600:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,627:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,628:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,632:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,632:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,653:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,671:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,677:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,708:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,720:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,731:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,758:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,827:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,924:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,948:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:14:59,977:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:00,026:INFO:Calculating mean and std
2024-12-04 21:15:00,028:INFO:Creating metrics dataframe
2024-12-04 21:15:00,036:INFO:Uploading results into container
2024-12-04 21:15:00,051:INFO:Uploading model into container now
2024-12-04 21:15:00,084:INFO:_master_model_container: 3
2024-12-04 21:15:00,084:INFO:_display_container: 2
2024-12-04 21:15:00,085:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 21:15:00,085:INFO:create_model() successfully completed......................................
2024-12-04 21:15:00,368:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:00,368:INFO:Creating metrics dataframe
2024-12-04 21:15:00,378:INFO:Initializing Decision Tree Classifier
2024-12-04 21:15:00,378:INFO:Total runtime is 0.5989306092262269 minutes
2024-12-04 21:15:00,378:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:00,379:INFO:Initializing create_model()
2024-12-04 21:15:00,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:00,379:INFO:Checking exceptions
2024-12-04 21:15:00,380:INFO:Importing libraries
2024-12-04 21:15:00,380:INFO:Copying training dataset
2024-12-04 21:15:00,428:INFO:Defining folds
2024-12-04 21:15:00,428:INFO:Declaring metric variables
2024-12-04 21:15:00,428:INFO:Importing untrained model
2024-12-04 21:15:00,429:INFO:Decision Tree Classifier Imported successfully
2024-12-04 21:15:00,429:INFO:Starting cross validation
2024-12-04 21:15:00,430:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:15:01,579:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,595:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,615:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,640:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,651:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,668:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,674:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,687:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,701:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,841:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,874:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,889:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,893:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,908:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,913:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,926:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,927:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,930:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,949:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,959:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:01,982:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,069:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,087:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,097:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,431:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,442:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,452:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,457:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,467:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,478:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:02,497:INFO:Calculating mean and std
2024-12-04 21:15:02,499:INFO:Creating metrics dataframe
2024-12-04 21:15:02,501:INFO:Uploading results into container
2024-12-04 21:15:02,503:INFO:Uploading model into container now
2024-12-04 21:15:02,503:INFO:_master_model_container: 4
2024-12-04 21:15:02,504:INFO:_display_container: 2
2024-12-04 21:15:02,504:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5533, splitter='best')
2024-12-04 21:15:02,504:INFO:create_model() successfully completed......................................
2024-12-04 21:15:02,577:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:02,577:INFO:Creating metrics dataframe
2024-12-04 21:15:02,580:INFO:Initializing SVM - Linear Kernel
2024-12-04 21:15:02,580:INFO:Total runtime is 0.6356274962425232 minutes
2024-12-04 21:15:02,581:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:02,581:INFO:Initializing create_model()
2024-12-04 21:15:02,581:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:02,581:INFO:Checking exceptions
2024-12-04 21:15:02,581:INFO:Importing libraries
2024-12-04 21:15:02,581:INFO:Copying training dataset
2024-12-04 21:15:02,603:INFO:Defining folds
2024-12-04 21:15:02,603:INFO:Declaring metric variables
2024-12-04 21:15:02,603:INFO:Importing untrained model
2024-12-04 21:15:02,604:INFO:SVM - Linear Kernel Imported successfully
2024-12-04 21:15:02,604:INFO:Starting cross validation
2024-12-04 21:15:02,605:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:15:04,608:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,615:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,626:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,629:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,633:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,639:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,642:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,643:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,646:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,647:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,648:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,648:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,657:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,663:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,664:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,664:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,674:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,676:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,678:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,680:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,682:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,702:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:04,708:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,709:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,711:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,725:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,727:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,729:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,733:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:04,748:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,654:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:05,656:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:05,661:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,664:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,674:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,684:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,689:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:05,728:INFO:Calculating mean and std
2024-12-04 21:15:05,731:INFO:Creating metrics dataframe
2024-12-04 21:15:05,737:INFO:Uploading results into container
2024-12-04 21:15:05,738:INFO:Uploading model into container now
2024-12-04 21:15:05,739:INFO:_master_model_container: 5
2024-12-04 21:15:05,739:INFO:_display_container: 2
2024-12-04 21:15:05,740:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5533, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-04 21:15:05,740:INFO:create_model() successfully completed......................................
2024-12-04 21:15:05,861:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:05,861:INFO:Creating metrics dataframe
2024-12-04 21:15:05,868:INFO:Initializing Ridge Classifier
2024-12-04 21:15:05,869:INFO:Total runtime is 0.6904449621836345 minutes
2024-12-04 21:15:05,869:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:05,870:INFO:Initializing create_model()
2024-12-04 21:15:05,870:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:05,870:INFO:Checking exceptions
2024-12-04 21:15:05,870:INFO:Importing libraries
2024-12-04 21:15:05,870:INFO:Copying training dataset
2024-12-04 21:15:05,921:INFO:Defining folds
2024-12-04 21:15:05,921:INFO:Declaring metric variables
2024-12-04 21:15:05,922:INFO:Importing untrained model
2024-12-04 21:15:05,924:INFO:Ridge Classifier Imported successfully
2024-12-04 21:15:05,925:INFO:Starting cross validation
2024-12-04 21:15:05,927:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:15:06,143:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,144:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,145:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,152:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,153:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,153:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,156:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,161:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,164:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,168:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,171:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,173:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,175:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,176:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,178:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,179:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,186:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,191:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,192:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,192:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,193:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,193:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,195:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,198:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,201:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,208:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,210:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,232:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,246:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,291:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,296:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,299:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:06,304:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,307:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,316:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,321:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,328:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:06,354:INFO:Calculating mean and std
2024-12-04 21:15:06,354:INFO:Creating metrics dataframe
2024-12-04 21:15:06,357:INFO:Uploading results into container
2024-12-04 21:15:06,358:INFO:Uploading model into container now
2024-12-04 21:15:06,358:INFO:_master_model_container: 6
2024-12-04 21:15:06,358:INFO:_display_container: 2
2024-12-04 21:15:06,359:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5533, solver='auto',
                tol=0.0001)
2024-12-04 21:15:06,359:INFO:create_model() successfully completed......................................
2024-12-04 21:15:06,437:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:06,437:INFO:Creating metrics dataframe
2024-12-04 21:15:06,441:INFO:Initializing Random Forest Classifier
2024-12-04 21:15:06,441:INFO:Total runtime is 0.6999706705411276 minutes
2024-12-04 21:15:06,442:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:06,442:INFO:Initializing create_model()
2024-12-04 21:15:06,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:06,442:INFO:Checking exceptions
2024-12-04 21:15:06,442:INFO:Importing libraries
2024-12-04 21:15:06,442:INFO:Copying training dataset
2024-12-04 21:15:06,459:INFO:Defining folds
2024-12-04 21:15:06,459:INFO:Declaring metric variables
2024-12-04 21:15:06,459:INFO:Importing untrained model
2024-12-04 21:15:06,460:INFO:Random Forest Classifier Imported successfully
2024-12-04 21:15:06,460:INFO:Starting cross validation
2024-12-04 21:15:06,461:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:15:17,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,259:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,259:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,276:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,280:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,309:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,309:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,324:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,324:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,336:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,351:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,353:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,363:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,365:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,368:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,379:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,385:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,393:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,471:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,482:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:17,493:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,916:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,933:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,946:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,949:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,963:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,974:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:19,997:INFO:Calculating mean and std
2024-12-04 21:15:19,998:INFO:Creating metrics dataframe
2024-12-04 21:15:20,001:INFO:Uploading results into container
2024-12-04 21:15:20,002:INFO:Uploading model into container now
2024-12-04 21:15:20,002:INFO:_master_model_container: 7
2024-12-04 21:15:20,003:INFO:_display_container: 2
2024-12-04 21:15:20,003:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5533, verbose=0,
                       warm_start=False)
2024-12-04 21:15:20,003:INFO:create_model() successfully completed......................................
2024-12-04 21:15:20,092:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:20,092:INFO:Creating metrics dataframe
2024-12-04 21:15:20,096:INFO:Initializing Quadratic Discriminant Analysis
2024-12-04 21:15:20,096:INFO:Total runtime is 0.9275567968686422 minutes
2024-12-04 21:15:20,096:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:20,096:INFO:Initializing create_model()
2024-12-04 21:15:20,096:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:20,096:INFO:Checking exceptions
2024-12-04 21:15:20,096:INFO:Importing libraries
2024-12-04 21:15:20,096:INFO:Copying training dataset
2024-12-04 21:15:20,128:INFO:Defining folds
2024-12-04 21:15:20,128:INFO:Declaring metric variables
2024-12-04 21:15:20,128:INFO:Importing untrained model
2024-12-04 21:15:20,129:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-04 21:15:20,129:INFO:Starting cross validation
2024-12-04 21:15:20,130:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:15:20,449:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,457:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,475:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,482:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,489:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,505:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,509:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,515:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,523:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,529:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,546:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,547:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,553:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,556:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,561:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,565:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,567:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,569:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,573:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,577:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,580:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,582:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,583:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,595:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,598:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,605:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,614:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,615:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,619:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,621:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,635:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,637:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,661:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,666:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,676:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:20,677:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,679:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,688:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,689:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:20,904:INFO:Calculating mean and std
2024-12-04 21:15:20,950:INFO:Creating metrics dataframe
2024-12-04 21:15:20,962:INFO:Uploading results into container
2024-12-04 21:15:20,963:INFO:Uploading model into container now
2024-12-04 21:15:20,965:INFO:_master_model_container: 8
2024-12-04 21:15:20,965:INFO:_display_container: 2
2024-12-04 21:15:20,968:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-04 21:15:20,971:INFO:create_model() successfully completed......................................
2024-12-04 21:15:21,119:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:21,120:INFO:Creating metrics dataframe
2024-12-04 21:15:21,126:INFO:Initializing Ada Boost Classifier
2024-12-04 21:15:21,126:INFO:Total runtime is 0.9447174350420634 minutes
2024-12-04 21:15:21,126:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:21,126:INFO:Initializing create_model()
2024-12-04 21:15:21,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:21,127:INFO:Checking exceptions
2024-12-04 21:15:21,127:INFO:Importing libraries
2024-12-04 21:15:21,127:INFO:Copying training dataset
2024-12-04 21:15:21,175:INFO:Defining folds
2024-12-04 21:15:21,175:INFO:Declaring metric variables
2024-12-04 21:15:21,176:INFO:Importing untrained model
2024-12-04 21:15:21,176:INFO:Ada Boost Classifier Imported successfully
2024-12-04 21:15:21,177:INFO:Starting cross validation
2024-12-04 21:15:21,179:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:15:21,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:21,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:21,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:21,379:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:21,379:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:21,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:21,387:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:23,744:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:23,751:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,781:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,796:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,809:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:23,815:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,833:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,846:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,894:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:23,954:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 21:15:23,963:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:23,970:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:23,994:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:24,000:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,001:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,014:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,018:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,047:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,223:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:24,229:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,244:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,270:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,287:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:24,294:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,310:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,330:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,378:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:24,385:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,398:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:24,405:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,409:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,420:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,427:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:24,438:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,743:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:25,749:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,760:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,771:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,834:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:15:25,839:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,848:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,860:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:15:25,878:INFO:Calculating mean and std
2024-12-04 21:15:25,880:INFO:Creating metrics dataframe
2024-12-04 21:15:25,885:INFO:Uploading results into container
2024-12-04 21:15:25,885:INFO:Uploading model into container now
2024-12-04 21:15:25,886:INFO:_master_model_container: 9
2024-12-04 21:15:25,887:INFO:_display_container: 2
2024-12-04 21:15:25,888:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5533)
2024-12-04 21:15:25,888:INFO:create_model() successfully completed......................................
2024-12-04 21:15:25,978:INFO:SubProcess create_model() end ==================================
2024-12-04 21:15:25,978:INFO:Creating metrics dataframe
2024-12-04 21:15:25,984:INFO:Initializing Gradient Boosting Classifier
2024-12-04 21:15:25,984:INFO:Total runtime is 1.0256857872009277 minutes
2024-12-04 21:15:25,985:INFO:SubProcess create_model() called ==================================
2024-12-04 21:15:25,985:INFO:Initializing create_model()
2024-12-04 21:15:25,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:15:25,985:INFO:Checking exceptions
2024-12-04 21:15:25,985:INFO:Importing libraries
2024-12-04 21:15:25,985:INFO:Copying training dataset
2024-12-04 21:15:26,014:INFO:Defining folds
2024-12-04 21:15:26,014:INFO:Declaring metric variables
2024-12-04 21:15:26,014:INFO:Importing untrained model
2024-12-04 21:15:26,015:INFO:Gradient Boosting Classifier Imported successfully
2024-12-04 21:15:26,016:INFO:Starting cross validation
2024-12-04 21:15:26,018:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:16:34,717:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:34,725:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:34,750:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:34,772:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:37,837:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:37,844:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:37,859:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:37,913:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:37,967:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:37,972:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:37,975:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:37,979:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:37,995:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:38,010:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:38,013:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:38,027:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:38,779:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:38,787:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:38,803:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:38,821:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:39,112:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:39,118:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:39,133:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:39,149:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:40,602:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:40,609:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:40,623:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:40,635:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:16:40,636:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:40,643:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:40,656:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:16:40,671:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:05,622:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:05,626:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:05,633:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:05,642:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:06,848:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:06,851:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:06,858:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:06,864:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:06,890:INFO:Calculating mean and std
2024-12-04 21:17:06,898:INFO:Creating metrics dataframe
2024-12-04 21:17:06,928:INFO:Uploading results into container
2024-12-04 21:17:06,932:INFO:Uploading model into container now
2024-12-04 21:17:06,940:INFO:_master_model_container: 10
2024-12-04 21:17:06,940:INFO:_display_container: 2
2024-12-04 21:17:06,944:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5533, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-04 21:17:06,944:INFO:create_model() successfully completed......................................
2024-12-04 21:17:07,335:INFO:SubProcess create_model() end ==================================
2024-12-04 21:17:07,335:INFO:Creating metrics dataframe
2024-12-04 21:17:07,340:INFO:Initializing Linear Discriminant Analysis
2024-12-04 21:17:07,340:INFO:Total runtime is 2.714960757891337 minutes
2024-12-04 21:17:07,340:INFO:SubProcess create_model() called ==================================
2024-12-04 21:17:07,340:INFO:Initializing create_model()
2024-12-04 21:17:07,340:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:17:07,340:INFO:Checking exceptions
2024-12-04 21:17:07,341:INFO:Importing libraries
2024-12-04 21:17:07,342:INFO:Copying training dataset
2024-12-04 21:17:07,363:INFO:Defining folds
2024-12-04 21:17:07,364:INFO:Declaring metric variables
2024-12-04 21:17:07,364:INFO:Importing untrained model
2024-12-04 21:17:07,364:INFO:Linear Discriminant Analysis Imported successfully
2024-12-04 21:17:07,364:INFO:Starting cross validation
2024-12-04 21:17:07,366:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:17:07,571:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,578:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,581:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,584:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,585:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,590:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,598:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,604:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,604:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,606:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,607:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,609:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,613:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,615:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,621:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,625:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,628:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,628:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,630:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,631:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,631:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,643:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,647:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,655:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,660:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,669:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,672:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,675:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,675:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,690:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,704:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,740:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,745:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,750:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 21:17:07,753:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,754:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,761:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,762:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,768:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:07,784:INFO:Calculating mean and std
2024-12-04 21:17:07,785:INFO:Creating metrics dataframe
2024-12-04 21:17:07,786:INFO:Uploading results into container
2024-12-04 21:17:07,787:INFO:Uploading model into container now
2024-12-04 21:17:07,788:INFO:_master_model_container: 11
2024-12-04 21:17:07,788:INFO:_display_container: 2
2024-12-04 21:17:07,788:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-04 21:17:07,788:INFO:create_model() successfully completed......................................
2024-12-04 21:17:07,871:INFO:SubProcess create_model() end ==================================
2024-12-04 21:17:07,871:INFO:Creating metrics dataframe
2024-12-04 21:17:07,876:INFO:Initializing Extra Trees Classifier
2024-12-04 21:17:07,877:INFO:Total runtime is 2.723903894424438 minutes
2024-12-04 21:17:07,877:INFO:SubProcess create_model() called ==================================
2024-12-04 21:17:07,877:INFO:Initializing create_model()
2024-12-04 21:17:07,877:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:17:07,877:INFO:Checking exceptions
2024-12-04 21:17:07,878:INFO:Importing libraries
2024-12-04 21:17:07,878:INFO:Copying training dataset
2024-12-04 21:17:07,895:INFO:Defining folds
2024-12-04 21:17:07,895:INFO:Declaring metric variables
2024-12-04 21:17:07,895:INFO:Importing untrained model
2024-12-04 21:17:07,896:INFO:Extra Trees Classifier Imported successfully
2024-12-04 21:17:07,896:INFO:Starting cross validation
2024-12-04 21:17:07,897:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:17:16,523:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,573:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,582:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,587:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,600:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,617:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,619:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,631:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,635:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,647:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,648:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,686:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,700:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,713:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,714:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,728:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,732:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,940:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:16,956:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:17,016:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:17,304:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:17,512:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:17,529:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:18,926:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:18,946:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:19,018:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:19,027:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:19,038:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:19,098:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:17:19,134:INFO:Calculating mean and std
2024-12-04 21:17:19,136:INFO:Creating metrics dataframe
2024-12-04 21:17:19,140:INFO:Uploading results into container
2024-12-04 21:17:19,141:INFO:Uploading model into container now
2024-12-04 21:17:19,143:INFO:_master_model_container: 12
2024-12-04 21:17:19,143:INFO:_display_container: 2
2024-12-04 21:17:19,145:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5533, verbose=0,
                     warm_start=False)
2024-12-04 21:17:19,145:INFO:create_model() successfully completed......................................
2024-12-04 21:17:19,292:INFO:SubProcess create_model() end ==================================
2024-12-04 21:17:19,292:INFO:Creating metrics dataframe
2024-12-04 21:17:19,452:INFO:Initializing Extreme Gradient Boosting
2024-12-04 21:17:19,452:INFO:Total runtime is 2.9168253183364863 minutes
2024-12-04 21:17:19,452:INFO:SubProcess create_model() called ==================================
2024-12-04 21:17:19,453:INFO:Initializing create_model()
2024-12-04 21:17:19,453:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:17:19,453:INFO:Checking exceptions
2024-12-04 21:17:19,453:INFO:Importing libraries
2024-12-04 21:17:19,453:INFO:Copying training dataset
2024-12-04 21:17:19,473:INFO:Defining folds
2024-12-04 21:17:19,474:INFO:Declaring metric variables
2024-12-04 21:17:19,474:INFO:Importing untrained model
2024-12-04 21:17:19,635:INFO:Extreme Gradient Boosting Imported successfully
2024-12-04 21:17:19,640:INFO:Starting cross validation
2024-12-04 21:17:19,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:18:05,555:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:05,577:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:05,597:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:05,700:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:05,717:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:05,740:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,598:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,617:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,672:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,768:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,784:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,797:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,834:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,847:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:06,893:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:07,366:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:07,381:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:07,395:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:07,814:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:07,823:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:07,835:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:08,087:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:08,099:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:08,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,074:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,084:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,093:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,439:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,447:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,455:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:22,472:INFO:Calculating mean and std
2024-12-04 21:18:22,474:INFO:Creating metrics dataframe
2024-12-04 21:18:22,478:INFO:Uploading results into container
2024-12-04 21:18:22,479:INFO:Uploading model into container now
2024-12-04 21:18:22,480:INFO:_master_model_container: 13
2024-12-04 21:18:22,480:INFO:_display_container: 2
2024-12-04 21:18:22,481:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic',
              predictor=None, random_state=5533, reg_alpha=None, ...)
2024-12-04 21:18:22,481:INFO:create_model() successfully completed......................................
2024-12-04 21:18:22,569:INFO:SubProcess create_model() end ==================================
2024-12-04 21:18:22,570:INFO:Creating metrics dataframe
2024-12-04 21:18:22,575:INFO:Initializing Light Gradient Boosting Machine
2024-12-04 21:18:22,575:INFO:Total runtime is 3.968869082132975 minutes
2024-12-04 21:18:22,575:INFO:SubProcess create_model() called ==================================
2024-12-04 21:18:22,575:INFO:Initializing create_model()
2024-12-04 21:18:22,575:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:18:22,575:INFO:Checking exceptions
2024-12-04 21:18:22,575:INFO:Importing libraries
2024-12-04 21:18:22,576:INFO:Copying training dataset
2024-12-04 21:18:22,594:INFO:Defining folds
2024-12-04 21:18:22,594:INFO:Declaring metric variables
2024-12-04 21:18:22,594:INFO:Importing untrained model
2024-12-04 21:18:22,595:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-04 21:18:22,595:INFO:Starting cross validation
2024-12-04 21:18:22,596:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:18:32,714:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,714:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,728:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,729:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,747:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,749:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,755:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,768:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:32,786:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,114:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,132:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,156:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,157:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,215:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,237:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,316:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,330:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:33,344:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:34,348:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:34,350:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:34,361:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:34,364:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:34,375:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:34,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,678:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,678:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,689:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,693:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,701:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,708:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:36,727:INFO:Calculating mean and std
2024-12-04 21:18:36,728:INFO:Creating metrics dataframe
2024-12-04 21:18:36,733:INFO:Uploading results into container
2024-12-04 21:18:36,734:INFO:Uploading model into container now
2024-12-04 21:18:36,735:INFO:_master_model_container: 14
2024-12-04 21:18:36,735:INFO:_display_container: 2
2024-12-04 21:18:36,735:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5533, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-04 21:18:36,735:INFO:create_model() successfully completed......................................
2024-12-04 21:18:36,860:INFO:SubProcess create_model() end ==================================
2024-12-04 21:18:36,860:INFO:Creating metrics dataframe
2024-12-04 21:18:36,868:INFO:Initializing Dummy Classifier
2024-12-04 21:18:36,869:INFO:Total runtime is 4.207104746500651 minutes
2024-12-04 21:18:36,869:INFO:SubProcess create_model() called ==================================
2024-12-04 21:18:36,869:INFO:Initializing create_model()
2024-12-04 21:18:36,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000029498B50110>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:18:36,870:INFO:Checking exceptions
2024-12-04 21:18:36,870:INFO:Importing libraries
2024-12-04 21:18:36,870:INFO:Copying training dataset
2024-12-04 21:18:36,899:INFO:Defining folds
2024-12-04 21:18:36,900:INFO:Declaring metric variables
2024-12-04 21:18:36,900:INFO:Importing untrained model
2024-12-04 21:18:36,901:INFO:Dummy Classifier Imported successfully
2024-12-04 21:18:36,901:INFO:Starting cross validation
2024-12-04 21:18:36,903:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 21:18:37,063:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,075:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,077:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,079:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,083:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,089:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,091:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,092:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,093:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,093:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,099:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,100:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,100:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,102:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,104:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,105:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,105:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,106:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,107:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,112:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,115:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,120:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,120:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,122:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,127:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,131:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,134:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,140:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,149:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,163:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,169:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,216:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,218:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,225:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,227:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,233:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,234:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 21:18:37,238:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,239:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:37,260:INFO:Calculating mean and std
2024-12-04 21:18:37,261:INFO:Creating metrics dataframe
2024-12-04 21:18:37,263:INFO:Uploading results into container
2024-12-04 21:18:37,264:INFO:Uploading model into container now
2024-12-04 21:18:37,265:INFO:_master_model_container: 15
2024-12-04 21:18:37,265:INFO:_display_container: 2
2024-12-04 21:18:37,267:INFO:DummyClassifier(constant=None, random_state=5533, strategy='prior')
2024-12-04 21:18:37,267:INFO:create_model() successfully completed......................................
2024-12-04 21:18:37,370:INFO:SubProcess create_model() end ==================================
2024-12-04 21:18:37,370:INFO:Creating metrics dataframe
2024-12-04 21:18:37,439:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-04 21:18:37,441:INFO:Initializing create_model()
2024-12-04 21:18:37,442:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 21:18:37,442:INFO:Checking exceptions
2024-12-04 21:18:37,444:INFO:Importing libraries
2024-12-04 21:18:37,444:INFO:Copying training dataset
2024-12-04 21:18:37,470:INFO:Defining folds
2024-12-04 21:18:37,470:INFO:Declaring metric variables
2024-12-04 21:18:37,471:INFO:Importing untrained model
2024-12-04 21:18:37,471:INFO:Declaring custom model
2024-12-04 21:18:37,472:INFO:Naive Bayes Imported successfully
2024-12-04 21:18:37,473:INFO:Cross validation set to False
2024-12-04 21:18:37,473:INFO:Fitting Model
2024-12-04 21:18:37,507:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 21:18:37,507:INFO:create_model() successfully completed......................................
2024-12-04 21:18:37,592:INFO:_master_model_container: 15
2024-12-04 21:18:37,592:INFO:_display_container: 2
2024-12-04 21:18:37,592:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 21:18:37,592:INFO:compare_models() successfully completed......................................
2024-12-04 21:18:37,595:INFO:Initializing evaluate_model()
2024-12-04 21:18:37,595:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-12-04 21:18:38,911:INFO:Initializing plot_model()
2024-12-04 21:18:38,912:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-12-04 21:18:38,912:INFO:Checking exceptions
2024-12-04 21:18:38,925:INFO:Preloading libraries
2024-12-04 21:18:38,925:INFO:Copying training dataset
2024-12-04 21:18:38,925:INFO:Plot type: pipeline
2024-12-04 21:18:40,519:INFO:Visual Rendered Successfully
2024-12-04 21:18:40,608:INFO:plot_model() successfully completed......................................
2024-12-04 21:18:40,609:INFO:Initializing plot_model()
2024-12-04 21:18:40,609:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 21:18:40,609:INFO:Checking exceptions
2024-12-04 21:18:40,618:INFO:Preloading libraries
2024-12-04 21:18:40,618:INFO:Copying training dataset
2024-12-04 21:18:40,618:INFO:Plot type: auc
2024-12-04 21:18:40,871:INFO:Fitting Model
2024-12-04 21:18:40,883:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2024-12-04 21:18:40,884:INFO:Scoring test/hold-out set
2024-12-04 21:18:41,458:INFO:Visual Rendered Successfully
2024-12-04 21:18:41,582:INFO:plot_model() successfully completed......................................
2024-12-04 21:18:41,582:INFO:Initializing plot_model()
2024-12-04 21:18:41,582:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 21:18:41,582:INFO:Checking exceptions
2024-12-04 21:18:41,595:INFO:Preloading libraries
2024-12-04 21:18:41,597:INFO:Copying training dataset
2024-12-04 21:18:41,597:INFO:Plot type: confusion_matrix
2024-12-04 21:18:41,927:INFO:Fitting Model
2024-12-04 21:18:41,928:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2024-12-04 21:18:41,928:INFO:Scoring test/hold-out set
2024-12-04 21:18:42,451:INFO:Visual Rendered Successfully
2024-12-04 21:18:42,554:INFO:plot_model() successfully completed......................................
2024-12-04 21:18:42,555:INFO:Initializing predict_model()
2024-12-04 21:18:42,555:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000029498653EC0>)
2024-12-04 21:18:42,555:INFO:Checking exceptions
2024-12-04 21:18:42,555:INFO:Preloading libraries
2024-12-04 21:18:43,010:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:43,113:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:43,193:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:43,539:INFO:Initializing predict_model()
2024-12-04 21:18:43,539:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000029496D334D0>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000029498653EC0>)
2024-12-04 21:18:43,540:INFO:Checking exceptions
2024-12-04 21:18:43,540:INFO:Preloading libraries
2024-12-04 21:18:43,540:INFO:Set up data.
2024-12-04 21:18:43,593:INFO:Set up index.
2024-12-04 21:18:43,776:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:43,830:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:43,889:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 21:18:44,119:INFO:Initializing save_model()
2024-12-04 21:18:44,119:INFO:save_model(model=GaussianNB(priors=None, var_smoothing=1e-09), model_name=Airflow/models/my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-12-04 21:18:44,120:INFO:Adding model into prep_pipe
2024-12-04 21:18:44,128:INFO:Airflow/models/my_best_pipeline.pkl saved in current working directory
2024-12-04 21:18:44,135:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnicity', 'Family_History',
                                             'Comorbidity_Diabet...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2024-12-04 21:18:44,135:INFO:save_model() successfully completed......................................
2024-12-04 22:29:58,462:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:29:58,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:29:58,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:29:58,463:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:30:03,465:INFO:PyCaret ClassificationExperiment
2024-12-04 22:30:03,466:INFO:Logging name: clf-default-name
2024-12-04 22:30:03,466:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-04 22:30:03,466:INFO:version 3.3.2
2024-12-04 22:30:03,466:INFO:Initializing setup()
2024-12-04 22:30:03,466:INFO:self.USI: 6e66
2024-12-04 22:30:03,466:INFO:self._variable_keys: {'fold_shuffle_param', 'y_test', 'y_train', 'fix_imbalance', 'memory', 'n_jobs_param', 'X', 'pipeline', 'gpu_param', 'idx', 'exp_name_log', 'logging_param', 'fold_groups_param', 'X_test', '_available_plots', 'seed', 'exp_id', 'data', 'fold_generator', 'html_param', 'X_train', '_ml_usecase', 'USI', 'gpu_n_jobs_param', 'y', 'log_plots_param', 'is_multiclass', 'target_param'}
2024-12-04 22:30:03,466:INFO:Checking environment
2024-12-04 22:30:03,466:INFO:python_version: 3.11.9
2024-12-04 22:30:03,466:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-12-04 22:30:03,466:INFO:machine: AMD64
2024-12-04 22:30:03,516:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-04 22:30:03,523:INFO:Memory: svmem(total=8345964544, available=524316672, percent=93.7, used=7821647872, free=524316672)
2024-12-04 22:30:03,523:INFO:Physical Core: 4
2024-12-04 22:30:03,523:INFO:Logical Core: 8
2024-12-04 22:30:03,523:INFO:Checking libraries
2024-12-04 22:30:03,523:INFO:System:
2024-12-04 22:30:03,523:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-12-04 22:30:03,523:INFO:executable: C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Scripts\python.exe
2024-12-04 22:30:03,524:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-04 22:30:03,524:INFO:PyCaret required dependencies:
2024-12-04 22:30:03,655:INFO:                 pip: 24.3.1
2024-12-04 22:30:03,655:INFO:          setuptools: 68.2.0
2024-12-04 22:30:03,655:INFO:             pycaret: 3.3.2
2024-12-04 22:30:03,655:INFO:             IPython: 8.29.0
2024-12-04 22:30:03,655:INFO:          ipywidgets: 8.1.5
2024-12-04 22:30:03,655:INFO:                tqdm: 4.67.0
2024-12-04 22:30:03,655:INFO:               numpy: 1.26.4
2024-12-04 22:30:03,655:INFO:              pandas: 2.1.4
2024-12-04 22:30:03,655:INFO:              jinja2: 3.1.4
2024-12-04 22:30:03,655:INFO:               scipy: 1.11.4
2024-12-04 22:30:03,656:INFO:              joblib: 1.3.2
2024-12-04 22:30:03,656:INFO:             sklearn: 1.4.2
2024-12-04 22:30:03,656:INFO:                pyod: 2.0.2
2024-12-04 22:30:03,656:INFO:            imblearn: 0.12.4
2024-12-04 22:30:03,656:INFO:   category_encoders: 2.6.4
2024-12-04 22:30:03,656:INFO:            lightgbm: 4.5.0
2024-12-04 22:30:03,656:INFO:               numba: 0.60.0
2024-12-04 22:30:03,656:INFO:            requests: 2.32.3
2024-12-04 22:30:03,656:INFO:          matplotlib: 3.7.5
2024-12-04 22:30:03,656:INFO:          scikitplot: 0.3.7
2024-12-04 22:30:03,656:INFO:         yellowbrick: 1.5
2024-12-04 22:30:03,656:INFO:              plotly: 5.24.1
2024-12-04 22:30:03,656:INFO:    plotly-resampler: Not installed
2024-12-04 22:30:03,656:INFO:             kaleido: 0.2.1
2024-12-04 22:30:03,656:INFO:           schemdraw: 0.15
2024-12-04 22:30:03,656:INFO:         statsmodels: 0.14.4
2024-12-04 22:30:03,656:INFO:              sktime: 0.26.0
2024-12-04 22:30:03,656:INFO:               tbats: 1.1.3
2024-12-04 22:30:03,656:INFO:            pmdarima: 2.0.4
2024-12-04 22:30:03,657:INFO:              psutil: 6.1.0
2024-12-04 22:30:03,657:INFO:          markupsafe: 2.1.5
2024-12-04 22:30:03,657:INFO:             pickle5: Not installed
2024-12-04 22:30:03,657:INFO:         cloudpickle: 3.1.0
2024-12-04 22:30:03,657:INFO:         deprecation: 2.1.0
2024-12-04 22:30:03,657:INFO:              xxhash: 3.5.0
2024-12-04 22:30:03,657:INFO:           wurlitzer: Not installed
2024-12-04 22:30:03,657:INFO:PyCaret optional dependencies:
2024-12-04 22:30:03,695:INFO:                shap: Not installed
2024-12-04 22:30:03,695:INFO:           interpret: Not installed
2024-12-04 22:30:03,695:INFO:                umap: Not installed
2024-12-04 22:30:03,695:INFO:     ydata_profiling: Not installed
2024-12-04 22:30:03,695:INFO:  explainerdashboard: Not installed
2024-12-04 22:30:03,695:INFO:             autoviz: 0.1.905
2024-12-04 22:30:03,695:INFO:           fairlearn: Not installed
2024-12-04 22:30:03,695:INFO:          deepchecks: Not installed
2024-12-04 22:30:03,695:INFO:             xgboost: 1.6.2
2024-12-04 22:30:03,695:INFO:            catboost: Not installed
2024-12-04 22:30:03,695:INFO:              kmodes: Not installed
2024-12-04 22:30:03,696:INFO:             mlxtend: Not installed
2024-12-04 22:30:03,696:INFO:       statsforecast: Not installed
2024-12-04 22:30:03,696:INFO:        tune_sklearn: Not installed
2024-12-04 22:30:03,696:INFO:                 ray: Not installed
2024-12-04 22:30:03,696:INFO:            hyperopt: Not installed
2024-12-04 22:30:03,696:INFO:              optuna: Not installed
2024-12-04 22:30:03,696:INFO:               skopt: Not installed
2024-12-04 22:30:03,696:INFO:              mlflow: Not installed
2024-12-04 22:30:03,696:INFO:              gradio: Not installed
2024-12-04 22:30:03,696:INFO:             fastapi: Not installed
2024-12-04 22:30:03,696:INFO:             uvicorn: Not installed
2024-12-04 22:30:03,696:INFO:              m2cgen: Not installed
2024-12-04 22:30:03,696:INFO:           evidently: Not installed
2024-12-04 22:30:03,696:INFO:               fugue: Not installed
2024-12-04 22:30:03,697:INFO:           streamlit: Not installed
2024-12-04 22:30:03,697:INFO:             prophet: Not installed
2024-12-04 22:30:03,697:INFO:None
2024-12-04 22:30:03,697:INFO:Set up data.
2024-12-04 22:30:03,738:INFO:Set up folding strategy.
2024-12-04 22:30:03,738:INFO:Set up train/test split.
2024-12-04 22:30:03,789:INFO:Set up index.
2024-12-04 22:30:03,790:INFO:Assigning column types.
2024-12-04 22:30:03,812:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-04 22:30:03,867:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 22:30:03,876:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:30:03,938:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:30:04,480:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:30:04,559:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 22:30:04,561:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:30:04,598:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:30:04,601:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:30:04,602:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-04 22:30:04,657:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:30:04,705:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:30:04,708:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:30:04,771:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:30:04,808:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:30:04,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:30:04,811:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-04 22:30:04,895:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:30:04,898:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:30:04,978:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:30:04,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:30:04,987:INFO:Preparing preprocessing pipeline...
2024-12-04 22:30:04,991:INFO:Set up label encoding.
2024-12-04 22:30:04,991:INFO:Set up simple imputation.
2024-12-04 22:30:05,048:INFO:Finished creating preprocessing pipeline.
2024-12-04 22:30:05,057:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-04 22:30:05,057:INFO:Creating final display dataframe.
2024-12-04 22:30:05,221:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               6012
1                        Target                                          Treatment
2                   Target type                                         Multiclass
3                Target mapping  Chemotherapy: 0, Radiation Therapy: 1, Surgery...
4           Original data shape                                        (11592, 36)
5        Transformed data shape                                        (11592, 36)
6   Transformed train set shape                                         (8114, 36)
7    Transformed test set shape                                         (3478, 36)
8              Numeric features                                                 35
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               6e66
2024-12-04 22:30:05,302:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:30:05,305:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:30:05,390:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:30:05,392:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:30:05,394:INFO:setup() successfully completed in 1.95s...............
2024-12-04 22:30:05,394:INFO:Initializing compare_models()
2024-12-04 22:30:05,394:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-12-04 22:30:05,394:INFO:Checking exceptions
2024-12-04 22:30:05,403:INFO:Preparing display monitor
2024-12-04 22:30:05,408:INFO:Initializing Logistic Regression
2024-12-04 22:30:05,408:INFO:Total runtime is 0.0 minutes
2024-12-04 22:30:05,409:INFO:SubProcess create_model() called ==================================
2024-12-04 22:30:05,409:INFO:Initializing create_model()
2024-12-04 22:30:05,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:30:05,409:INFO:Checking exceptions
2024-12-04 22:30:05,409:INFO:Importing libraries
2024-12-04 22:30:05,409:INFO:Copying training dataset
2024-12-04 22:30:05,422:INFO:Defining folds
2024-12-04 22:30:05,422:INFO:Declaring metric variables
2024-12-04 22:30:05,422:INFO:Importing untrained model
2024-12-04 22:30:05,423:INFO:Logistic Regression Imported successfully
2024-12-04 22:30:05,423:INFO:Starting cross validation
2024-12-04 22:30:05,424:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:30:24,021:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:24,022:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:24,022:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:24,022:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:24,030:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:24,036:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,036:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,037:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,037:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,038:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,039:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,042:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,053:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,054:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,054:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,055:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,056:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,059:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,066:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,067:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,068:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,072:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,073:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,074:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,076:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,101:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,381:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:24,385:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:24,386:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,388:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,393:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,395:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,401:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,402:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:24,415:INFO:Calculating mean and std
2024-12-04 22:30:24,417:INFO:Creating metrics dataframe
2024-12-04 22:30:24,419:INFO:Uploading results into container
2024-12-04 22:30:24,420:INFO:Uploading model into container now
2024-12-04 22:30:24,420:INFO:_master_model_container: 1
2024-12-04 22:30:24,420:INFO:_display_container: 2
2024-12-04 22:30:24,421:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6012, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-04 22:30:24,421:INFO:create_model() successfully completed......................................
2024-12-04 22:30:24,501:INFO:SubProcess create_model() end ==================================
2024-12-04 22:30:24,501:INFO:Creating metrics dataframe
2024-12-04 22:30:24,504:INFO:Initializing K Neighbors Classifier
2024-12-04 22:30:24,504:INFO:Total runtime is 0.31825776894887287 minutes
2024-12-04 22:30:24,504:INFO:SubProcess create_model() called ==================================
2024-12-04 22:30:24,505:INFO:Initializing create_model()
2024-12-04 22:30:24,505:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:30:24,505:INFO:Checking exceptions
2024-12-04 22:30:24,505:INFO:Importing libraries
2024-12-04 22:30:24,505:INFO:Copying training dataset
2024-12-04 22:30:24,519:INFO:Defining folds
2024-12-04 22:30:24,519:INFO:Declaring metric variables
2024-12-04 22:30:24,519:INFO:Importing untrained model
2024-12-04 22:30:24,520:INFO:K Neighbors Classifier Imported successfully
2024-12-04 22:30:24,520:INFO:Starting cross validation
2024-12-04 22:30:24,521:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:30:25,877:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:25,877:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:25,877:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:25,877:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:25,878:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:25,886:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:25,887:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:25,887:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:25,888:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:25,888:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:25,888:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:25,906:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:25,984:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:25,986:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,008:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,024:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,249:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,257:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,261:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,270:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,271:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,280:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,296:INFO:Calculating mean and std
2024-12-04 22:30:26,297:INFO:Creating metrics dataframe
2024-12-04 22:30:26,299:INFO:Uploading results into container
2024-12-04 22:30:26,300:INFO:Uploading model into container now
2024-12-04 22:30:26,300:INFO:_master_model_container: 2
2024-12-04 22:30:26,300:INFO:_display_container: 2
2024-12-04 22:30:26,301:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-04 22:30:26,301:INFO:create_model() successfully completed......................................
2024-12-04 22:30:26,377:INFO:SubProcess create_model() end ==================================
2024-12-04 22:30:26,377:INFO:Creating metrics dataframe
2024-12-04 22:30:26,415:INFO:Initializing Naive Bayes
2024-12-04 22:30:26,415:INFO:Total runtime is 0.3501158555348714 minutes
2024-12-04 22:30:26,415:INFO:SubProcess create_model() called ==================================
2024-12-04 22:30:26,415:INFO:Initializing create_model()
2024-12-04 22:30:26,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:30:26,415:INFO:Checking exceptions
2024-12-04 22:30:26,415:INFO:Importing libraries
2024-12-04 22:30:26,416:INFO:Copying training dataset
2024-12-04 22:30:26,429:INFO:Defining folds
2024-12-04 22:30:26,429:INFO:Declaring metric variables
2024-12-04 22:30:26,429:INFO:Importing untrained model
2024-12-04 22:30:26,429:INFO:Naive Bayes Imported successfully
2024-12-04 22:30:26,430:INFO:Starting cross validation
2024-12-04 22:30:26,430:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:30:26,632:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,634:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,635:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,635:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,636:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,637:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,638:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,648:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,648:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,651:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,654:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,656:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,664:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,665:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,667:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,668:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,669:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,670:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,673:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,678:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,681:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,681:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,689:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,751:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,756:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,758:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,768:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,769:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,777:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:26,795:INFO:Calculating mean and std
2024-12-04 22:30:26,796:INFO:Creating metrics dataframe
2024-12-04 22:30:26,798:INFO:Uploading results into container
2024-12-04 22:30:26,798:INFO:Uploading model into container now
2024-12-04 22:30:26,798:INFO:_master_model_container: 3
2024-12-04 22:30:26,798:INFO:_display_container: 2
2024-12-04 22:30:26,799:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 22:30:26,799:INFO:create_model() successfully completed......................................
2024-12-04 22:30:26,866:INFO:SubProcess create_model() end ==================================
2024-12-04 22:30:26,867:INFO:Creating metrics dataframe
2024-12-04 22:30:26,869:INFO:Initializing Decision Tree Classifier
2024-12-04 22:30:26,869:INFO:Total runtime is 0.3576786160469055 minutes
2024-12-04 22:30:26,869:INFO:SubProcess create_model() called ==================================
2024-12-04 22:30:26,869:INFO:Initializing create_model()
2024-12-04 22:30:26,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:30:26,869:INFO:Checking exceptions
2024-12-04 22:30:26,869:INFO:Importing libraries
2024-12-04 22:30:26,870:INFO:Copying training dataset
2024-12-04 22:30:26,883:INFO:Defining folds
2024-12-04 22:30:26,883:INFO:Declaring metric variables
2024-12-04 22:30:26,883:INFO:Importing untrained model
2024-12-04 22:30:26,883:INFO:Decision Tree Classifier Imported successfully
2024-12-04 22:30:26,884:INFO:Starting cross validation
2024-12-04 22:30:26,884:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:30:28,662:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,667:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,668:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,675:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,676:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,686:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,688:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,696:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,703:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,703:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,708:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,716:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,721:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,730:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,737:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,747:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,754:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,769:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,774:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,789:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,804:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,804:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,815:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:28,826:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:29,288:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:29,294:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:29,300:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:29,314:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:29,320:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:29,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:29,348:INFO:Calculating mean and std
2024-12-04 22:30:29,349:INFO:Creating metrics dataframe
2024-12-04 22:30:29,350:INFO:Uploading results into container
2024-12-04 22:30:29,350:INFO:Uploading model into container now
2024-12-04 22:30:29,351:INFO:_master_model_container: 4
2024-12-04 22:30:29,351:INFO:_display_container: 2
2024-12-04 22:30:29,351:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6012, splitter='best')
2024-12-04 22:30:29,351:INFO:create_model() successfully completed......................................
2024-12-04 22:30:29,413:INFO:SubProcess create_model() end ==================================
2024-12-04 22:30:29,413:INFO:Creating metrics dataframe
2024-12-04 22:30:29,415:INFO:Initializing SVM - Linear Kernel
2024-12-04 22:30:29,415:INFO:Total runtime is 0.4001076738039652 minutes
2024-12-04 22:30:29,415:INFO:SubProcess create_model() called ==================================
2024-12-04 22:30:29,415:INFO:Initializing create_model()
2024-12-04 22:30:29,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:30:29,416:INFO:Checking exceptions
2024-12-04 22:30:29,416:INFO:Importing libraries
2024-12-04 22:30:29,416:INFO:Copying training dataset
2024-12-04 22:30:29,429:INFO:Defining folds
2024-12-04 22:30:29,430:INFO:Declaring metric variables
2024-12-04 22:30:29,430:INFO:Importing untrained model
2024-12-04 22:30:29,430:INFO:SVM - Linear Kernel Imported successfully
2024-12-04 22:30:29,430:INFO:Starting cross validation
2024-12-04 22:30:29,431:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:30:32,781:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:32,781:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:32,784:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:32,784:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:32,787:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,787:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,789:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,789:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,799:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,800:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,800:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,804:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,804:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,807:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,813:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:32,815:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,816:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,816:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,817:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,818:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,827:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,833:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,847:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,848:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,856:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:32,864:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,877:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:32,888:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:33,519:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:33,523:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:33,523:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:33,528:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:33,534:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:33,536:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:33,545:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:33,548:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:33,570:INFO:Calculating mean and std
2024-12-04 22:30:33,571:INFO:Creating metrics dataframe
2024-12-04 22:30:33,574:INFO:Uploading results into container
2024-12-04 22:30:33,574:INFO:Uploading model into container now
2024-12-04 22:30:33,575:INFO:_master_model_container: 5
2024-12-04 22:30:33,575:INFO:_display_container: 2
2024-12-04 22:30:33,576:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6012, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-04 22:30:33,576:INFO:create_model() successfully completed......................................
2024-12-04 22:30:33,662:INFO:SubProcess create_model() end ==================================
2024-12-04 22:30:33,662:INFO:Creating metrics dataframe
2024-12-04 22:30:33,665:INFO:Initializing Ridge Classifier
2024-12-04 22:30:33,665:INFO:Total runtime is 0.4709445397059122 minutes
2024-12-04 22:30:33,665:INFO:SubProcess create_model() called ==================================
2024-12-04 22:30:33,666:INFO:Initializing create_model()
2024-12-04 22:30:33,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:30:33,666:INFO:Checking exceptions
2024-12-04 22:30:33,666:INFO:Importing libraries
2024-12-04 22:30:33,666:INFO:Copying training dataset
2024-12-04 22:30:33,688:INFO:Defining folds
2024-12-04 22:30:33,688:INFO:Declaring metric variables
2024-12-04 22:30:33,688:INFO:Importing untrained model
2024-12-04 22:30:33,688:INFO:Ridge Classifier Imported successfully
2024-12-04 22:30:33,689:INFO:Starting cross validation
2024-12-04 22:30:33,690:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:30:35,805:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:35,806:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:35,809:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:35,813:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,815:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,816:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,817:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:35,821:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,823:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,828:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:35,831:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,834:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,834:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,836:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:35,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,845:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,846:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,848:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,848:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,849:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:35,851:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,855:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,856:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,862:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,863:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,867:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,873:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,878:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,891:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,969:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:35,975:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,984:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:35,987:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:35,990:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:36,028:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:36,083:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:36,131:INFO:Calculating mean and std
2024-12-04 22:30:36,135:INFO:Creating metrics dataframe
2024-12-04 22:30:36,156:INFO:Uploading results into container
2024-12-04 22:30:36,158:INFO:Uploading model into container now
2024-12-04 22:30:36,158:INFO:_master_model_container: 6
2024-12-04 22:30:36,159:INFO:_display_container: 2
2024-12-04 22:30:36,159:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6012, solver='auto',
                tol=0.0001)
2024-12-04 22:30:36,159:INFO:create_model() successfully completed......................................
2024-12-04 22:30:36,333:INFO:SubProcess create_model() end ==================================
2024-12-04 22:30:36,333:INFO:Creating metrics dataframe
2024-12-04 22:30:36,337:INFO:Initializing Random Forest Classifier
2024-12-04 22:30:36,337:INFO:Total runtime is 0.5154837290445963 minutes
2024-12-04 22:30:36,337:INFO:SubProcess create_model() called ==================================
2024-12-04 22:30:36,337:INFO:Initializing create_model()
2024-12-04 22:30:36,337:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:30:36,337:INFO:Checking exceptions
2024-12-04 22:30:36,337:INFO:Importing libraries
2024-12-04 22:30:36,337:INFO:Copying training dataset
2024-12-04 22:30:36,358:INFO:Defining folds
2024-12-04 22:30:36,358:INFO:Declaring metric variables
2024-12-04 22:30:36,358:INFO:Importing untrained model
2024-12-04 22:30:36,359:INFO:Random Forest Classifier Imported successfully
2024-12-04 22:30:36,361:INFO:Starting cross validation
2024-12-04 22:30:36,368:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:30:55,197:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,242:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,275:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,277:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,301:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,326:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,367:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,405:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,432:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,433:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,446:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,444:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,473:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,480:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,481:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,496:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,497:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,509:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,510:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,512:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,536:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,611:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,631:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:55,676:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,200:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,203:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,211:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,211:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,219:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,222:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,237:INFO:Calculating mean and std
2024-12-04 22:30:58,239:INFO:Creating metrics dataframe
2024-12-04 22:30:58,246:INFO:Uploading results into container
2024-12-04 22:30:58,248:INFO:Uploading model into container now
2024-12-04 22:30:58,249:INFO:_master_model_container: 7
2024-12-04 22:30:58,249:INFO:_display_container: 2
2024-12-04 22:30:58,250:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6012, verbose=0,
                       warm_start=False)
2024-12-04 22:30:58,251:INFO:create_model() successfully completed......................................
2024-12-04 22:30:58,415:INFO:SubProcess create_model() end ==================================
2024-12-04 22:30:58,415:INFO:Creating metrics dataframe
2024-12-04 22:30:58,420:INFO:Initializing Quadratic Discriminant Analysis
2024-12-04 22:30:58,420:INFO:Total runtime is 0.8835202972094217 minutes
2024-12-04 22:30:58,420:INFO:SubProcess create_model() called ==================================
2024-12-04 22:30:58,420:INFO:Initializing create_model()
2024-12-04 22:30:58,421:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:30:58,421:INFO:Checking exceptions
2024-12-04 22:30:58,421:INFO:Importing libraries
2024-12-04 22:30:58,421:INFO:Copying training dataset
2024-12-04 22:30:58,443:INFO:Defining folds
2024-12-04 22:30:58,443:INFO:Declaring metric variables
2024-12-04 22:30:58,443:INFO:Importing untrained model
2024-12-04 22:30:58,443:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-04 22:30:58,444:INFO:Starting cross validation
2024-12-04 22:30:58,445:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:30:58,647:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:58,649:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:58,651:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:58,651:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:58,656:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,657:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,657:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,659:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:58,659:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:58,666:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,666:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,666:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,670:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:58,671:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,675:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,677:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,678:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,679:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,679:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,683:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,687:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,684:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,693:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,694:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,697:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,699:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,705:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,710:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,714:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,727:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,794:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:58,796:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:30:58,799:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,802:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,810:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,813:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,820:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,820:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:30:58,840:INFO:Calculating mean and std
2024-12-04 22:30:58,841:INFO:Creating metrics dataframe
2024-12-04 22:30:58,843:INFO:Uploading results into container
2024-12-04 22:30:58,844:INFO:Uploading model into container now
2024-12-04 22:30:58,844:INFO:_master_model_container: 8
2024-12-04 22:30:58,844:INFO:_display_container: 2
2024-12-04 22:30:58,844:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-04 22:30:58,845:INFO:create_model() successfully completed......................................
2024-12-04 22:30:58,907:INFO:SubProcess create_model() end ==================================
2024-12-04 22:30:58,907:INFO:Creating metrics dataframe
2024-12-04 22:30:58,910:INFO:Initializing Ada Boost Classifier
2024-12-04 22:30:58,910:INFO:Total runtime is 0.8916994174321492 minutes
2024-12-04 22:30:58,910:INFO:SubProcess create_model() called ==================================
2024-12-04 22:30:58,910:INFO:Initializing create_model()
2024-12-04 22:30:58,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:30:58,910:INFO:Checking exceptions
2024-12-04 22:30:58,911:INFO:Importing libraries
2024-12-04 22:30:58,911:INFO:Copying training dataset
2024-12-04 22:30:58,934:INFO:Defining folds
2024-12-04 22:30:58,934:INFO:Declaring metric variables
2024-12-04 22:30:58,935:INFO:Importing untrained model
2024-12-04 22:30:58,935:INFO:Ada Boost Classifier Imported successfully
2024-12-04 22:30:58,935:INFO:Starting cross validation
2024-12-04 22:30:58,938:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:30:59,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:30:59,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:30:59,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:30:59,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:30:59,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:30:59,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:30:59,061:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:30:59,061:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:31:01,175:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:01,181:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,195:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,216:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,272:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:01,278:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,292:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,305:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,322:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:31:01,404:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:31:01,447:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:01,453:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,466:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,490:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,652:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:01,658:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,671:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,681:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:01,686:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,687:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,700:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,714:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,791:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:01,798:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,809:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,824:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,827:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:01,832:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,853:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,860:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:01,864:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,872:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:01,881:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:02,935:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:02,938:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:02,949:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:02,957:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:02,996:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:03,001:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:03,015:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:03,024:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:03,041:INFO:Calculating mean and std
2024-12-04 22:31:03,042:INFO:Creating metrics dataframe
2024-12-04 22:31:03,044:INFO:Uploading results into container
2024-12-04 22:31:03,045:INFO:Uploading model into container now
2024-12-04 22:31:03,045:INFO:_master_model_container: 9
2024-12-04 22:31:03,045:INFO:_display_container: 2
2024-12-04 22:31:03,045:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6012)
2024-12-04 22:31:03,045:INFO:create_model() successfully completed......................................
2024-12-04 22:31:03,113:INFO:SubProcess create_model() end ==================================
2024-12-04 22:31:03,113:INFO:Creating metrics dataframe
2024-12-04 22:31:03,115:INFO:Initializing Gradient Boosting Classifier
2024-12-04 22:31:03,116:INFO:Total runtime is 0.96179092725118 minutes
2024-12-04 22:31:03,116:INFO:SubProcess create_model() called ==================================
2024-12-04 22:31:03,116:INFO:Initializing create_model()
2024-12-04 22:31:03,116:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:31:03,116:INFO:Checking exceptions
2024-12-04 22:31:03,116:INFO:Importing libraries
2024-12-04 22:31:03,116:INFO:Copying training dataset
2024-12-04 22:31:03,131:INFO:Defining folds
2024-12-04 22:31:03,131:INFO:Declaring metric variables
2024-12-04 22:31:03,131:INFO:Importing untrained model
2024-12-04 22:31:03,131:INFO:Gradient Boosting Classifier Imported successfully
2024-12-04 22:31:03,132:INFO:Starting cross validation
2024-12-04 22:31:03,132:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:31:53,372:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:53,379:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:53,396:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:53,475:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:56,443:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:56,449:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:56,461:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:56,472:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:56,561:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:56,567:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:56,580:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:56,603:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:57,374:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:57,379:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:57,394:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:57,409:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:57,874:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:57,880:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:57,894:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:57,907:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:57,947:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:57,953:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:57,967:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:57,981:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:58,249:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:58,255:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:58,270:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:58,284:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:59,817:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:31:59,821:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:59,831:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:31:59,839:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:21,079:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:32:21,082:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:21,093:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:21,106:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:22,829:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:32:22,835:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:22,849:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:22,862:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:22,932:INFO:Calculating mean and std
2024-12-04 22:32:22,954:INFO:Creating metrics dataframe
2024-12-04 22:32:23,026:INFO:Uploading results into container
2024-12-04 22:32:23,034:INFO:Uploading model into container now
2024-12-04 22:32:23,045:INFO:_master_model_container: 10
2024-12-04 22:32:23,045:INFO:_display_container: 2
2024-12-04 22:32:23,055:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6012, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-04 22:32:23,055:INFO:create_model() successfully completed......................................
2024-12-04 22:32:23,909:INFO:SubProcess create_model() end ==================================
2024-12-04 22:32:23,909:INFO:Creating metrics dataframe
2024-12-04 22:32:23,920:INFO:Initializing Linear Discriminant Analysis
2024-12-04 22:32:23,920:INFO:Total runtime is 2.30852970679601 minutes
2024-12-04 22:32:23,921:INFO:SubProcess create_model() called ==================================
2024-12-04 22:32:23,922:INFO:Initializing create_model()
2024-12-04 22:32:23,922:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:32:23,922:INFO:Checking exceptions
2024-12-04 22:32:23,922:INFO:Importing libraries
2024-12-04 22:32:23,922:INFO:Copying training dataset
2024-12-04 22:32:23,999:INFO:Defining folds
2024-12-04 22:32:23,999:INFO:Declaring metric variables
2024-12-04 22:32:23,999:INFO:Importing untrained model
2024-12-04 22:32:24,000:INFO:Linear Discriminant Analysis Imported successfully
2024-12-04 22:32:24,001:INFO:Starting cross validation
2024-12-04 22:32:24,004:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:32:24,244:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:32:24,249:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:32:24,250:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,255:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:32:24,256:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,256:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:32:24,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:32:24,259:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:32:24,261:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,262:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,263:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,265:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,269:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,271:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:32:24,274:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,275:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,276:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,276:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,279:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:32:24,279:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,282:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,283:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,286:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,289:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,289:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,289:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,292:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,299:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,302:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,306:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,306:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,325:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,408:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:32:24,414:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,421:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:32:24,426:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,428:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,436:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,437:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,448:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:24,473:INFO:Calculating mean and std
2024-12-04 22:32:24,474:INFO:Creating metrics dataframe
2024-12-04 22:32:24,477:INFO:Uploading results into container
2024-12-04 22:32:24,478:INFO:Uploading model into container now
2024-12-04 22:32:24,479:INFO:_master_model_container: 11
2024-12-04 22:32:24,479:INFO:_display_container: 2
2024-12-04 22:32:24,479:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-04 22:32:24,479:INFO:create_model() successfully completed......................................
2024-12-04 22:32:24,573:INFO:SubProcess create_model() end ==================================
2024-12-04 22:32:24,574:INFO:Creating metrics dataframe
2024-12-04 22:32:24,577:INFO:Initializing Extra Trees Classifier
2024-12-04 22:32:24,577:INFO:Total runtime is 2.319475197792053 minutes
2024-12-04 22:32:24,577:INFO:SubProcess create_model() called ==================================
2024-12-04 22:32:24,578:INFO:Initializing create_model()
2024-12-04 22:32:24,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:32:24,578:INFO:Checking exceptions
2024-12-04 22:32:24,578:INFO:Importing libraries
2024-12-04 22:32:24,578:INFO:Copying training dataset
2024-12-04 22:32:24,603:INFO:Defining folds
2024-12-04 22:32:24,603:INFO:Declaring metric variables
2024-12-04 22:32:24,604:INFO:Importing untrained model
2024-12-04 22:32:24,604:INFO:Extra Trees Classifier Imported successfully
2024-12-04 22:32:24,605:INFO:Starting cross validation
2024-12-04 22:32:24,605:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:32:31,046:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,103:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,114:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,117:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,119:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,137:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,171:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,177:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,214:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,216:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,218:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,228:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,230:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,232:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,243:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,247:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,269:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,266:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,363:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,386:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,405:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,447:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,461:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:31,475:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:33,272:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:33,308:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:33,324:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:33,329:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:33,342:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:33,358:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:32:33,392:INFO:Calculating mean and std
2024-12-04 22:32:33,393:INFO:Creating metrics dataframe
2024-12-04 22:32:33,398:INFO:Uploading results into container
2024-12-04 22:32:33,399:INFO:Uploading model into container now
2024-12-04 22:32:33,399:INFO:_master_model_container: 12
2024-12-04 22:32:33,424:INFO:_display_container: 2
2024-12-04 22:32:33,425:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6012, verbose=0,
                     warm_start=False)
2024-12-04 22:32:33,425:INFO:create_model() successfully completed......................................
2024-12-04 22:32:33,527:INFO:SubProcess create_model() end ==================================
2024-12-04 22:32:33,528:INFO:Creating metrics dataframe
2024-12-04 22:32:33,533:INFO:Initializing Extreme Gradient Boosting
2024-12-04 22:32:33,533:INFO:Total runtime is 2.468744945526123 minutes
2024-12-04 22:32:33,533:INFO:SubProcess create_model() called ==================================
2024-12-04 22:32:33,534:INFO:Initializing create_model()
2024-12-04 22:32:33,534:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:32:33,534:INFO:Checking exceptions
2024-12-04 22:32:33,534:INFO:Importing libraries
2024-12-04 22:32:33,534:INFO:Copying training dataset
2024-12-04 22:32:33,561:INFO:Defining folds
2024-12-04 22:32:33,561:INFO:Declaring metric variables
2024-12-04 22:32:33,562:INFO:Importing untrained model
2024-12-04 22:32:33,565:INFO:Extreme Gradient Boosting Imported successfully
2024-12-04 22:32:33,565:INFO:Starting cross validation
2024-12-04 22:32:33,566:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:33:03,804:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:03,831:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:03,861:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:04,054:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:04,068:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:04,098:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:05,026:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:05,042:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:05,064:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:05,931:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:05,945:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:05,959:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:06,021:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:06,036:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:06,050:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:06,533:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:06,538:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:06,546:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:06,553:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:06,562:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:06,567:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:07,059:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:07,068:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:07,079:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:23,358:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:23,369:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:23,379:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:23,392:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:23,403:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:23,413:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:23,471:INFO:Calculating mean and std
2024-12-04 22:33:23,471:INFO:Creating metrics dataframe
2024-12-04 22:33:23,475:INFO:Uploading results into container
2024-12-04 22:33:23,477:INFO:Uploading model into container now
2024-12-04 22:33:23,477:INFO:_master_model_container: 13
2024-12-04 22:33:23,477:INFO:_display_container: 2
2024-12-04 22:33:23,576:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic',
              predictor=None, random_state=6012, reg_alpha=None, ...)
2024-12-04 22:33:23,576:INFO:create_model() successfully completed......................................
2024-12-04 22:33:23,645:INFO:SubProcess create_model() end ==================================
2024-12-04 22:33:23,646:INFO:Creating metrics dataframe
2024-12-04 22:33:23,868:INFO:Initializing Light Gradient Boosting Machine
2024-12-04 22:33:23,868:INFO:Total runtime is 3.3076642592748002 minutes
2024-12-04 22:33:23,868:INFO:SubProcess create_model() called ==================================
2024-12-04 22:33:23,868:INFO:Initializing create_model()
2024-12-04 22:33:23,868:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:33:23,869:INFO:Checking exceptions
2024-12-04 22:33:23,869:INFO:Importing libraries
2024-12-04 22:33:23,869:INFO:Copying training dataset
2024-12-04 22:33:23,894:INFO:Defining folds
2024-12-04 22:33:23,894:INFO:Declaring metric variables
2024-12-04 22:33:23,894:INFO:Importing untrained model
2024-12-04 22:33:23,895:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-04 22:33:23,895:INFO:Starting cross validation
2024-12-04 22:33:23,897:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:33:38,167:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,181:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,202:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,248:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,295:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,342:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,511:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,525:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,546:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,555:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,569:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,585:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,588:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,604:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:38,621:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:39,764:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:39,791:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:39,813:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:39,814:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:39,823:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:39,835:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:39,877:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:39,889:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:39,900:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:42,200:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:42,212:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:42,225:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:42,687:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:42,699:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:42,712:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:42,743:INFO:Calculating mean and std
2024-12-04 22:33:42,744:INFO:Creating metrics dataframe
2024-12-04 22:33:42,747:INFO:Uploading results into container
2024-12-04 22:33:42,748:INFO:Uploading model into container now
2024-12-04 22:33:42,748:INFO:_master_model_container: 14
2024-12-04 22:33:42,749:INFO:_display_container: 2
2024-12-04 22:33:42,749:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6012, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-04 22:33:42,749:INFO:create_model() successfully completed......................................
2024-12-04 22:33:42,831:INFO:SubProcess create_model() end ==================================
2024-12-04 22:33:42,831:INFO:Creating metrics dataframe
2024-12-04 22:33:42,839:INFO:Initializing Dummy Classifier
2024-12-04 22:33:42,839:INFO:Total runtime is 3.6238377531369523 minutes
2024-12-04 22:33:42,840:INFO:SubProcess create_model() called ==================================
2024-12-04 22:33:42,840:INFO:Initializing create_model()
2024-12-04 22:33:42,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000288FCAEED10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:33:42,840:INFO:Checking exceptions
2024-12-04 22:33:42,840:INFO:Importing libraries
2024-12-04 22:33:42,840:INFO:Copying training dataset
2024-12-04 22:33:42,866:INFO:Defining folds
2024-12-04 22:33:42,866:INFO:Declaring metric variables
2024-12-04 22:33:42,866:INFO:Importing untrained model
2024-12-04 22:33:42,866:INFO:Dummy Classifier Imported successfully
2024-12-04 22:33:42,867:INFO:Starting cross validation
2024-12-04 22:33:42,868:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:33:43,017:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,021:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,028:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,030:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,035:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,040:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:33:43,042:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,045:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,046:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,054:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,064:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:33:43,069:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,070:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,072:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:33:43,078:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:33:43,079:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,081:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:33:43,081:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,081:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,087:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,096:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,102:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,109:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:33:43,111:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:33:43,115:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,116:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,117:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,136:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,147:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:33:43,152:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,165:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,167:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,177:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,179:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,185:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:33:43,187:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:33:43,190:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,190:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:43,219:INFO:Calculating mean and std
2024-12-04 22:33:43,220:INFO:Creating metrics dataframe
2024-12-04 22:33:43,224:INFO:Uploading results into container
2024-12-04 22:33:43,225:INFO:Uploading model into container now
2024-12-04 22:33:43,226:INFO:_master_model_container: 15
2024-12-04 22:33:43,226:INFO:_display_container: 2
2024-12-04 22:33:43,226:INFO:DummyClassifier(constant=None, random_state=6012, strategy='prior')
2024-12-04 22:33:43,227:INFO:create_model() successfully completed......................................
2024-12-04 22:33:43,325:INFO:SubProcess create_model() end ==================================
2024-12-04 22:33:43,325:INFO:Creating metrics dataframe
2024-12-04 22:33:43,383:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-04 22:33:43,387:INFO:Initializing create_model()
2024-12-04 22:33:43,387:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6012, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:33:43,387:INFO:Checking exceptions
2024-12-04 22:33:43,389:INFO:Importing libraries
2024-12-04 22:33:43,389:INFO:Copying training dataset
2024-12-04 22:33:43,422:INFO:Defining folds
2024-12-04 22:33:43,422:INFO:Declaring metric variables
2024-12-04 22:33:43,422:INFO:Importing untrained model
2024-12-04 22:33:43,422:INFO:Declaring custom model
2024-12-04 22:33:43,423:INFO:Extra Trees Classifier Imported successfully
2024-12-04 22:33:43,424:INFO:Cross validation set to False
2024-12-04 22:33:43,424:INFO:Fitting Model
2024-12-04 22:33:44,178:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6012, verbose=0,
                     warm_start=False)
2024-12-04 22:33:44,178:INFO:create_model() successfully completed......................................
2024-12-04 22:33:44,322:INFO:_master_model_container: 15
2024-12-04 22:33:44,322:INFO:_display_container: 2
2024-12-04 22:33:44,323:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6012, verbose=0,
                     warm_start=False)
2024-12-04 22:33:44,325:INFO:compare_models() successfully completed......................................
2024-12-04 22:33:44,326:INFO:Initializing evaluate_model()
2024-12-04 22:33:44,326:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6012, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-12-04 22:33:45,625:INFO:Initializing plot_model()
2024-12-04 22:33:45,625:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6012, verbose=0,
                     warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-12-04 22:33:45,626:INFO:Checking exceptions
2024-12-04 22:33:45,686:INFO:Preloading libraries
2024-12-04 22:33:45,936:INFO:Copying training dataset
2024-12-04 22:33:45,936:INFO:Plot type: pipeline
2024-12-04 22:33:47,256:INFO:Visual Rendered Successfully
2024-12-04 22:33:47,399:INFO:plot_model() successfully completed......................................
2024-12-04 22:33:47,457:INFO:Initializing plot_model()
2024-12-04 22:33:47,457:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6012, verbose=0,
                     warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 22:33:47,457:INFO:Checking exceptions
2024-12-04 22:33:47,519:INFO:Preloading libraries
2024-12-04 22:33:47,802:INFO:Copying training dataset
2024-12-04 22:33:47,803:INFO:Plot type: auc
2024-12-04 22:33:48,099:INFO:Fitting Model
2024-12-04 22:33:48,108:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-12-04 22:33:48,109:INFO:Scoring test/hold-out set
2024-12-04 22:33:48,785:INFO:Visual Rendered Successfully
2024-12-04 22:33:48,890:INFO:plot_model() successfully completed......................................
2024-12-04 22:33:48,914:INFO:Initializing plot_model()
2024-12-04 22:33:48,914:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6012, verbose=0,
                     warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 22:33:48,914:INFO:Checking exceptions
2024-12-04 22:33:48,978:INFO:Preloading libraries
2024-12-04 22:33:49,335:INFO:Copying training dataset
2024-12-04 22:33:49,336:INFO:Plot type: confusion_matrix
2024-12-04 22:33:49,672:INFO:Fitting Model
2024-12-04 22:33:49,673:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-12-04 22:33:49,674:INFO:Scoring test/hold-out set
2024-12-04 22:33:51,381:INFO:Visual Rendered Successfully
2024-12-04 22:33:51,572:INFO:plot_model() successfully completed......................................
2024-12-04 22:33:51,591:INFO:Initializing predict_model()
2024-12-04 22:33:51,591:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6012, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000288FC9362A0>)
2024-12-04 22:33:51,591:INFO:Checking exceptions
2024-12-04 22:33:51,591:INFO:Preloading libraries
2024-12-04 22:33:52,084:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:52,117:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:52,153:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:52,328:INFO:Initializing predict_model()
2024-12-04 22:33:52,328:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000288D3B2AF90>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6012, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000288FC37AD40>)
2024-12-04 22:33:52,328:INFO:Checking exceptions
2024-12-04 22:33:52,329:INFO:Preloading libraries
2024-12-04 22:33:52,329:INFO:Set up data.
2024-12-04 22:33:52,364:INFO:Set up index.
2024-12-04 22:33:52,597:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:52,643:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:33:52,690:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:38:56,885:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:38:56,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:38:56,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:38:56,886:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:38:59,286:INFO:PyCaret ClassificationExperiment
2024-12-04 22:38:59,286:INFO:Logging name: clf-default-name
2024-12-04 22:38:59,286:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-04 22:38:59,287:INFO:version 3.3.2
2024-12-04 22:38:59,287:INFO:Initializing setup()
2024-12-04 22:38:59,287:INFO:self.USI: ee5f
2024-12-04 22:38:59,287:INFO:self._variable_keys: {'seed', 'fold_shuffle_param', 'idx', 'data', 'is_multiclass', 'y_train', 'exp_id', 'X', 'fix_imbalance', 'target_param', 'y', 'fold_groups_param', '_available_plots', 'html_param', 'X_test', 'gpu_param', 'memory', 'logging_param', 'exp_name_log', 'X_train', 'log_plots_param', '_ml_usecase', 'y_test', 'USI', 'pipeline', 'fold_generator', 'gpu_n_jobs_param', 'n_jobs_param'}
2024-12-04 22:38:59,287:INFO:Checking environment
2024-12-04 22:38:59,287:INFO:python_version: 3.11.9
2024-12-04 22:38:59,287:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-12-04 22:38:59,287:INFO:machine: AMD64
2024-12-04 22:38:59,332:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-04 22:38:59,342:INFO:Memory: svmem(total=8345964544, available=484782080, percent=94.2, used=7861182464, free=484782080)
2024-12-04 22:38:59,344:INFO:Physical Core: 4
2024-12-04 22:38:59,344:INFO:Logical Core: 8
2024-12-04 22:38:59,344:INFO:Checking libraries
2024-12-04 22:38:59,344:INFO:System:
2024-12-04 22:38:59,344:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-12-04 22:38:59,344:INFO:executable: C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Scripts\python.exe
2024-12-04 22:38:59,344:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-04 22:38:59,344:INFO:PyCaret required dependencies:
2024-12-04 22:38:59,397:INFO:                 pip: 24.3.1
2024-12-04 22:38:59,397:INFO:          setuptools: 68.2.0
2024-12-04 22:38:59,397:INFO:             pycaret: 3.3.2
2024-12-04 22:38:59,397:INFO:             IPython: 8.29.0
2024-12-04 22:38:59,397:INFO:          ipywidgets: 8.1.5
2024-12-04 22:38:59,397:INFO:                tqdm: 4.67.0
2024-12-04 22:38:59,397:INFO:               numpy: 1.26.4
2024-12-04 22:38:59,397:INFO:              pandas: 2.1.4
2024-12-04 22:38:59,397:INFO:              jinja2: 3.1.4
2024-12-04 22:38:59,397:INFO:               scipy: 1.11.4
2024-12-04 22:38:59,397:INFO:              joblib: 1.3.2
2024-12-04 22:38:59,397:INFO:             sklearn: 1.4.2
2024-12-04 22:38:59,397:INFO:                pyod: 2.0.2
2024-12-04 22:38:59,397:INFO:            imblearn: 0.12.4
2024-12-04 22:38:59,397:INFO:   category_encoders: 2.6.4
2024-12-04 22:38:59,397:INFO:            lightgbm: 4.5.0
2024-12-04 22:38:59,397:INFO:               numba: 0.60.0
2024-12-04 22:38:59,397:INFO:            requests: 2.32.3
2024-12-04 22:38:59,397:INFO:          matplotlib: 3.7.5
2024-12-04 22:38:59,397:INFO:          scikitplot: 0.3.7
2024-12-04 22:38:59,397:INFO:         yellowbrick: 1.5
2024-12-04 22:38:59,397:INFO:              plotly: 5.24.1
2024-12-04 22:38:59,397:INFO:    plotly-resampler: Not installed
2024-12-04 22:38:59,397:INFO:             kaleido: 0.2.1
2024-12-04 22:38:59,397:INFO:           schemdraw: 0.15
2024-12-04 22:38:59,397:INFO:         statsmodels: 0.14.4
2024-12-04 22:38:59,398:INFO:              sktime: 0.26.0
2024-12-04 22:38:59,398:INFO:               tbats: 1.1.3
2024-12-04 22:38:59,398:INFO:            pmdarima: 2.0.4
2024-12-04 22:38:59,398:INFO:              psutil: 6.1.0
2024-12-04 22:38:59,398:INFO:          markupsafe: 2.1.5
2024-12-04 22:38:59,398:INFO:             pickle5: Not installed
2024-12-04 22:38:59,398:INFO:         cloudpickle: 3.1.0
2024-12-04 22:38:59,398:INFO:         deprecation: 2.1.0
2024-12-04 22:38:59,398:INFO:              xxhash: 3.5.0
2024-12-04 22:38:59,398:INFO:           wurlitzer: Not installed
2024-12-04 22:38:59,398:INFO:PyCaret optional dependencies:
2024-12-04 22:38:59,420:INFO:                shap: Not installed
2024-12-04 22:38:59,420:INFO:           interpret: Not installed
2024-12-04 22:38:59,421:INFO:                umap: Not installed
2024-12-04 22:38:59,421:INFO:     ydata_profiling: Not installed
2024-12-04 22:38:59,421:INFO:  explainerdashboard: Not installed
2024-12-04 22:38:59,421:INFO:             autoviz: 0.1.905
2024-12-04 22:38:59,421:INFO:           fairlearn: Not installed
2024-12-04 22:38:59,421:INFO:          deepchecks: Not installed
2024-12-04 22:38:59,421:INFO:             xgboost: 1.6.2
2024-12-04 22:38:59,421:INFO:            catboost: Not installed
2024-12-04 22:38:59,421:INFO:              kmodes: Not installed
2024-12-04 22:38:59,421:INFO:             mlxtend: Not installed
2024-12-04 22:38:59,421:INFO:       statsforecast: Not installed
2024-12-04 22:38:59,421:INFO:        tune_sklearn: Not installed
2024-12-04 22:38:59,421:INFO:                 ray: Not installed
2024-12-04 22:38:59,421:INFO:            hyperopt: Not installed
2024-12-04 22:38:59,421:INFO:              optuna: Not installed
2024-12-04 22:38:59,421:INFO:               skopt: Not installed
2024-12-04 22:38:59,421:INFO:              mlflow: Not installed
2024-12-04 22:38:59,421:INFO:              gradio: Not installed
2024-12-04 22:38:59,421:INFO:             fastapi: Not installed
2024-12-04 22:38:59,421:INFO:             uvicorn: Not installed
2024-12-04 22:38:59,421:INFO:              m2cgen: Not installed
2024-12-04 22:38:59,421:INFO:           evidently: Not installed
2024-12-04 22:38:59,421:INFO:               fugue: Not installed
2024-12-04 22:38:59,421:INFO:           streamlit: Not installed
2024-12-04 22:38:59,421:INFO:             prophet: Not installed
2024-12-04 22:38:59,421:INFO:None
2024-12-04 22:38:59,421:INFO:Set up data.
2024-12-04 22:38:59,451:INFO:Set up folding strategy.
2024-12-04 22:38:59,452:INFO:Set up train/test split.
2024-12-04 22:38:59,482:INFO:Set up index.
2024-12-04 22:38:59,482:INFO:Assigning column types.
2024-12-04 22:38:59,496:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-04 22:38:59,547:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 22:38:59,550:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:38:59,587:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:39:00,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:39:00,291:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 22:39:00,292:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:39:00,318:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:39:00,321:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:39:00,321:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-04 22:39:00,368:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:39:00,398:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:39:00,401:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:39:00,455:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:39:00,485:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:39:00,488:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:39:00,489:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-04 22:39:00,560:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:39:00,563:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:39:00,645:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:39:00,648:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:39:00,650:INFO:Preparing preprocessing pipeline...
2024-12-04 22:39:00,654:INFO:Set up label encoding.
2024-12-04 22:39:00,654:INFO:Set up simple imputation.
2024-12-04 22:39:00,721:INFO:Finished creating preprocessing pipeline.
2024-12-04 22:39:00,726:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-04 22:39:00,727:INFO:Creating final display dataframe.
2024-12-04 22:39:00,897:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               5744
1                        Target                                          Treatment
2                   Target type                                         Multiclass
3                Target mapping  Chemotherapy: 0, Radiation Therapy: 1, Surgery...
4           Original data shape                                        (11592, 36)
5        Transformed data shape                                        (11592, 36)
6   Transformed train set shape                                         (8114, 36)
7    Transformed test set shape                                         (3478, 36)
8              Numeric features                                                 35
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               ee5f
2024-12-04 22:39:00,978:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:39:00,981:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:39:01,052:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:39:01,056:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:39:01,057:INFO:setup() successfully completed in 1.78s...............
2024-12-04 22:39:01,057:INFO:Initializing compare_models()
2024-12-04 22:39:01,058:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-12-04 22:39:01,058:INFO:Checking exceptions
2024-12-04 22:39:01,071:INFO:Preparing display monitor
2024-12-04 22:39:01,077:INFO:Initializing Logistic Regression
2024-12-04 22:39:01,077:INFO:Total runtime is 0.0 minutes
2024-12-04 22:39:01,077:INFO:SubProcess create_model() called ==================================
2024-12-04 22:39:01,077:INFO:Initializing create_model()
2024-12-04 22:39:01,077:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:39:01,077:INFO:Checking exceptions
2024-12-04 22:39:01,077:INFO:Importing libraries
2024-12-04 22:39:01,077:INFO:Copying training dataset
2024-12-04 22:39:01,090:INFO:Defining folds
2024-12-04 22:39:01,090:INFO:Declaring metric variables
2024-12-04 22:39:01,090:INFO:Importing untrained model
2024-12-04 22:39:01,091:INFO:Logistic Regression Imported successfully
2024-12-04 22:39:01,091:INFO:Starting cross validation
2024-12-04 22:39:01,092:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:39:16,965:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:16,975:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:16,990:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:16,993:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:16,995:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:16,999:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,003:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,007:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,012:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,015:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:17,020:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,028:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,032:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,043:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,050:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,053:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:17,054:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:17,062:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,063:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,063:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:17,071:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,077:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,081:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,093:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,113:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,129:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:17,134:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,141:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,143:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,173:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,189:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:17,381:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,393:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,395:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:17,397:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,402:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,406:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,414:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:17,431:INFO:Calculating mean and std
2024-12-04 22:39:17,433:INFO:Creating metrics dataframe
2024-12-04 22:39:17,436:INFO:Uploading results into container
2024-12-04 22:39:17,436:INFO:Uploading model into container now
2024-12-04 22:39:17,437:INFO:_master_model_container: 1
2024-12-04 22:39:17,437:INFO:_display_container: 2
2024-12-04 22:39:17,438:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5744, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-04 22:39:17,438:INFO:create_model() successfully completed......................................
2024-12-04 22:39:17,520:INFO:SubProcess create_model() end ==================================
2024-12-04 22:39:17,520:INFO:Creating metrics dataframe
2024-12-04 22:39:17,594:INFO:Initializing K Neighbors Classifier
2024-12-04 22:39:17,594:INFO:Total runtime is 0.2752801696459452 minutes
2024-12-04 22:39:17,595:INFO:SubProcess create_model() called ==================================
2024-12-04 22:39:17,596:INFO:Initializing create_model()
2024-12-04 22:39:17,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:39:17,596:INFO:Checking exceptions
2024-12-04 22:39:17,596:INFO:Importing libraries
2024-12-04 22:39:17,596:INFO:Copying training dataset
2024-12-04 22:39:17,628:INFO:Defining folds
2024-12-04 22:39:17,629:INFO:Declaring metric variables
2024-12-04 22:39:17,629:INFO:Importing untrained model
2024-12-04 22:39:17,630:INFO:K Neighbors Classifier Imported successfully
2024-12-04 22:39:17,630:INFO:Starting cross validation
2024-12-04 22:39:17,631:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:39:21,985:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,000:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,005:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,006:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,020:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,020:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,034:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,049:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,056:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,080:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,086:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,093:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,099:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,100:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,106:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,107:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,114:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,114:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,120:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,121:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,138:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,155:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,352:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,365:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,367:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,379:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,389:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,409:INFO:Calculating mean and std
2024-12-04 22:39:22,410:INFO:Creating metrics dataframe
2024-12-04 22:39:22,414:INFO:Uploading results into container
2024-12-04 22:39:22,415:INFO:Uploading model into container now
2024-12-04 22:39:22,416:INFO:_master_model_container: 2
2024-12-04 22:39:22,416:INFO:_display_container: 2
2024-12-04 22:39:22,417:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-04 22:39:22,417:INFO:create_model() successfully completed......................................
2024-12-04 22:39:22,497:INFO:SubProcess create_model() end ==================================
2024-12-04 22:39:22,498:INFO:Creating metrics dataframe
2024-12-04 22:39:22,501:INFO:Initializing Naive Bayes
2024-12-04 22:39:22,501:INFO:Total runtime is 0.3570680896441142 minutes
2024-12-04 22:39:22,502:INFO:SubProcess create_model() called ==================================
2024-12-04 22:39:22,502:INFO:Initializing create_model()
2024-12-04 22:39:22,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:39:22,502:INFO:Checking exceptions
2024-12-04 22:39:22,502:INFO:Importing libraries
2024-12-04 22:39:22,502:INFO:Copying training dataset
2024-12-04 22:39:22,531:INFO:Defining folds
2024-12-04 22:39:22,531:INFO:Declaring metric variables
2024-12-04 22:39:22,531:INFO:Importing untrained model
2024-12-04 22:39:22,531:INFO:Naive Bayes Imported successfully
2024-12-04 22:39:22,532:INFO:Starting cross validation
2024-12-04 22:39:22,533:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:39:22,684:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,696:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,700:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,701:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,710:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,711:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,713:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,713:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,719:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,722:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,725:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,726:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,730:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,734:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,743:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,746:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,749:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,755:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,758:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,761:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,762:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,765:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,775:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,804:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,810:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,810:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,817:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,818:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,827:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:22,844:INFO:Calculating mean and std
2024-12-04 22:39:22,845:INFO:Creating metrics dataframe
2024-12-04 22:39:22,848:INFO:Uploading results into container
2024-12-04 22:39:22,848:INFO:Uploading model into container now
2024-12-04 22:39:22,849:INFO:_master_model_container: 3
2024-12-04 22:39:22,849:INFO:_display_container: 2
2024-12-04 22:39:22,849:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 22:39:22,849:INFO:create_model() successfully completed......................................
2024-12-04 22:39:22,936:INFO:SubProcess create_model() end ==================================
2024-12-04 22:39:22,936:INFO:Creating metrics dataframe
2024-12-04 22:39:22,943:INFO:Initializing Decision Tree Classifier
2024-12-04 22:39:22,943:INFO:Total runtime is 0.36442383925120037 minutes
2024-12-04 22:39:22,943:INFO:SubProcess create_model() called ==================================
2024-12-04 22:39:22,944:INFO:Initializing create_model()
2024-12-04 22:39:22,944:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:39:22,944:INFO:Checking exceptions
2024-12-04 22:39:22,944:INFO:Importing libraries
2024-12-04 22:39:22,945:INFO:Copying training dataset
2024-12-04 22:39:22,982:INFO:Defining folds
2024-12-04 22:39:22,983:INFO:Declaring metric variables
2024-12-04 22:39:22,983:INFO:Importing untrained model
2024-12-04 22:39:22,984:INFO:Decision Tree Classifier Imported successfully
2024-12-04 22:39:22,985:INFO:Starting cross validation
2024-12-04 22:39:22,986:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:39:23,704:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,710:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,713:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,720:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,723:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,729:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,734:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,738:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,745:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,767:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,779:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,783:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,792:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,796:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,810:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,811:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,823:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,895:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,896:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,904:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,908:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,917:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:23,919:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:24,294:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:24,299:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:24,302:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:24,305:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:24,309:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:24,315:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:24,331:INFO:Calculating mean and std
2024-12-04 22:39:24,331:INFO:Creating metrics dataframe
2024-12-04 22:39:24,333:INFO:Uploading results into container
2024-12-04 22:39:24,333:INFO:Uploading model into container now
2024-12-04 22:39:24,334:INFO:_master_model_container: 4
2024-12-04 22:39:24,334:INFO:_display_container: 2
2024-12-04 22:39:24,334:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5744, splitter='best')
2024-12-04 22:39:24,334:INFO:create_model() successfully completed......................................
2024-12-04 22:39:24,422:INFO:SubProcess create_model() end ==================================
2024-12-04 22:39:24,422:INFO:Creating metrics dataframe
2024-12-04 22:39:24,426:INFO:Initializing SVM - Linear Kernel
2024-12-04 22:39:24,427:INFO:Total runtime is 0.3891443133354187 minutes
2024-12-04 22:39:24,427:INFO:SubProcess create_model() called ==================================
2024-12-04 22:39:24,427:INFO:Initializing create_model()
2024-12-04 22:39:24,427:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:39:24,427:INFO:Checking exceptions
2024-12-04 22:39:24,428:INFO:Importing libraries
2024-12-04 22:39:24,428:INFO:Copying training dataset
2024-12-04 22:39:24,461:INFO:Defining folds
2024-12-04 22:39:24,461:INFO:Declaring metric variables
2024-12-04 22:39:24,461:INFO:Importing untrained model
2024-12-04 22:39:24,462:INFO:SVM - Linear Kernel Imported successfully
2024-12-04 22:39:24,462:INFO:Starting cross validation
2024-12-04 22:39:24,464:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:39:25,583:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:25,588:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,599:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,604:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:25,608:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,621:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,627:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:25,632:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,633:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,679:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:25,684:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,695:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:25,696:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,699:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,701:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,709:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,729:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,779:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,781:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:25,797:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,366:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:26,370:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,387:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,401:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,423:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:26,429:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,443:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,455:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,468:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:26,474:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,504:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,520:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,746:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:26,750:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,756:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,762:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,765:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:26,769:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,777:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,784:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:26,794:INFO:Calculating mean and std
2024-12-04 22:39:26,795:INFO:Creating metrics dataframe
2024-12-04 22:39:26,799:INFO:Uploading results into container
2024-12-04 22:39:26,800:INFO:Uploading model into container now
2024-12-04 22:39:26,801:INFO:_master_model_container: 5
2024-12-04 22:39:26,801:INFO:_display_container: 2
2024-12-04 22:39:26,802:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5744, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-04 22:39:26,802:INFO:create_model() successfully completed......................................
2024-12-04 22:39:26,892:INFO:SubProcess create_model() end ==================================
2024-12-04 22:39:26,893:INFO:Creating metrics dataframe
2024-12-04 22:39:26,897:INFO:Initializing Ridge Classifier
2024-12-04 22:39:26,898:INFO:Total runtime is 0.43034486373265585 minutes
2024-12-04 22:39:26,898:INFO:SubProcess create_model() called ==================================
2024-12-04 22:39:26,899:INFO:Initializing create_model()
2024-12-04 22:39:26,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:39:26,899:INFO:Checking exceptions
2024-12-04 22:39:26,899:INFO:Importing libraries
2024-12-04 22:39:26,899:INFO:Copying training dataset
2024-12-04 22:39:26,938:INFO:Defining folds
2024-12-04 22:39:26,938:INFO:Declaring metric variables
2024-12-04 22:39:26,939:INFO:Importing untrained model
2024-12-04 22:39:26,940:INFO:Ridge Classifier Imported successfully
2024-12-04 22:39:26,940:INFO:Starting cross validation
2024-12-04 22:39:26,942:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:39:27,104:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:27,105:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:27,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:27,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:27,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,114:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,115:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,120:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:27,120:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:27,120:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:27,121:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,124:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,124:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,125:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,125:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,125:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,133:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,136:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,137:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,137:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,137:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,146:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,148:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,149:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,160:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:27,169:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,184:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,197:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,232:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:27,232:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:27,236:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,237:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,247:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,256:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,256:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:27,270:INFO:Calculating mean and std
2024-12-04 22:39:27,270:INFO:Creating metrics dataframe
2024-12-04 22:39:27,272:INFO:Uploading results into container
2024-12-04 22:39:27,273:INFO:Uploading model into container now
2024-12-04 22:39:27,274:INFO:_master_model_container: 6
2024-12-04 22:39:27,274:INFO:_display_container: 2
2024-12-04 22:39:27,274:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5744, solver='auto',
                tol=0.0001)
2024-12-04 22:39:27,274:INFO:create_model() successfully completed......................................
2024-12-04 22:39:27,355:INFO:SubProcess create_model() end ==================================
2024-12-04 22:39:27,355:INFO:Creating metrics dataframe
2024-12-04 22:39:27,358:INFO:Initializing Random Forest Classifier
2024-12-04 22:39:27,358:INFO:Total runtime is 0.4380081057548523 minutes
2024-12-04 22:39:27,358:INFO:SubProcess create_model() called ==================================
2024-12-04 22:39:27,359:INFO:Initializing create_model()
2024-12-04 22:39:27,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:39:27,359:INFO:Checking exceptions
2024-12-04 22:39:27,359:INFO:Importing libraries
2024-12-04 22:39:27,359:INFO:Copying training dataset
2024-12-04 22:39:27,375:INFO:Defining folds
2024-12-04 22:39:27,375:INFO:Declaring metric variables
2024-12-04 22:39:27,375:INFO:Importing untrained model
2024-12-04 22:39:27,375:INFO:Random Forest Classifier Imported successfully
2024-12-04 22:39:27,375:INFO:Starting cross validation
2024-12-04 22:39:27,376:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:39:35,297:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,297:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,304:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,306:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,308:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,308:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,309:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,316:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,317:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,320:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,323:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,330:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,332:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,337:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,339:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,352:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,368:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,417:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,429:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,440:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,478:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,488:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:35,564:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,396:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,404:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,413:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,424:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,437:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,444:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,456:INFO:Calculating mean and std
2024-12-04 22:39:37,458:INFO:Creating metrics dataframe
2024-12-04 22:39:37,460:INFO:Uploading results into container
2024-12-04 22:39:37,461:INFO:Uploading model into container now
2024-12-04 22:39:37,462:INFO:_master_model_container: 7
2024-12-04 22:39:37,462:INFO:_display_container: 2
2024-12-04 22:39:37,463:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5744, verbose=0,
                       warm_start=False)
2024-12-04 22:39:37,463:INFO:create_model() successfully completed......................................
2024-12-04 22:39:37,554:INFO:SubProcess create_model() end ==================================
2024-12-04 22:39:37,554:INFO:Creating metrics dataframe
2024-12-04 22:39:37,557:INFO:Initializing Quadratic Discriminant Analysis
2024-12-04 22:39:37,557:INFO:Total runtime is 0.6079938570658365 minutes
2024-12-04 22:39:37,557:INFO:SubProcess create_model() called ==================================
2024-12-04 22:39:37,558:INFO:Initializing create_model()
2024-12-04 22:39:37,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:39:37,558:INFO:Checking exceptions
2024-12-04 22:39:37,558:INFO:Importing libraries
2024-12-04 22:39:37,558:INFO:Copying training dataset
2024-12-04 22:39:37,594:INFO:Defining folds
2024-12-04 22:39:37,594:INFO:Declaring metric variables
2024-12-04 22:39:37,595:INFO:Importing untrained model
2024-12-04 22:39:37,595:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-04 22:39:37,596:INFO:Starting cross validation
2024-12-04 22:39:37,597:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:39:37,855:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:37,861:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,863:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:37,864:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:37,865:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:37,870:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,871:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,872:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,875:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,875:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,883:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,884:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,884:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:37,884:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,889:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,890:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:37,892:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:37,893:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,893:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,894:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,896:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,897:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,898:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,903:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,906:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,908:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,911:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,917:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,917:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,926:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:37,932:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:38,003:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:38,006:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:38,009:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:38,012:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:38,020:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:38,021:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:38,029:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:38,034:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:38,054:INFO:Calculating mean and std
2024-12-04 22:39:38,056:INFO:Creating metrics dataframe
2024-12-04 22:39:38,059:INFO:Uploading results into container
2024-12-04 22:39:38,060:INFO:Uploading model into container now
2024-12-04 22:39:38,061:INFO:_master_model_container: 8
2024-12-04 22:39:38,061:INFO:_display_container: 2
2024-12-04 22:39:38,062:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-04 22:39:38,062:INFO:create_model() successfully completed......................................
2024-12-04 22:39:38,150:INFO:SubProcess create_model() end ==================================
2024-12-04 22:39:38,150:INFO:Creating metrics dataframe
2024-12-04 22:39:38,155:INFO:Initializing Ada Boost Classifier
2024-12-04 22:39:38,156:INFO:Total runtime is 0.6179847478866577 minutes
2024-12-04 22:39:38,156:INFO:SubProcess create_model() called ==================================
2024-12-04 22:39:38,157:INFO:Initializing create_model()
2024-12-04 22:39:38,157:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:39:38,157:INFO:Checking exceptions
2024-12-04 22:39:38,157:INFO:Importing libraries
2024-12-04 22:39:38,157:INFO:Copying training dataset
2024-12-04 22:39:38,188:INFO:Defining folds
2024-12-04 22:39:38,188:INFO:Declaring metric variables
2024-12-04 22:39:38,188:INFO:Importing untrained model
2024-12-04 22:39:38,189:INFO:Ada Boost Classifier Imported successfully
2024-12-04 22:39:38,189:INFO:Starting cross validation
2024-12-04 22:39:38,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:39:38,262:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:39:38,277:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:39:38,289:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:39:38,305:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:39:38,309:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:39:38,318:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:39:38,331:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:39:38,338:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:39:40,256:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:40,262:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,276:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,277:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:40,282:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,283:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:40,288:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,288:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,296:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,309:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,332:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,350:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,390:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:39:40,431:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:39:40,596:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:40,602:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,614:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,627:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,655:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:40,664:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,677:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,693:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,784:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:40,790:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,802:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,814:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,834:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:40,837:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,841:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:40,845:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,851:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,856:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,862:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:40,866:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:42,159:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:42,165:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:42,176:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:42,189:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:42,211:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:39:42,215:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:42,225:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:42,236:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:39:42,262:INFO:Calculating mean and std
2024-12-04 22:39:42,262:INFO:Creating metrics dataframe
2024-12-04 22:39:42,265:INFO:Uploading results into container
2024-12-04 22:39:42,266:INFO:Uploading model into container now
2024-12-04 22:39:42,267:INFO:_master_model_container: 9
2024-12-04 22:39:42,267:INFO:_display_container: 2
2024-12-04 22:39:42,267:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5744)
2024-12-04 22:39:42,267:INFO:create_model() successfully completed......................................
2024-12-04 22:39:42,358:INFO:SubProcess create_model() end ==================================
2024-12-04 22:39:42,358:INFO:Creating metrics dataframe
2024-12-04 22:39:42,365:INFO:Initializing Gradient Boosting Classifier
2024-12-04 22:39:42,366:INFO:Total runtime is 0.6881487925847372 minutes
2024-12-04 22:39:42,366:INFO:SubProcess create_model() called ==================================
2024-12-04 22:39:42,367:INFO:Initializing create_model()
2024-12-04 22:39:42,367:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:39:42,367:INFO:Checking exceptions
2024-12-04 22:39:42,367:INFO:Importing libraries
2024-12-04 22:39:42,367:INFO:Copying training dataset
2024-12-04 22:39:42,397:INFO:Defining folds
2024-12-04 22:39:42,397:INFO:Declaring metric variables
2024-12-04 22:39:42,398:INFO:Importing untrained model
2024-12-04 22:39:42,398:INFO:Gradient Boosting Classifier Imported successfully
2024-12-04 22:39:42,399:INFO:Starting cross validation
2024-12-04 22:39:42,400:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:40:21,928:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:21,933:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:21,950:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:21,963:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:22,162:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:22,167:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:22,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:22,197:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:23,541:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:23,547:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:23,600:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:23,614:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:24,292:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:24,298:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:24,316:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:24,328:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:24,916:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:24,922:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:24,935:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:24,948:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:25,003:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:25,009:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:25,024:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:25,036:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:25,172:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:25,177:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:25,189:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:25,200:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:26,094:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:26,100:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:26,113:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:26,128:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,412:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:50,415:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,422:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,431:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,460:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:50,463:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,469:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,475:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,494:INFO:Calculating mean and std
2024-12-04 22:40:50,497:INFO:Creating metrics dataframe
2024-12-04 22:40:50,529:INFO:Uploading results into container
2024-12-04 22:40:50,534:INFO:Uploading model into container now
2024-12-04 22:40:50,538:INFO:_master_model_container: 10
2024-12-04 22:40:50,538:INFO:_display_container: 2
2024-12-04 22:40:50,542:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5744, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-04 22:40:50,542:INFO:create_model() successfully completed......................................
2024-12-04 22:40:50,746:INFO:SubProcess create_model() end ==================================
2024-12-04 22:40:50,746:INFO:Creating metrics dataframe
2024-12-04 22:40:50,749:INFO:Initializing Linear Discriminant Analysis
2024-12-04 22:40:50,749:INFO:Total runtime is 1.8278616468111675 minutes
2024-12-04 22:40:50,750:INFO:SubProcess create_model() called ==================================
2024-12-04 22:40:50,750:INFO:Initializing create_model()
2024-12-04 22:40:50,750:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:40:50,750:INFO:Checking exceptions
2024-12-04 22:40:50,750:INFO:Importing libraries
2024-12-04 22:40:50,751:INFO:Copying training dataset
2024-12-04 22:40:50,767:INFO:Defining folds
2024-12-04 22:40:50,768:INFO:Declaring metric variables
2024-12-04 22:40:50,768:INFO:Importing untrained model
2024-12-04 22:40:50,768:INFO:Linear Discriminant Analysis Imported successfully
2024-12-04 22:40:50,768:INFO:Starting cross validation
2024-12-04 22:40:50,769:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:40:50,940:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:50,948:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,950:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,952:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:50,954:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:50,957:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,959:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,963:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,963:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,971:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,973:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:50,974:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:50,978:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,979:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,978:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,980:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,984:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:50,985:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,990:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,993:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,995:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:50,996:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:51,001:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,004:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,007:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,010:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,016:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,029:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,033:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,034:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,045:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,093:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:51,099:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,100:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:40:51,106:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,111:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,116:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,123:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,129:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:51,154:INFO:Calculating mean and std
2024-12-04 22:40:51,156:INFO:Creating metrics dataframe
2024-12-04 22:40:51,159:INFO:Uploading results into container
2024-12-04 22:40:51,160:INFO:Uploading model into container now
2024-12-04 22:40:51,161:INFO:_master_model_container: 11
2024-12-04 22:40:51,161:INFO:_display_container: 2
2024-12-04 22:40:51,161:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-04 22:40:51,162:INFO:create_model() successfully completed......................................
2024-12-04 22:40:51,255:INFO:SubProcess create_model() end ==================================
2024-12-04 22:40:51,255:INFO:Creating metrics dataframe
2024-12-04 22:40:51,259:INFO:Initializing Extra Trees Classifier
2024-12-04 22:40:51,259:INFO:Total runtime is 1.8363547404607137 minutes
2024-12-04 22:40:51,260:INFO:SubProcess create_model() called ==================================
2024-12-04 22:40:51,260:INFO:Initializing create_model()
2024-12-04 22:40:51,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:40:51,260:INFO:Checking exceptions
2024-12-04 22:40:51,260:INFO:Importing libraries
2024-12-04 22:40:51,260:INFO:Copying training dataset
2024-12-04 22:40:51,289:INFO:Defining folds
2024-12-04 22:40:51,289:INFO:Declaring metric variables
2024-12-04 22:40:51,290:INFO:Importing untrained model
2024-12-04 22:40:51,290:INFO:Extra Trees Classifier Imported successfully
2024-12-04 22:40:51,291:INFO:Starting cross validation
2024-12-04 22:40:51,292:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:40:56,537:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,537:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,551:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,567:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,568:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,579:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,581:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,594:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,596:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,601:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,616:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,617:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,624:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,667:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,695:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,714:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,728:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,851:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,911:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:56,954:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:57,503:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:57,517:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:57,530:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:57,839:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:57,847:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:57,854:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:57,855:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:57,864:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:57,875:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:40:57,901:INFO:Calculating mean and std
2024-12-04 22:40:57,925:INFO:Creating metrics dataframe
2024-12-04 22:40:57,927:INFO:Uploading results into container
2024-12-04 22:40:57,928:INFO:Uploading model into container now
2024-12-04 22:40:57,963:INFO:_master_model_container: 12
2024-12-04 22:40:57,963:INFO:_display_container: 2
2024-12-04 22:40:57,963:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5744, verbose=0,
                     warm_start=False)
2024-12-04 22:40:58,022:INFO:create_model() successfully completed......................................
2024-12-04 22:40:58,105:INFO:SubProcess create_model() end ==================================
2024-12-04 22:40:58,105:INFO:Creating metrics dataframe
2024-12-04 22:40:58,139:INFO:Initializing Extreme Gradient Boosting
2024-12-04 22:40:58,139:INFO:Total runtime is 1.9510321259498595 minutes
2024-12-04 22:40:58,139:INFO:SubProcess create_model() called ==================================
2024-12-04 22:40:58,140:INFO:Initializing create_model()
2024-12-04 22:40:58,140:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:40:58,173:INFO:Checking exceptions
2024-12-04 22:40:58,173:INFO:Importing libraries
2024-12-04 22:40:58,173:INFO:Copying training dataset
2024-12-04 22:40:58,188:INFO:Defining folds
2024-12-04 22:40:58,188:INFO:Declaring metric variables
2024-12-04 22:40:58,188:INFO:Importing untrained model
2024-12-04 22:40:58,189:INFO:Extreme Gradient Boosting Imported successfully
2024-12-04 22:40:58,189:INFO:Starting cross validation
2024-12-04 22:40:58,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:41:26,713:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:26,726:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:26,746:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:26,747:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:26,773:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:26,797:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:26,860:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:26,887:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:26,907:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:27,502:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:27,516:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:27,532:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:27,929:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:27,943:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:27,957:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:28,830:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:28,850:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:28,865:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:29,503:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:29,503:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:29,517:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:29,517:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:29,529:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:29,531:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:42,845:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:42,852:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:42,858:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:42,865:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:42,872:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:42,878:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:42,898:INFO:Calculating mean and std
2024-12-04 22:41:42,899:INFO:Creating metrics dataframe
2024-12-04 22:41:42,902:INFO:Uploading results into container
2024-12-04 22:41:42,903:INFO:Uploading model into container now
2024-12-04 22:41:42,904:INFO:_master_model_container: 13
2024-12-04 22:41:42,904:INFO:_display_container: 2
2024-12-04 22:41:42,905:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic',
              predictor=None, random_state=5744, reg_alpha=None, ...)
2024-12-04 22:41:42,905:INFO:create_model() successfully completed......................................
2024-12-04 22:41:42,975:INFO:SubProcess create_model() end ==================================
2024-12-04 22:41:42,975:INFO:Creating metrics dataframe
2024-12-04 22:41:42,981:INFO:Initializing Light Gradient Boosting Machine
2024-12-04 22:41:42,981:INFO:Total runtime is 2.698401319980621 minutes
2024-12-04 22:41:42,981:INFO:SubProcess create_model() called ==================================
2024-12-04 22:41:42,981:INFO:Initializing create_model()
2024-12-04 22:41:42,981:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:41:42,981:INFO:Checking exceptions
2024-12-04 22:41:42,981:INFO:Importing libraries
2024-12-04 22:41:42,981:INFO:Copying training dataset
2024-12-04 22:41:42,996:INFO:Defining folds
2024-12-04 22:41:42,996:INFO:Declaring metric variables
2024-12-04 22:41:42,996:INFO:Importing untrained model
2024-12-04 22:41:42,996:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-04 22:41:42,996:INFO:Starting cross validation
2024-12-04 22:41:42,997:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:41:49,939:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:49,949:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:49,950:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:49,953:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:49,962:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:49,965:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:49,979:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:49,985:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:49,987:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:49,995:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:50,000:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:50,007:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:50,013:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:50,017:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:50,019:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:50,033:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:50,048:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:50,659:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:50,671:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:50,685:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:50,709:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:50,723:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:50,736:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,504:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,517:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,518:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,529:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,530:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,541:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,559:INFO:Calculating mean and std
2024-12-04 22:41:52,560:INFO:Creating metrics dataframe
2024-12-04 22:41:52,563:INFO:Uploading results into container
2024-12-04 22:41:52,563:INFO:Uploading model into container now
2024-12-04 22:41:52,564:INFO:_master_model_container: 14
2024-12-04 22:41:52,564:INFO:_display_container: 2
2024-12-04 22:41:52,565:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5744, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-04 22:41:52,565:INFO:create_model() successfully completed......................................
2024-12-04 22:41:52,653:INFO:SubProcess create_model() end ==================================
2024-12-04 22:41:52,653:INFO:Creating metrics dataframe
2024-12-04 22:41:52,657:INFO:Initializing Dummy Classifier
2024-12-04 22:41:52,657:INFO:Total runtime is 2.8596547365188596 minutes
2024-12-04 22:41:52,657:INFO:SubProcess create_model() called ==================================
2024-12-04 22:41:52,657:INFO:Initializing create_model()
2024-12-04 22:41:52,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001B2C8592B90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:41:52,657:INFO:Checking exceptions
2024-12-04 22:41:52,658:INFO:Importing libraries
2024-12-04 22:41:52,658:INFO:Copying training dataset
2024-12-04 22:41:52,681:INFO:Defining folds
2024-12-04 22:41:52,681:INFO:Declaring metric variables
2024-12-04 22:41:52,681:INFO:Importing untrained model
2024-12-04 22:41:52,682:INFO:Dummy Classifier Imported successfully
2024-12-04 22:41:52,682:INFO:Starting cross validation
2024-12-04 22:41:52,683:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:41:52,811:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,817:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,818:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,821:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,824:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,831:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,832:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,832:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:41:52,835:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,838:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,839:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:41:52,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,841:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:41:52,844:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,846:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,849:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,849:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,851:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,858:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:41:52,858:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,864:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:41:52,864:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,868:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,870:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,872:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,873:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,875:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:41:52,878:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:41:52,882:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:41:52,882:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,884:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,888:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,931:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,938:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,938:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,943:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:41:52,945:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:41:52,947:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,949:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:52,972:INFO:Calculating mean and std
2024-12-04 22:41:52,973:INFO:Creating metrics dataframe
2024-12-04 22:41:52,976:INFO:Uploading results into container
2024-12-04 22:41:52,976:INFO:Uploading model into container now
2024-12-04 22:41:52,977:INFO:_master_model_container: 15
2024-12-04 22:41:52,977:INFO:_display_container: 2
2024-12-04 22:41:52,977:INFO:DummyClassifier(constant=None, random_state=5744, strategy='prior')
2024-12-04 22:41:52,977:INFO:create_model() successfully completed......................................
2024-12-04 22:41:53,046:INFO:SubProcess create_model() end ==================================
2024-12-04 22:41:53,046:INFO:Creating metrics dataframe
2024-12-04 22:41:53,059:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-04 22:41:53,061:INFO:Initializing create_model()
2024-12-04 22:41:53,061:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:41:53,062:INFO:Checking exceptions
2024-12-04 22:41:53,063:INFO:Importing libraries
2024-12-04 22:41:53,063:INFO:Copying training dataset
2024-12-04 22:41:53,082:INFO:Defining folds
2024-12-04 22:41:53,083:INFO:Declaring metric variables
2024-12-04 22:41:53,083:INFO:Importing untrained model
2024-12-04 22:41:53,083:INFO:Declaring custom model
2024-12-04 22:41:53,083:INFO:K Neighbors Classifier Imported successfully
2024-12-04 22:41:53,084:INFO:Cross validation set to False
2024-12-04 22:41:53,084:INFO:Fitting Model
2024-12-04 22:41:53,108:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-04 22:41:53,108:INFO:create_model() successfully completed......................................
2024-12-04 22:41:53,189:INFO:_master_model_container: 15
2024-12-04 22:41:53,189:INFO:_display_container: 2
2024-12-04 22:41:53,190:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-04 22:41:53,190:INFO:compare_models() successfully completed......................................
2024-12-04 22:41:53,193:INFO:Initializing evaluate_model()
2024-12-04 22:41:53,193:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-12-04 22:41:53,443:INFO:Initializing plot_model()
2024-12-04 22:41:53,443:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-12-04 22:41:53,444:INFO:Checking exceptions
2024-12-04 22:41:53,461:INFO:Preloading libraries
2024-12-04 22:41:53,462:INFO:Copying training dataset
2024-12-04 22:41:53,462:INFO:Plot type: pipeline
2024-12-04 22:41:54,440:INFO:Visual Rendered Successfully
2024-12-04 22:41:54,525:INFO:plot_model() successfully completed......................................
2024-12-04 22:41:54,527:INFO:Initializing plot_model()
2024-12-04 22:41:54,527:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 22:41:54,528:INFO:Checking exceptions
2024-12-04 22:41:54,536:INFO:Preloading libraries
2024-12-04 22:41:54,537:INFO:Copying training dataset
2024-12-04 22:41:54,538:INFO:Plot type: auc
2024-12-04 22:41:54,841:INFO:Fitting Model
2024-12-04 22:41:54,845:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2024-12-04 22:41:54,845:INFO:Scoring test/hold-out set
2024-12-04 22:41:56,274:INFO:Visual Rendered Successfully
2024-12-04 22:41:56,344:INFO:plot_model() successfully completed......................................
2024-12-04 22:41:56,345:INFO:Initializing plot_model()
2024-12-04 22:41:56,345:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 22:41:56,345:INFO:Checking exceptions
2024-12-04 22:41:56,350:INFO:Preloading libraries
2024-12-04 22:41:56,351:INFO:Copying training dataset
2024-12-04 22:41:56,351:INFO:Plot type: confusion_matrix
2024-12-04 22:41:56,528:INFO:Fitting Model
2024-12-04 22:41:56,529:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but KNeighborsClassifier was fitted with feature names
  warnings.warn(

2024-12-04 22:41:56,529:INFO:Scoring test/hold-out set
2024-12-04 22:41:57,464:INFO:Visual Rendered Successfully
2024-12-04 22:41:57,548:INFO:plot_model() successfully completed......................................
2024-12-04 22:41:57,549:INFO:Initializing predict_model()
2024-12-04 22:41:57,549:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B2C83774C0>)
2024-12-04 22:41:57,549:INFO:Checking exceptions
2024-12-04 22:41:57,549:INFO:Preloading libraries
2024-12-04 22:41:58,124:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:58,160:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:58,197:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:58,317:INFO:Initializing predict_model()
2024-12-04 22:41:58,317:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001B2C6C3A350>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001B2C8957D80>)
2024-12-04 22:41:58,317:INFO:Checking exceptions
2024-12-04 22:41:58,317:INFO:Preloading libraries
2024-12-04 22:41:58,318:INFO:Set up data.
2024-12-04 22:41:58,340:INFO:Set up index.
2024-12-04 22:41:59,100:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:59,151:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:41:59,206:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:00,662:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:44:00,662:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:44:00,662:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:44:00,662:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:44:02,711:INFO:PyCaret ClassificationExperiment
2024-12-04 22:44:02,711:INFO:Logging name: clf-default-name
2024-12-04 22:44:02,711:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-04 22:44:02,711:INFO:version 3.3.2
2024-12-04 22:44:02,711:INFO:Initializing setup()
2024-12-04 22:44:02,711:INFO:self.USI: b2d3
2024-12-04 22:44:02,711:INFO:self._variable_keys: {'pipeline', 'n_jobs_param', 'html_param', 'X_test', 'fold_groups_param', 'exp_name_log', 'is_multiclass', '_ml_usecase', 'seed', '_available_plots', 'log_plots_param', 'fold_generator', 'gpu_n_jobs_param', 'logging_param', 'idx', 'y_train', 'gpu_param', 'fix_imbalance', 'target_param', 'y', 'USI', 'memory', 'X', 'y_test', 'data', 'X_train', 'exp_id', 'fold_shuffle_param'}
2024-12-04 22:44:02,711:INFO:Checking environment
2024-12-04 22:44:02,711:INFO:python_version: 3.11.9
2024-12-04 22:44:02,711:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-12-04 22:44:02,711:INFO:machine: AMD64
2024-12-04 22:44:02,758:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-04 22:44:02,767:INFO:Memory: svmem(total=8345964544, available=545669120, percent=93.5, used=7800295424, free=545669120)
2024-12-04 22:44:02,770:INFO:Physical Core: 4
2024-12-04 22:44:02,771:INFO:Logical Core: 8
2024-12-04 22:44:02,771:INFO:Checking libraries
2024-12-04 22:44:02,771:INFO:System:
2024-12-04 22:44:02,771:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-12-04 22:44:02,771:INFO:executable: C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Scripts\python.exe
2024-12-04 22:44:02,771:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-04 22:44:02,771:INFO:PyCaret required dependencies:
2024-12-04 22:44:02,835:INFO:                 pip: 24.3.1
2024-12-04 22:44:02,835:INFO:          setuptools: 68.2.0
2024-12-04 22:44:02,835:INFO:             pycaret: 3.3.2
2024-12-04 22:44:02,835:INFO:             IPython: 8.29.0
2024-12-04 22:44:02,835:INFO:          ipywidgets: 8.1.5
2024-12-04 22:44:02,835:INFO:                tqdm: 4.67.0
2024-12-04 22:44:02,835:INFO:               numpy: 1.26.4
2024-12-04 22:44:02,835:INFO:              pandas: 2.1.4
2024-12-04 22:44:02,835:INFO:              jinja2: 3.1.4
2024-12-04 22:44:02,835:INFO:               scipy: 1.11.4
2024-12-04 22:44:02,835:INFO:              joblib: 1.3.2
2024-12-04 22:44:02,835:INFO:             sklearn: 1.4.2
2024-12-04 22:44:02,835:INFO:                pyod: 2.0.2
2024-12-04 22:44:02,835:INFO:            imblearn: 0.12.4
2024-12-04 22:44:02,835:INFO:   category_encoders: 2.6.4
2024-12-04 22:44:02,836:INFO:            lightgbm: 4.5.0
2024-12-04 22:44:02,836:INFO:               numba: 0.60.0
2024-12-04 22:44:02,836:INFO:            requests: 2.32.3
2024-12-04 22:44:02,836:INFO:          matplotlib: 3.7.5
2024-12-04 22:44:02,836:INFO:          scikitplot: 0.3.7
2024-12-04 22:44:02,836:INFO:         yellowbrick: 1.5
2024-12-04 22:44:02,836:INFO:              plotly: 5.24.1
2024-12-04 22:44:02,836:INFO:    plotly-resampler: Not installed
2024-12-04 22:44:02,836:INFO:             kaleido: 0.2.1
2024-12-04 22:44:02,836:INFO:           schemdraw: 0.15
2024-12-04 22:44:02,836:INFO:         statsmodels: 0.14.4
2024-12-04 22:44:02,836:INFO:              sktime: 0.26.0
2024-12-04 22:44:02,836:INFO:               tbats: 1.1.3
2024-12-04 22:44:02,836:INFO:            pmdarima: 2.0.4
2024-12-04 22:44:02,836:INFO:              psutil: 6.1.0
2024-12-04 22:44:02,836:INFO:          markupsafe: 2.1.5
2024-12-04 22:44:02,836:INFO:             pickle5: Not installed
2024-12-04 22:44:02,836:INFO:         cloudpickle: 3.1.0
2024-12-04 22:44:02,836:INFO:         deprecation: 2.1.0
2024-12-04 22:44:02,836:INFO:              xxhash: 3.5.0
2024-12-04 22:44:02,836:INFO:           wurlitzer: Not installed
2024-12-04 22:44:02,836:INFO:PyCaret optional dependencies:
2024-12-04 22:44:02,858:INFO:                shap: Not installed
2024-12-04 22:44:02,858:INFO:           interpret: Not installed
2024-12-04 22:44:02,858:INFO:                umap: Not installed
2024-12-04 22:44:02,858:INFO:     ydata_profiling: Not installed
2024-12-04 22:44:02,858:INFO:  explainerdashboard: Not installed
2024-12-04 22:44:02,858:INFO:             autoviz: 0.1.905
2024-12-04 22:44:02,858:INFO:           fairlearn: Not installed
2024-12-04 22:44:02,858:INFO:          deepchecks: Not installed
2024-12-04 22:44:02,858:INFO:             xgboost: 1.6.2
2024-12-04 22:44:02,858:INFO:            catboost: Not installed
2024-12-04 22:44:02,859:INFO:              kmodes: Not installed
2024-12-04 22:44:02,859:INFO:             mlxtend: Not installed
2024-12-04 22:44:02,859:INFO:       statsforecast: Not installed
2024-12-04 22:44:02,859:INFO:        tune_sklearn: Not installed
2024-12-04 22:44:02,859:INFO:                 ray: Not installed
2024-12-04 22:44:02,859:INFO:            hyperopt: Not installed
2024-12-04 22:44:02,859:INFO:              optuna: Not installed
2024-12-04 22:44:02,859:INFO:               skopt: Not installed
2024-12-04 22:44:02,859:INFO:              mlflow: Not installed
2024-12-04 22:44:02,859:INFO:              gradio: Not installed
2024-12-04 22:44:02,859:INFO:             fastapi: Not installed
2024-12-04 22:44:02,859:INFO:             uvicorn: Not installed
2024-12-04 22:44:02,859:INFO:              m2cgen: Not installed
2024-12-04 22:44:02,859:INFO:           evidently: Not installed
2024-12-04 22:44:02,859:INFO:               fugue: Not installed
2024-12-04 22:44:02,859:INFO:           streamlit: Not installed
2024-12-04 22:44:02,859:INFO:             prophet: Not installed
2024-12-04 22:44:02,859:INFO:None
2024-12-04 22:44:02,859:INFO:Set up data.
2024-12-04 22:44:02,892:INFO:Set up folding strategy.
2024-12-04 22:44:02,892:INFO:Set up train/test split.
2024-12-04 22:44:02,926:INFO:Set up index.
2024-12-04 22:44:02,927:INFO:Assigning column types.
2024-12-04 22:44:02,943:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-04 22:44:02,993:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 22:44:02,998:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:44:03,039:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:44:03,877:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:44:03,934:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 22:44:03,936:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:44:03,972:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:44:03,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:44:03,976:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-04 22:44:04,036:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:44:04,067:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:44:04,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:44:04,119:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:44:04,150:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:44:04,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:44:04,153:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-04 22:44:04,236:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:44:04,239:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:44:04,315:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:44:04,317:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:44:04,349:INFO:Preparing preprocessing pipeline...
2024-12-04 22:44:04,359:INFO:Set up label encoding.
2024-12-04 22:44:04,359:INFO:Set up simple imputation.
2024-12-04 22:44:04,414:INFO:Finished creating preprocessing pipeline.
2024-12-04 22:44:04,421:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-04 22:44:04,421:INFO:Creating final display dataframe.
2024-12-04 22:44:04,600:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                                989
1                        Target                                          Treatment
2                   Target type                                         Multiclass
3                Target mapping  Chemotherapy: 0, Radiation Therapy: 1, Surgery...
4           Original data shape                                        (11592, 36)
5        Transformed data shape                                        (11592, 36)
6   Transformed train set shape                                         (8114, 36)
7    Transformed test set shape                                         (3478, 36)
8              Numeric features                                                 35
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               b2d3
2024-12-04 22:44:04,696:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:44:04,699:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:44:04,789:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:44:04,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:44:04,795:INFO:setup() successfully completed in 2.1s...............
2024-12-04 22:44:04,795:INFO:Initializing compare_models()
2024-12-04 22:44:04,795:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-12-04 22:44:04,795:INFO:Checking exceptions
2024-12-04 22:44:04,808:INFO:Preparing display monitor
2024-12-04 22:44:04,966:INFO:Initializing Logistic Regression
2024-12-04 22:44:04,966:INFO:Total runtime is 0.0 minutes
2024-12-04 22:44:04,966:INFO:SubProcess create_model() called ==================================
2024-12-04 22:44:04,967:INFO:Initializing create_model()
2024-12-04 22:44:04,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:44:04,967:INFO:Checking exceptions
2024-12-04 22:44:04,967:INFO:Importing libraries
2024-12-04 22:44:04,967:INFO:Copying training dataset
2024-12-04 22:44:04,986:INFO:Defining folds
2024-12-04 22:44:04,987:INFO:Declaring metric variables
2024-12-04 22:44:04,987:INFO:Importing untrained model
2024-12-04 22:44:04,987:INFO:Logistic Regression Imported successfully
2024-12-04 22:44:04,987:INFO:Starting cross validation
2024-12-04 22:44:04,989:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:44:25,950:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:25,951:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:25,959:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:25,959:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:25,959:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:25,965:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:25,968:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:25,971:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:25,975:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:25,976:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:25,976:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:25,982:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:25,984:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:25,986:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:25,989:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:25,989:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:25,994:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:25,996:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:25,997:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:25,997:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,002:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:26,009:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,012:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,015:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,015:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,024:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,031:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,039:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,054:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,344:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:26,349:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,360:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,373:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,393:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:26,398:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,410:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,424:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:26,451:INFO:Calculating mean and std
2024-12-04 22:44:26,453:INFO:Creating metrics dataframe
2024-12-04 22:44:26,459:INFO:Uploading results into container
2024-12-04 22:44:26,460:INFO:Uploading model into container now
2024-12-04 22:44:26,461:INFO:_master_model_container: 1
2024-12-04 22:44:26,461:INFO:_display_container: 2
2024-12-04 22:44:26,461:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=989, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-04 22:44:26,461:INFO:create_model() successfully completed......................................
2024-12-04 22:44:26,597:INFO:SubProcess create_model() end ==================================
2024-12-04 22:44:26,597:INFO:Creating metrics dataframe
2024-12-04 22:44:26,601:INFO:Initializing K Neighbors Classifier
2024-12-04 22:44:26,602:INFO:Total runtime is 0.3606017549832662 minutes
2024-12-04 22:44:26,602:INFO:SubProcess create_model() called ==================================
2024-12-04 22:44:26,602:INFO:Initializing create_model()
2024-12-04 22:44:26,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:44:26,602:INFO:Checking exceptions
2024-12-04 22:44:26,602:INFO:Importing libraries
2024-12-04 22:44:26,603:INFO:Copying training dataset
2024-12-04 22:44:26,625:INFO:Defining folds
2024-12-04 22:44:26,626:INFO:Declaring metric variables
2024-12-04 22:44:26,626:INFO:Importing untrained model
2024-12-04 22:44:26,626:INFO:K Neighbors Classifier Imported successfully
2024-12-04 22:44:26,626:INFO:Starting cross validation
2024-12-04 22:44:26,628:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:44:27,584:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,625:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,635:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,646:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,656:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,678:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,712:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,716:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,720:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,727:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,730:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,736:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,741:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,750:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,751:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,757:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,766:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,769:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,777:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,795:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,799:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,803:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,812:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,822:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,969:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,981:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,990:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:27,991:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,003:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,010:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,025:INFO:Calculating mean and std
2024-12-04 22:44:28,026:INFO:Creating metrics dataframe
2024-12-04 22:44:28,027:INFO:Uploading results into container
2024-12-04 22:44:28,028:INFO:Uploading model into container now
2024-12-04 22:44:28,028:INFO:_master_model_container: 2
2024-12-04 22:44:28,029:INFO:_display_container: 2
2024-12-04 22:44:28,029:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-04 22:44:28,029:INFO:create_model() successfully completed......................................
2024-12-04 22:44:28,090:INFO:SubProcess create_model() end ==================================
2024-12-04 22:44:28,090:INFO:Creating metrics dataframe
2024-12-04 22:44:28,093:INFO:Initializing Naive Bayes
2024-12-04 22:44:28,093:INFO:Total runtime is 0.385452127456665 minutes
2024-12-04 22:44:28,093:INFO:SubProcess create_model() called ==================================
2024-12-04 22:44:28,093:INFO:Initializing create_model()
2024-12-04 22:44:28,093:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:44:28,093:INFO:Checking exceptions
2024-12-04 22:44:28,093:INFO:Importing libraries
2024-12-04 22:44:28,093:INFO:Copying training dataset
2024-12-04 22:44:28,106:INFO:Defining folds
2024-12-04 22:44:28,106:INFO:Declaring metric variables
2024-12-04 22:44:28,106:INFO:Importing untrained model
2024-12-04 22:44:28,106:INFO:Naive Bayes Imported successfully
2024-12-04 22:44:28,106:INFO:Starting cross validation
2024-12-04 22:44:28,107:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:44:28,221:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,238:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,244:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,248:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,252:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,262:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,264:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,264:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,267:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,269:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,271:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,274:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,276:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,280:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,281:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,282:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,294:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,294:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,296:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,310:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,325:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,328:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,373:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,381:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,386:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,388:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,395:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:28,410:INFO:Calculating mean and std
2024-12-04 22:44:28,411:INFO:Creating metrics dataframe
2024-12-04 22:44:28,413:INFO:Uploading results into container
2024-12-04 22:44:28,414:INFO:Uploading model into container now
2024-12-04 22:44:28,414:INFO:_master_model_container: 3
2024-12-04 22:44:28,414:INFO:_display_container: 2
2024-12-04 22:44:28,414:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 22:44:28,414:INFO:create_model() successfully completed......................................
2024-12-04 22:44:28,481:INFO:SubProcess create_model() end ==================================
2024-12-04 22:44:28,481:INFO:Creating metrics dataframe
2024-12-04 22:44:28,484:INFO:Initializing Decision Tree Classifier
2024-12-04 22:44:28,484:INFO:Total runtime is 0.39195721546808876 minutes
2024-12-04 22:44:28,485:INFO:SubProcess create_model() called ==================================
2024-12-04 22:44:28,485:INFO:Initializing create_model()
2024-12-04 22:44:28,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:44:28,485:INFO:Checking exceptions
2024-12-04 22:44:28,485:INFO:Importing libraries
2024-12-04 22:44:28,485:INFO:Copying training dataset
2024-12-04 22:44:28,502:INFO:Defining folds
2024-12-04 22:44:28,502:INFO:Declaring metric variables
2024-12-04 22:44:28,502:INFO:Importing untrained model
2024-12-04 22:44:28,503:INFO:Decision Tree Classifier Imported successfully
2024-12-04 22:44:28,503:INFO:Starting cross validation
2024-12-04 22:44:28,504:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:44:29,307:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,337:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,350:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,385:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,398:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,411:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,414:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,423:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,430:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,438:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,443:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,450:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,460:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,464:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,469:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,474:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,477:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,483:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,485:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,488:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,492:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,496:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,497:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,509:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,902:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,910:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:29,921:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:30,031:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:30,038:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:30,043:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:30,055:INFO:Calculating mean and std
2024-12-04 22:44:30,055:INFO:Creating metrics dataframe
2024-12-04 22:44:30,057:INFO:Uploading results into container
2024-12-04 22:44:30,057:INFO:Uploading model into container now
2024-12-04 22:44:30,058:INFO:_master_model_container: 4
2024-12-04 22:44:30,058:INFO:_display_container: 2
2024-12-04 22:44:30,058:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=989, splitter='best')
2024-12-04 22:44:30,058:INFO:create_model() successfully completed......................................
2024-12-04 22:44:30,119:INFO:SubProcess create_model() end ==================================
2024-12-04 22:44:30,119:INFO:Creating metrics dataframe
2024-12-04 22:44:30,122:INFO:Initializing SVM - Linear Kernel
2024-12-04 22:44:30,122:INFO:Total runtime is 0.41926992336908975 minutes
2024-12-04 22:44:30,122:INFO:SubProcess create_model() called ==================================
2024-12-04 22:44:30,123:INFO:Initializing create_model()
2024-12-04 22:44:30,123:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:44:30,123:INFO:Checking exceptions
2024-12-04 22:44:30,123:INFO:Importing libraries
2024-12-04 22:44:30,123:INFO:Copying training dataset
2024-12-04 22:44:30,135:INFO:Defining folds
2024-12-04 22:44:30,135:INFO:Declaring metric variables
2024-12-04 22:44:30,135:INFO:Importing untrained model
2024-12-04 22:44:30,136:INFO:SVM - Linear Kernel Imported successfully
2024-12-04 22:44:30,136:INFO:Starting cross validation
2024-12-04 22:44:30,136:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:44:31,189:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:31,191:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:31,195:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,197:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,202:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:31,207:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,209:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,221:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,236:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:31,242:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,253:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,253:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,257:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,267:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,272:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,488:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:31,494:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,538:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,550:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,735:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:31,741:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,770:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:31,785:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,014:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:32,019:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,032:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,043:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,073:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:32,078:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,090:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,103:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,456:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:32,457:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:32,459:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,460:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,466:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,468:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,473:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,476:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,491:INFO:Calculating mean and std
2024-12-04 22:44:32,491:INFO:Creating metrics dataframe
2024-12-04 22:44:32,493:INFO:Uploading results into container
2024-12-04 22:44:32,493:INFO:Uploading model into container now
2024-12-04 22:44:32,494:INFO:_master_model_container: 5
2024-12-04 22:44:32,494:INFO:_display_container: 2
2024-12-04 22:44:32,494:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=989, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-04 22:44:32,494:INFO:create_model() successfully completed......................................
2024-12-04 22:44:32,553:INFO:SubProcess create_model() end ==================================
2024-12-04 22:44:32,553:INFO:Creating metrics dataframe
2024-12-04 22:44:32,555:INFO:Initializing Ridge Classifier
2024-12-04 22:44:32,555:INFO:Total runtime is 0.4598200480143229 minutes
2024-12-04 22:44:32,555:INFO:SubProcess create_model() called ==================================
2024-12-04 22:44:32,555:INFO:Initializing create_model()
2024-12-04 22:44:32,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:44:32,556:INFO:Checking exceptions
2024-12-04 22:44:32,556:INFO:Importing libraries
2024-12-04 22:44:32,556:INFO:Copying training dataset
2024-12-04 22:44:32,568:INFO:Defining folds
2024-12-04 22:44:32,568:INFO:Declaring metric variables
2024-12-04 22:44:32,569:INFO:Importing untrained model
2024-12-04 22:44:32,569:INFO:Ridge Classifier Imported successfully
2024-12-04 22:44:32,569:INFO:Starting cross validation
2024-12-04 22:44:32,570:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:44:32,692:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:32,692:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:32,695:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:32,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,701:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,707:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:32,708:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:32,710:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:32,711:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,713:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,714:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,715:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,716:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,720:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:32,724:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,726:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,726:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,726:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,726:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,726:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,728:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,739:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,739:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,741:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,741:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,741:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,751:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,770:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,804:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:32,808:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,809:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:32,814:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,815:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,822:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,823:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,830:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:32,842:INFO:Calculating mean and std
2024-12-04 22:44:32,843:INFO:Creating metrics dataframe
2024-12-04 22:44:32,844:INFO:Uploading results into container
2024-12-04 22:44:32,845:INFO:Uploading model into container now
2024-12-04 22:44:32,845:INFO:_master_model_container: 6
2024-12-04 22:44:32,845:INFO:_display_container: 2
2024-12-04 22:44:32,846:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=989, solver='auto',
                tol=0.0001)
2024-12-04 22:44:32,846:INFO:create_model() successfully completed......................................
2024-12-04 22:44:32,901:INFO:SubProcess create_model() end ==================================
2024-12-04 22:44:32,901:INFO:Creating metrics dataframe
2024-12-04 22:44:32,903:INFO:Initializing Random Forest Classifier
2024-12-04 22:44:32,903:INFO:Total runtime is 0.4656086564064026 minutes
2024-12-04 22:44:32,903:INFO:SubProcess create_model() called ==================================
2024-12-04 22:44:32,903:INFO:Initializing create_model()
2024-12-04 22:44:32,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:44:32,903:INFO:Checking exceptions
2024-12-04 22:44:32,904:INFO:Importing libraries
2024-12-04 22:44:32,904:INFO:Copying training dataset
2024-12-04 22:44:32,916:INFO:Defining folds
2024-12-04 22:44:32,916:INFO:Declaring metric variables
2024-12-04 22:44:32,916:INFO:Importing untrained model
2024-12-04 22:44:32,916:INFO:Random Forest Classifier Imported successfully
2024-12-04 22:44:32,917:INFO:Starting cross validation
2024-12-04 22:44:32,917:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:44:43,212:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,217:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,238:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,242:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,256:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,262:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,269:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,276:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,277:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,281:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,295:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,409:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,427:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,430:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,442:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,443:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,466:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,473:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,492:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,506:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,507:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,521:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:43,535:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:46,419:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:46,436:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:46,454:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:46,495:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:46,509:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:46,531:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:46,582:INFO:Calculating mean and std
2024-12-04 22:44:46,584:INFO:Creating metrics dataframe
2024-12-04 22:44:46,589:INFO:Uploading results into container
2024-12-04 22:44:46,590:INFO:Uploading model into container now
2024-12-04 22:44:46,590:INFO:_master_model_container: 7
2024-12-04 22:44:46,590:INFO:_display_container: 2
2024-12-04 22:44:46,593:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=989, verbose=0,
                       warm_start=False)
2024-12-04 22:44:46,593:INFO:create_model() successfully completed......................................
2024-12-04 22:44:46,739:INFO:SubProcess create_model() end ==================================
2024-12-04 22:44:46,739:INFO:Creating metrics dataframe
2024-12-04 22:44:46,745:INFO:Initializing Quadratic Discriminant Analysis
2024-12-04 22:44:46,746:INFO:Total runtime is 0.6963279485702515 minutes
2024-12-04 22:44:46,746:INFO:SubProcess create_model() called ==================================
2024-12-04 22:44:46,747:INFO:Initializing create_model()
2024-12-04 22:44:46,747:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:44:46,747:INFO:Checking exceptions
2024-12-04 22:44:46,747:INFO:Importing libraries
2024-12-04 22:44:46,747:INFO:Copying training dataset
2024-12-04 22:44:46,784:INFO:Defining folds
2024-12-04 22:44:46,785:INFO:Declaring metric variables
2024-12-04 22:44:46,786:INFO:Importing untrained model
2024-12-04 22:44:46,787:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-04 22:44:46,787:INFO:Starting cross validation
2024-12-04 22:44:46,790:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:44:47,046:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:47,052:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,056:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:47,057:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:47,064:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,064:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,071:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:47,076:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:47,077:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,083:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,084:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:47,090:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,091:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,095:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,100:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:47,101:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,104:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,104:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,107:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,113:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,118:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:47,119:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,119:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,121:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,123:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,129:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,137:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,152:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,154:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,162:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,230:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:47,233:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,238:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:47,249:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,261:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,279:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,302:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,303:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:47,354:INFO:Calculating mean and std
2024-12-04 22:44:47,355:INFO:Creating metrics dataframe
2024-12-04 22:44:47,358:INFO:Uploading results into container
2024-12-04 22:44:47,360:INFO:Uploading model into container now
2024-12-04 22:44:47,360:INFO:_master_model_container: 8
2024-12-04 22:44:47,361:INFO:_display_container: 2
2024-12-04 22:44:47,361:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-04 22:44:47,361:INFO:create_model() successfully completed......................................
2024-12-04 22:44:47,600:INFO:SubProcess create_model() end ==================================
2024-12-04 22:44:47,600:INFO:Creating metrics dataframe
2024-12-04 22:44:47,611:INFO:Initializing Ada Boost Classifier
2024-12-04 22:44:47,611:INFO:Total runtime is 0.7107505917549134 minutes
2024-12-04 22:44:47,611:INFO:SubProcess create_model() called ==================================
2024-12-04 22:44:47,612:INFO:Initializing create_model()
2024-12-04 22:44:47,612:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:44:47,613:INFO:Checking exceptions
2024-12-04 22:44:47,613:INFO:Importing libraries
2024-12-04 22:44:47,614:INFO:Copying training dataset
2024-12-04 22:44:47,688:INFO:Defining folds
2024-12-04 22:44:47,689:INFO:Declaring metric variables
2024-12-04 22:44:47,689:INFO:Importing untrained model
2024-12-04 22:44:47,689:INFO:Ada Boost Classifier Imported successfully
2024-12-04 22:44:47,689:INFO:Starting cross validation
2024-12-04 22:44:47,690:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:44:47,790:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:44:47,790:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:44:47,791:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:44:47,799:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:44:47,807:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:44:47,809:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:44:47,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:44:47,841:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:44:50,597:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:50,604:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:50,616:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:50,649:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:50,656:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:50,661:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:50,697:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:50,713:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:50,722:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:44:50,738:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:50,744:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:50,758:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:50,783:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:50,786:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:44:51,044:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:51,049:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,064:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,077:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,095:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:51,101:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,105:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:51,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,114:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,122:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,128:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,134:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,194:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:51,197:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:51,198:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,203:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,210:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,212:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,219:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:51,221:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:52,129:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:52,133:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:52,139:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:52,145:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:52,160:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:44:52,162:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:52,169:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:52,175:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:44:52,185:INFO:Calculating mean and std
2024-12-04 22:44:52,186:INFO:Creating metrics dataframe
2024-12-04 22:44:52,188:INFO:Uploading results into container
2024-12-04 22:44:52,188:INFO:Uploading model into container now
2024-12-04 22:44:52,188:INFO:_master_model_container: 9
2024-12-04 22:44:52,188:INFO:_display_container: 2
2024-12-04 22:44:52,189:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=989)
2024-12-04 22:44:52,189:INFO:create_model() successfully completed......................................
2024-12-04 22:44:52,264:INFO:SubProcess create_model() end ==================================
2024-12-04 22:44:52,337:INFO:Creating metrics dataframe
2024-12-04 22:44:52,340:INFO:Initializing Gradient Boosting Classifier
2024-12-04 22:44:52,340:INFO:Total runtime is 0.7895650506019593 minutes
2024-12-04 22:44:52,340:INFO:SubProcess create_model() called ==================================
2024-12-04 22:44:52,341:INFO:Initializing create_model()
2024-12-04 22:44:52,341:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:44:52,341:INFO:Checking exceptions
2024-12-04 22:44:52,341:INFO:Importing libraries
2024-12-04 22:44:52,341:INFO:Copying training dataset
2024-12-04 22:44:52,355:INFO:Defining folds
2024-12-04 22:44:52,355:INFO:Declaring metric variables
2024-12-04 22:44:52,356:INFO:Importing untrained model
2024-12-04 22:44:52,356:INFO:Gradient Boosting Classifier Imported successfully
2024-12-04 22:44:52,356:INFO:Starting cross validation
2024-12-04 22:44:52,357:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:45:40,514:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:45:40,519:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:40,531:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:40,572:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:40,661:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:45:40,668:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:40,714:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:40,730:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:41,229:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:45:41,235:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:41,251:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:41,299:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:42,284:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:45:42,290:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:42,304:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:42,320:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:42,333:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:45:42,340:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:42,353:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:42,367:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:42,808:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:45:42,814:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:42,828:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:42,842:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:43,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:45:43,202:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:43,217:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:43,232:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:44,003:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:45:44,008:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:44,015:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:45:44,023:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,162:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:46:07,165:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,172:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,178:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,250:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:46:07,253:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,262:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,287:INFO:Calculating mean and std
2024-12-04 22:46:07,292:INFO:Creating metrics dataframe
2024-12-04 22:46:07,311:INFO:Uploading results into container
2024-12-04 22:46:07,313:INFO:Uploading model into container now
2024-12-04 22:46:07,316:INFO:_master_model_container: 10
2024-12-04 22:46:07,316:INFO:_display_container: 2
2024-12-04 22:46:07,319:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=989, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-04 22:46:07,319:INFO:create_model() successfully completed......................................
2024-12-04 22:46:07,490:INFO:SubProcess create_model() end ==================================
2024-12-04 22:46:07,490:INFO:Creating metrics dataframe
2024-12-04 22:46:07,492:INFO:Initializing Linear Discriminant Analysis
2024-12-04 22:46:07,492:INFO:Total runtime is 2.0420992652575176 minutes
2024-12-04 22:46:07,492:INFO:SubProcess create_model() called ==================================
2024-12-04 22:46:07,493:INFO:Initializing create_model()
2024-12-04 22:46:07,493:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:46:07,493:INFO:Checking exceptions
2024-12-04 22:46:07,493:INFO:Importing libraries
2024-12-04 22:46:07,493:INFO:Copying training dataset
2024-12-04 22:46:07,508:INFO:Defining folds
2024-12-04 22:46:07,508:INFO:Declaring metric variables
2024-12-04 22:46:07,508:INFO:Importing untrained model
2024-12-04 22:46:07,509:INFO:Linear Discriminant Analysis Imported successfully
2024-12-04 22:46:07,509:INFO:Starting cross validation
2024-12-04 22:46:07,510:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:46:07,670:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:46:07,671:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:46:07,672:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:46:07,673:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:46:07,675:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,677:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,678:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,679:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,681:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:46:07,686:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,687:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,690:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,691:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,691:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,699:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,701:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,702:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,703:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:46:07,705:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,709:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,712:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,716:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:46:07,722:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,723:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,732:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:46:07,737:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,737:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,739:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,751:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,752:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,763:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,794:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:46:07,797:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,798:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:46:07,802:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,805:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,809:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,812:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,816:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:07,834:INFO:Calculating mean and std
2024-12-04 22:46:07,834:INFO:Creating metrics dataframe
2024-12-04 22:46:07,836:INFO:Uploading results into container
2024-12-04 22:46:07,837:INFO:Uploading model into container now
2024-12-04 22:46:07,837:INFO:_master_model_container: 11
2024-12-04 22:46:07,837:INFO:_display_container: 2
2024-12-04 22:46:07,838:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-04 22:46:07,838:INFO:create_model() successfully completed......................................
2024-12-04 22:46:07,896:INFO:SubProcess create_model() end ==================================
2024-12-04 22:46:07,897:INFO:Creating metrics dataframe
2024-12-04 22:46:07,899:INFO:Initializing Extra Trees Classifier
2024-12-04 22:46:07,899:INFO:Total runtime is 2.048876925309499 minutes
2024-12-04 22:46:07,899:INFO:SubProcess create_model() called ==================================
2024-12-04 22:46:07,899:INFO:Initializing create_model()
2024-12-04 22:46:07,899:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:46:07,899:INFO:Checking exceptions
2024-12-04 22:46:07,899:INFO:Importing libraries
2024-12-04 22:46:07,899:INFO:Copying training dataset
2024-12-04 22:46:07,913:INFO:Defining folds
2024-12-04 22:46:07,913:INFO:Declaring metric variables
2024-12-04 22:46:07,913:INFO:Importing untrained model
2024-12-04 22:46:07,914:INFO:Extra Trees Classifier Imported successfully
2024-12-04 22:46:07,914:INFO:Starting cross validation
2024-12-04 22:46:07,915:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:46:12,607:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,618:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,620:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,634:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,649:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,647:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,679:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,694:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,729:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,736:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,742:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,749:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,753:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,760:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,762:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,763:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,774:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,778:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,788:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,802:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,942:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:12,956:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:13,021:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:13,969:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:13,979:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:13,991:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:14,008:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:14,017:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:14,027:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:14,053:INFO:Calculating mean and std
2024-12-04 22:46:14,056:INFO:Creating metrics dataframe
2024-12-04 22:46:14,058:INFO:Uploading results into container
2024-12-04 22:46:14,059:INFO:Uploading model into container now
2024-12-04 22:46:14,059:INFO:_master_model_container: 12
2024-12-04 22:46:14,060:INFO:_display_container: 2
2024-12-04 22:46:14,061:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=989, verbose=0,
                     warm_start=False)
2024-12-04 22:46:14,061:INFO:create_model() successfully completed......................................
2024-12-04 22:46:14,167:INFO:SubProcess create_model() end ==================================
2024-12-04 22:46:14,167:INFO:Creating metrics dataframe
2024-12-04 22:46:14,171:INFO:Initializing Extreme Gradient Boosting
2024-12-04 22:46:14,171:INFO:Total runtime is 2.1534128904342653 minutes
2024-12-04 22:46:14,171:INFO:SubProcess create_model() called ==================================
2024-12-04 22:46:14,172:INFO:Initializing create_model()
2024-12-04 22:46:14,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:46:14,172:INFO:Checking exceptions
2024-12-04 22:46:14,172:INFO:Importing libraries
2024-12-04 22:46:14,172:INFO:Copying training dataset
2024-12-04 22:46:14,199:INFO:Defining folds
2024-12-04 22:46:14,199:INFO:Declaring metric variables
2024-12-04 22:46:14,199:INFO:Importing untrained model
2024-12-04 22:46:14,203:INFO:Extreme Gradient Boosting Imported successfully
2024-12-04 22:46:14,203:INFO:Starting cross validation
2024-12-04 22:46:14,205:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:46:40,767:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:40,780:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:40,793:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:41,599:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:41,628:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:41,641:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:41,933:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:41,949:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:41,963:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,139:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,155:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,168:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,408:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,422:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,435:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,437:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,451:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,469:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,909:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,922:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,934:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,945:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,959:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:42,972:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:56,236:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:56,244:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:56,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:56,566:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:56,572:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:56,581:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:46:56,597:INFO:Calculating mean and std
2024-12-04 22:46:56,598:INFO:Creating metrics dataframe
2024-12-04 22:46:56,600:INFO:Uploading results into container
2024-12-04 22:46:56,602:INFO:Uploading model into container now
2024-12-04 22:46:56,602:INFO:_master_model_container: 13
2024-12-04 22:46:56,602:INFO:_display_container: 2
2024-12-04 22:46:56,603:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic',
              predictor=None, random_state=989, reg_alpha=None, ...)
2024-12-04 22:46:56,603:INFO:create_model() successfully completed......................................
2024-12-04 22:46:56,703:INFO:SubProcess create_model() end ==================================
2024-12-04 22:46:56,703:INFO:Creating metrics dataframe
2024-12-04 22:46:56,708:INFO:Initializing Light Gradient Boosting Machine
2024-12-04 22:46:56,708:INFO:Total runtime is 2.8623629570007325 minutes
2024-12-04 22:46:56,708:INFO:SubProcess create_model() called ==================================
2024-12-04 22:46:56,709:INFO:Initializing create_model()
2024-12-04 22:46:56,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:46:56,709:INFO:Checking exceptions
2024-12-04 22:46:56,709:INFO:Importing libraries
2024-12-04 22:46:56,709:INFO:Copying training dataset
2024-12-04 22:46:56,734:INFO:Defining folds
2024-12-04 22:46:56,734:INFO:Declaring metric variables
2024-12-04 22:46:56,735:INFO:Importing untrained model
2024-12-04 22:46:56,735:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-04 22:46:56,735:INFO:Starting cross validation
2024-12-04 22:46:56,737:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:47:04,415:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,425:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,436:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,504:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,547:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,562:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,709:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,746:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,758:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,780:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,795:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,804:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,833:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,841:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,879:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:04,996:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:05,009:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:05,024:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:06,333:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:06,355:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:06,360:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:06,367:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:06,374:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:06,380:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:08,178:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:08,192:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:08,210:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:08,700:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:08,714:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:08,728:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:08,760:INFO:Calculating mean and std
2024-12-04 22:47:08,761:INFO:Creating metrics dataframe
2024-12-04 22:47:08,765:INFO:Uploading results into container
2024-12-04 22:47:08,766:INFO:Uploading model into container now
2024-12-04 22:47:08,767:INFO:_master_model_container: 14
2024-12-04 22:47:08,768:INFO:_display_container: 2
2024-12-04 22:47:08,769:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=989, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-04 22:47:08,769:INFO:create_model() successfully completed......................................
2024-12-04 22:47:08,855:INFO:SubProcess create_model() end ==================================
2024-12-04 22:47:08,856:INFO:Creating metrics dataframe
2024-12-04 22:47:08,860:INFO:Initializing Dummy Classifier
2024-12-04 22:47:08,860:INFO:Total runtime is 3.0649044632911684 minutes
2024-12-04 22:47:08,860:INFO:SubProcess create_model() called ==================================
2024-12-04 22:47:08,861:INFO:Initializing create_model()
2024-12-04 22:47:08,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000209A5750950>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:47:08,861:INFO:Checking exceptions
2024-12-04 22:47:08,861:INFO:Importing libraries
2024-12-04 22:47:08,861:INFO:Copying training dataset
2024-12-04 22:47:08,879:INFO:Defining folds
2024-12-04 22:47:08,879:INFO:Declaring metric variables
2024-12-04 22:47:08,879:INFO:Importing untrained model
2024-12-04 22:47:08,879:INFO:Dummy Classifier Imported successfully
2024-12-04 22:47:08,880:INFO:Starting cross validation
2024-12-04 22:47:08,880:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:47:09,017:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,018:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,029:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,030:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,031:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,036:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,037:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:47:09,043:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,044:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,046:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,048:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,052:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:47:09,057:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:47:09,058:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,062:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,062:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,065:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,069:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:47:09,070:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:47:09,072:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,075:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,075:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,075:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,085:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:47:09,091:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,091:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,092:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,098:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:47:09,099:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:47:09,106:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,107:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,160:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,173:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,173:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:47:09,185:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,186:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,191:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:47:09,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:09,220:INFO:Calculating mean and std
2024-12-04 22:47:09,221:INFO:Creating metrics dataframe
2024-12-04 22:47:09,224:INFO:Uploading results into container
2024-12-04 22:47:09,225:INFO:Uploading model into container now
2024-12-04 22:47:09,226:INFO:_master_model_container: 15
2024-12-04 22:47:09,226:INFO:_display_container: 2
2024-12-04 22:47:09,226:INFO:DummyClassifier(constant=None, random_state=989, strategy='prior')
2024-12-04 22:47:09,226:INFO:create_model() successfully completed......................................
2024-12-04 22:47:09,314:INFO:SubProcess create_model() end ==================================
2024-12-04 22:47:09,314:INFO:Creating metrics dataframe
2024-12-04 22:47:09,360:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-04 22:47:09,369:INFO:Initializing create_model()
2024-12-04 22:47:09,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=989, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:47:09,370:INFO:Checking exceptions
2024-12-04 22:47:09,373:INFO:Importing libraries
2024-12-04 22:47:09,374:INFO:Copying training dataset
2024-12-04 22:47:09,416:INFO:Defining folds
2024-12-04 22:47:09,417:INFO:Declaring metric variables
2024-12-04 22:47:09,417:INFO:Importing untrained model
2024-12-04 22:47:09,417:INFO:Declaring custom model
2024-12-04 22:47:09,418:INFO:SVM - Linear Kernel Imported successfully
2024-12-04 22:47:09,419:INFO:Cross validation set to False
2024-12-04 22:47:09,419:INFO:Fitting Model
2024-12-04 22:47:10,096:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=989, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-04 22:47:10,096:INFO:create_model() successfully completed......................................
2024-12-04 22:47:10,219:INFO:_master_model_container: 15
2024-12-04 22:47:10,220:INFO:_display_container: 2
2024-12-04 22:47:10,220:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=989, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-04 22:47:10,221:INFO:compare_models() successfully completed......................................
2024-12-04 22:47:10,223:INFO:Initializing evaluate_model()
2024-12-04 22:47:10,223:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=989, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-12-04 22:47:11,168:INFO:Initializing plot_model()
2024-12-04 22:47:11,168:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=989, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-12-04 22:47:11,168:INFO:Checking exceptions
2024-12-04 22:47:11,182:INFO:Preloading libraries
2024-12-04 22:47:11,186:INFO:Copying training dataset
2024-12-04 22:47:11,187:INFO:Plot type: pipeline
2024-12-04 22:47:12,801:INFO:Visual Rendered Successfully
2024-12-04 22:47:12,921:INFO:plot_model() successfully completed......................................
2024-12-04 22:47:12,923:INFO:Initializing plot_model()
2024-12-04 22:47:12,924:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=989, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 22:47:12,924:INFO:Checking exceptions
2024-12-04 22:47:12,935:INFO:Preloading libraries
2024-12-04 22:47:12,936:INFO:Copying training dataset
2024-12-04 22:47:12,936:INFO:Plot type: confusion_matrix
2024-12-04 22:47:13,279:INFO:Fitting Model
2024-12-04 22:47:13,283:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but SGDClassifier was fitted with feature names
  warnings.warn(

2024-12-04 22:47:13,284:INFO:Scoring test/hold-out set
2024-12-04 22:47:13,858:INFO:Visual Rendered Successfully
2024-12-04 22:47:13,970:INFO:plot_model() successfully completed......................................
2024-12-04 22:47:13,972:INFO:Initializing predict_model()
2024-12-04 22:47:13,972:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=989, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000209A6B63CE0>)
2024-12-04 22:47:13,972:INFO:Checking exceptions
2024-12-04 22:47:13,972:INFO:Preloading libraries
2024-12-04 22:47:14,189:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: 'Radiation Therapy'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: 'Radiation Therapy'

  warnings.warn(traceback.format_exc())

2024-12-04 22:47:14,206:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:14,241:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:14,277:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:14,429:INFO:Initializing predict_model()
2024-12-04 22:47:14,429:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002098FB01490>, estimator=SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=989, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000209A6B63CE0>)
2024-12-04 22:47:14,429:INFO:Checking exceptions
2024-12-04 22:47:14,429:INFO:Preloading libraries
2024-12-04 22:47:14,429:INFO:Set up data.
2024-12-04 22:47:14,544:INFO:Set up index.
2024-12-04 22:47:16,048:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: 'Radiation Therapy'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 619, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\validation.py", line 997, in check_array
    array = _asarray_with_order(array, order=order, dtype=dtype, xp=xp)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_array_api.py", line 521, in _asarray_with_order
    array = numpy.asarray(array, order=order, dtype=dtype)
            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
ValueError: could not convert string to float: 'Radiation Therapy'

  warnings.warn(traceback.format_exc())

2024-12-04 22:47:16,067:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:16,132:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:47:16,219:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:02,618:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:52:02,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:52:02,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:52:02,619:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:52:05,084:INFO:PyCaret ClassificationExperiment
2024-12-04 22:52:05,085:INFO:Logging name: clf-default-name
2024-12-04 22:52:05,085:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-04 22:52:05,085:INFO:version 3.3.2
2024-12-04 22:52:05,085:INFO:Initializing setup()
2024-12-04 22:52:05,085:INFO:self.USI: ea04
2024-12-04 22:52:05,085:INFO:self._variable_keys: {'fix_imbalance', 'fold_generator', 'data', 'X_train', 'n_jobs_param', 'X', 'pipeline', 'html_param', 'logging_param', 'y', 'exp_id', '_available_plots', 'exp_name_log', 'y_train', '_ml_usecase', 'gpu_param', 'is_multiclass', 'seed', 'fold_groups_param', 'gpu_n_jobs_param', 'target_param', 'X_test', 'USI', 'idx', 'fold_shuffle_param', 'memory', 'log_plots_param', 'y_test'}
2024-12-04 22:52:05,085:INFO:Checking environment
2024-12-04 22:52:05,085:INFO:python_version: 3.11.9
2024-12-04 22:52:05,085:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-12-04 22:52:05,085:INFO:machine: AMD64
2024-12-04 22:52:05,123:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-04 22:52:05,132:INFO:Memory: svmem(total=8345964544, available=557748224, percent=93.3, used=7788216320, free=557748224)
2024-12-04 22:52:05,132:INFO:Physical Core: 4
2024-12-04 22:52:05,132:INFO:Logical Core: 8
2024-12-04 22:52:05,132:INFO:Checking libraries
2024-12-04 22:52:05,132:INFO:System:
2024-12-04 22:52:05,133:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-12-04 22:52:05,133:INFO:executable: C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Scripts\python.exe
2024-12-04 22:52:05,133:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-04 22:52:05,133:INFO:PyCaret required dependencies:
2024-12-04 22:52:05,191:INFO:                 pip: 24.3.1
2024-12-04 22:52:05,191:INFO:          setuptools: 68.2.0
2024-12-04 22:52:05,191:INFO:             pycaret: 3.3.2
2024-12-04 22:52:05,191:INFO:             IPython: 8.29.0
2024-12-04 22:52:05,191:INFO:          ipywidgets: 8.1.5
2024-12-04 22:52:05,191:INFO:                tqdm: 4.67.0
2024-12-04 22:52:05,191:INFO:               numpy: 1.26.4
2024-12-04 22:52:05,191:INFO:              pandas: 2.1.4
2024-12-04 22:52:05,192:INFO:              jinja2: 3.1.4
2024-12-04 22:52:05,192:INFO:               scipy: 1.11.4
2024-12-04 22:52:05,192:INFO:              joblib: 1.3.2
2024-12-04 22:52:05,192:INFO:             sklearn: 1.4.2
2024-12-04 22:52:05,192:INFO:                pyod: 2.0.2
2024-12-04 22:52:05,192:INFO:            imblearn: 0.12.4
2024-12-04 22:52:05,192:INFO:   category_encoders: 2.6.4
2024-12-04 22:52:05,192:INFO:            lightgbm: 4.5.0
2024-12-04 22:52:05,192:INFO:               numba: 0.60.0
2024-12-04 22:52:05,192:INFO:            requests: 2.32.3
2024-12-04 22:52:05,192:INFO:          matplotlib: 3.7.5
2024-12-04 22:52:05,192:INFO:          scikitplot: 0.3.7
2024-12-04 22:52:05,192:INFO:         yellowbrick: 1.5
2024-12-04 22:52:05,192:INFO:              plotly: 5.24.1
2024-12-04 22:52:05,192:INFO:    plotly-resampler: Not installed
2024-12-04 22:52:05,192:INFO:             kaleido: 0.2.1
2024-12-04 22:52:05,192:INFO:           schemdraw: 0.15
2024-12-04 22:52:05,192:INFO:         statsmodels: 0.14.4
2024-12-04 22:52:05,192:INFO:              sktime: 0.26.0
2024-12-04 22:52:05,192:INFO:               tbats: 1.1.3
2024-12-04 22:52:05,192:INFO:            pmdarima: 2.0.4
2024-12-04 22:52:05,192:INFO:              psutil: 6.1.0
2024-12-04 22:52:05,193:INFO:          markupsafe: 2.1.5
2024-12-04 22:52:05,193:INFO:             pickle5: Not installed
2024-12-04 22:52:05,193:INFO:         cloudpickle: 3.1.0
2024-12-04 22:52:05,193:INFO:         deprecation: 2.1.0
2024-12-04 22:52:05,193:INFO:              xxhash: 3.5.0
2024-12-04 22:52:05,193:INFO:           wurlitzer: Not installed
2024-12-04 22:52:05,193:INFO:PyCaret optional dependencies:
2024-12-04 22:52:05,222:INFO:                shap: Not installed
2024-12-04 22:52:05,222:INFO:           interpret: Not installed
2024-12-04 22:52:05,222:INFO:                umap: Not installed
2024-12-04 22:52:05,222:INFO:     ydata_profiling: Not installed
2024-12-04 22:52:05,222:INFO:  explainerdashboard: Not installed
2024-12-04 22:52:05,222:INFO:             autoviz: 0.1.905
2024-12-04 22:52:05,222:INFO:           fairlearn: Not installed
2024-12-04 22:52:05,222:INFO:          deepchecks: Not installed
2024-12-04 22:52:05,222:INFO:             xgboost: 1.6.2
2024-12-04 22:52:05,222:INFO:            catboost: Not installed
2024-12-04 22:52:05,222:INFO:              kmodes: Not installed
2024-12-04 22:52:05,222:INFO:             mlxtend: Not installed
2024-12-04 22:52:05,222:INFO:       statsforecast: Not installed
2024-12-04 22:52:05,223:INFO:        tune_sklearn: Not installed
2024-12-04 22:52:05,223:INFO:                 ray: Not installed
2024-12-04 22:52:05,223:INFO:            hyperopt: Not installed
2024-12-04 22:52:05,223:INFO:              optuna: Not installed
2024-12-04 22:52:05,223:INFO:               skopt: Not installed
2024-12-04 22:52:05,223:INFO:              mlflow: Not installed
2024-12-04 22:52:05,223:INFO:              gradio: Not installed
2024-12-04 22:52:05,223:INFO:             fastapi: Not installed
2024-12-04 22:52:05,223:INFO:             uvicorn: Not installed
2024-12-04 22:52:05,223:INFO:              m2cgen: Not installed
2024-12-04 22:52:05,223:INFO:           evidently: Not installed
2024-12-04 22:52:05,223:INFO:               fugue: Not installed
2024-12-04 22:52:05,223:INFO:           streamlit: Not installed
2024-12-04 22:52:05,223:INFO:             prophet: Not installed
2024-12-04 22:52:05,223:INFO:None
2024-12-04 22:52:05,224:INFO:Set up data.
2024-12-04 22:52:05,264:INFO:Set up folding strategy.
2024-12-04 22:52:05,265:INFO:Set up train/test split.
2024-12-04 22:52:05,307:INFO:Set up index.
2024-12-04 22:52:05,308:INFO:Assigning column types.
2024-12-04 22:52:05,326:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-04 22:52:05,387:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 22:52:05,393:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:52:05,451:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:52:06,153:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:52:06,199:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 22:52:06,200:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:52:06,237:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:52:06,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:52:06,241:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-04 22:52:06,306:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:52:06,337:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:52:06,341:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:52:06,386:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:52:06,425:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:52:06,428:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:52:06,428:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-04 22:52:06,525:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:52:06,529:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:52:06,646:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:52:06,650:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:52:06,654:INFO:Preparing preprocessing pipeline...
2024-12-04 22:52:06,660:INFO:Set up label encoding.
2024-12-04 22:52:06,660:INFO:Set up simple imputation.
2024-12-04 22:52:06,728:INFO:Finished creating preprocessing pipeline.
2024-12-04 22:52:06,741:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-04 22:52:06,741:INFO:Creating final display dataframe.
2024-12-04 22:52:07,083:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               4392
1                        Target                                          Treatment
2                   Target type                                         Multiclass
3                Target mapping  Chemotherapy: 0, Radiation Therapy: 1, Surgery...
4           Original data shape                                        (11592, 36)
5        Transformed data shape                                        (11592, 36)
6   Transformed train set shape                                         (8114, 36)
7    Transformed test set shape                                         (3478, 36)
8              Numeric features                                                 35
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               ea04
2024-12-04 22:52:07,163:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:52:07,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:52:07,251:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:52:07,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:52:07,256:INFO:setup() successfully completed in 2.19s...............
2024-12-04 22:52:07,256:INFO:Initializing compare_models()
2024-12-04 22:52:07,256:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-12-04 22:52:07,256:INFO:Checking exceptions
2024-12-04 22:52:07,266:INFO:Preparing display monitor
2024-12-04 22:52:07,465:INFO:Initializing Logistic Regression
2024-12-04 22:52:07,465:INFO:Total runtime is 0.0 minutes
2024-12-04 22:52:07,465:INFO:SubProcess create_model() called ==================================
2024-12-04 22:52:07,466:INFO:Initializing create_model()
2024-12-04 22:52:07,466:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:52:07,466:INFO:Checking exceptions
2024-12-04 22:52:07,466:INFO:Importing libraries
2024-12-04 22:52:07,466:INFO:Copying training dataset
2024-12-04 22:52:07,478:INFO:Defining folds
2024-12-04 22:52:07,478:INFO:Declaring metric variables
2024-12-04 22:52:07,478:INFO:Importing untrained model
2024-12-04 22:52:07,479:INFO:Logistic Regression Imported successfully
2024-12-04 22:52:07,479:INFO:Starting cross validation
2024-12-04 22:52:07,480:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:52:23,764:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:23,765:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:23,767:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:23,771:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:23,774:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,780:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:23,788:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:23,789:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,791:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,795:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:23,796:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,800:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,802:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,802:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,803:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,803:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,806:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,809:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,815:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,815:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:23,816:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,820:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,822:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,826:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,829:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,833:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,836:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,847:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:23,864:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:24,150:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:24,155:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:24,155:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:24,159:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:24,165:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:24,169:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:24,174:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:24,178:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:24,201:INFO:Calculating mean and std
2024-12-04 22:52:24,202:INFO:Creating metrics dataframe
2024-12-04 22:52:24,204:INFO:Uploading results into container
2024-12-04 22:52:24,204:INFO:Uploading model into container now
2024-12-04 22:52:24,205:INFO:_master_model_container: 1
2024-12-04 22:52:24,205:INFO:_display_container: 2
2024-12-04 22:52:24,205:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4392, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-04 22:52:24,205:INFO:create_model() successfully completed......................................
2024-12-04 22:52:24,287:INFO:SubProcess create_model() end ==================================
2024-12-04 22:52:24,288:INFO:Creating metrics dataframe
2024-12-04 22:52:24,292:INFO:Initializing K Neighbors Classifier
2024-12-04 22:52:24,292:INFO:Total runtime is 0.2804357409477234 minutes
2024-12-04 22:52:24,292:INFO:SubProcess create_model() called ==================================
2024-12-04 22:52:24,293:INFO:Initializing create_model()
2024-12-04 22:52:24,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:52:24,293:INFO:Checking exceptions
2024-12-04 22:52:24,293:INFO:Importing libraries
2024-12-04 22:52:24,293:INFO:Copying training dataset
2024-12-04 22:52:24,313:INFO:Defining folds
2024-12-04 22:52:24,313:INFO:Declaring metric variables
2024-12-04 22:52:24,313:INFO:Importing untrained model
2024-12-04 22:52:24,313:INFO:K Neighbors Classifier Imported successfully
2024-12-04 22:52:24,314:INFO:Starting cross validation
2024-12-04 22:52:24,315:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:52:25,116:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,116:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,116:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,132:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,132:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,132:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,151:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,160:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,162:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,183:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,189:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,198:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,199:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,201:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,203:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,205:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,215:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,216:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,216:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,220:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,221:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,229:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,234:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,236:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,413:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,426:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,432:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,438:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,445:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,451:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,469:INFO:Calculating mean and std
2024-12-04 22:52:25,469:INFO:Creating metrics dataframe
2024-12-04 22:52:25,471:INFO:Uploading results into container
2024-12-04 22:52:25,472:INFO:Uploading model into container now
2024-12-04 22:52:25,472:INFO:_master_model_container: 2
2024-12-04 22:52:25,472:INFO:_display_container: 2
2024-12-04 22:52:25,473:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-04 22:52:25,473:INFO:create_model() successfully completed......................................
2024-12-04 22:52:25,542:INFO:SubProcess create_model() end ==================================
2024-12-04 22:52:25,542:INFO:Creating metrics dataframe
2024-12-04 22:52:25,546:INFO:Initializing Naive Bayes
2024-12-04 22:52:25,546:INFO:Total runtime is 0.30134565035502114 minutes
2024-12-04 22:52:25,546:INFO:SubProcess create_model() called ==================================
2024-12-04 22:52:25,547:INFO:Initializing create_model()
2024-12-04 22:52:25,547:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:52:25,547:INFO:Checking exceptions
2024-12-04 22:52:25,547:INFO:Importing libraries
2024-12-04 22:52:25,547:INFO:Copying training dataset
2024-12-04 22:52:25,569:INFO:Defining folds
2024-12-04 22:52:25,570:INFO:Declaring metric variables
2024-12-04 22:52:25,570:INFO:Importing untrained model
2024-12-04 22:52:25,570:INFO:Naive Bayes Imported successfully
2024-12-04 22:52:25,571:INFO:Starting cross validation
2024-12-04 22:52:25,572:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:52:25,716:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,720:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,734:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,734:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,735:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,735:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,737:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,743:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,746:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,747:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,747:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,748:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,749:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,757:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,758:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,762:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,767:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,768:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,772:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,774:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,782:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,783:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,788:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,797:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,845:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,852:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,854:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,859:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,862:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,869:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:25,889:INFO:Calculating mean and std
2024-12-04 22:52:25,890:INFO:Creating metrics dataframe
2024-12-04 22:52:25,892:INFO:Uploading results into container
2024-12-04 22:52:25,893:INFO:Uploading model into container now
2024-12-04 22:52:25,893:INFO:_master_model_container: 3
2024-12-04 22:52:25,893:INFO:_display_container: 2
2024-12-04 22:52:25,894:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 22:52:25,894:INFO:create_model() successfully completed......................................
2024-12-04 22:52:25,957:INFO:SubProcess create_model() end ==================================
2024-12-04 22:52:25,958:INFO:Creating metrics dataframe
2024-12-04 22:52:25,961:INFO:Initializing Decision Tree Classifier
2024-12-04 22:52:25,961:INFO:Total runtime is 0.30826320648193356 minutes
2024-12-04 22:52:25,961:INFO:SubProcess create_model() called ==================================
2024-12-04 22:52:25,961:INFO:Initializing create_model()
2024-12-04 22:52:25,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:52:25,961:INFO:Checking exceptions
2024-12-04 22:52:25,961:INFO:Importing libraries
2024-12-04 22:52:25,961:INFO:Copying training dataset
2024-12-04 22:52:25,984:INFO:Defining folds
2024-12-04 22:52:25,984:INFO:Declaring metric variables
2024-12-04 22:52:25,984:INFO:Importing untrained model
2024-12-04 22:52:25,985:INFO:Decision Tree Classifier Imported successfully
2024-12-04 22:52:25,985:INFO:Starting cross validation
2024-12-04 22:52:25,986:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:52:26,740:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,749:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,751:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,753:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,764:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,766:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,769:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,775:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,779:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,789:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,826:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,829:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,843:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,851:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,857:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,861:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,874:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,875:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,886:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,887:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:26,897:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:27,272:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:27,279:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:27,285:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:27,286:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:27,293:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:27,299:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:27,314:INFO:Calculating mean and std
2024-12-04 22:52:27,314:INFO:Creating metrics dataframe
2024-12-04 22:52:27,316:INFO:Uploading results into container
2024-12-04 22:52:27,316:INFO:Uploading model into container now
2024-12-04 22:52:27,317:INFO:_master_model_container: 4
2024-12-04 22:52:27,317:INFO:_display_container: 2
2024-12-04 22:52:27,317:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4392, splitter='best')
2024-12-04 22:52:27,317:INFO:create_model() successfully completed......................................
2024-12-04 22:52:27,377:INFO:SubProcess create_model() end ==================================
2024-12-04 22:52:27,377:INFO:Creating metrics dataframe
2024-12-04 22:52:27,379:INFO:Initializing SVM - Linear Kernel
2024-12-04 22:52:27,380:INFO:Total runtime is 0.331915279229482 minutes
2024-12-04 22:52:27,380:INFO:SubProcess create_model() called ==================================
2024-12-04 22:52:27,380:INFO:Initializing create_model()
2024-12-04 22:52:27,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:52:27,380:INFO:Checking exceptions
2024-12-04 22:52:27,380:INFO:Importing libraries
2024-12-04 22:52:27,380:INFO:Copying training dataset
2024-12-04 22:52:27,392:INFO:Defining folds
2024-12-04 22:52:27,392:INFO:Declaring metric variables
2024-12-04 22:52:27,393:INFO:Importing untrained model
2024-12-04 22:52:27,393:INFO:SVM - Linear Kernel Imported successfully
2024-12-04 22:52:27,393:INFO:Starting cross validation
2024-12-04 22:52:27,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:52:29,923:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:29,923:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:29,923:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:29,923:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:29,924:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:29,925:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:29,928:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,928:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,928:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,928:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,936:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,937:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,937:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,937:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,937:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,937:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,938:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,946:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,946:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,947:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,948:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,948:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,948:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,953:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,959:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,975:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:29,983:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:30,475:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:30,478:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:30,485:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:30,494:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:30,495:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:30,498:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:30,504:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:30,510:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:30,524:INFO:Calculating mean and std
2024-12-04 22:52:30,525:INFO:Creating metrics dataframe
2024-12-04 22:52:30,526:INFO:Uploading results into container
2024-12-04 22:52:30,526:INFO:Uploading model into container now
2024-12-04 22:52:30,527:INFO:_master_model_container: 5
2024-12-04 22:52:30,527:INFO:_display_container: 2
2024-12-04 22:52:30,527:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4392, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-04 22:52:30,527:INFO:create_model() successfully completed......................................
2024-12-04 22:52:30,582:INFO:SubProcess create_model() end ==================================
2024-12-04 22:52:30,582:INFO:Creating metrics dataframe
2024-12-04 22:52:30,584:INFO:Initializing Ridge Classifier
2024-12-04 22:52:30,584:INFO:Total runtime is 0.3853123108545939 minutes
2024-12-04 22:52:30,584:INFO:SubProcess create_model() called ==================================
2024-12-04 22:52:30,585:INFO:Initializing create_model()
2024-12-04 22:52:30,585:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:52:30,585:INFO:Checking exceptions
2024-12-04 22:52:30,585:INFO:Importing libraries
2024-12-04 22:52:30,585:INFO:Copying training dataset
2024-12-04 22:52:30,598:INFO:Defining folds
2024-12-04 22:52:30,598:INFO:Declaring metric variables
2024-12-04 22:52:30,598:INFO:Importing untrained model
2024-12-04 22:52:30,598:INFO:Ridge Classifier Imported successfully
2024-12-04 22:52:30,599:INFO:Starting cross validation
2024-12-04 22:52:30,599:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:52:32,150:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:32,151:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:32,155:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,155:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,155:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,163:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:32,163:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,164:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,164:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,165:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:32,166:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:32,168:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:32,169:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,171:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,171:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:32,173:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,176:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,179:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,182:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,182:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,186:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,186:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,191:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,191:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,194:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,195:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,197:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,221:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,223:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,264:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:32,267:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:32,267:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,270:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,276:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,278:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,282:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,286:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:32,305:INFO:Calculating mean and std
2024-12-04 22:52:32,306:INFO:Creating metrics dataframe
2024-12-04 22:52:32,307:INFO:Uploading results into container
2024-12-04 22:52:32,308:INFO:Uploading model into container now
2024-12-04 22:52:32,308:INFO:_master_model_container: 6
2024-12-04 22:52:32,309:INFO:_display_container: 2
2024-12-04 22:52:32,309:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4392, solver='auto',
                tol=0.0001)
2024-12-04 22:52:32,309:INFO:create_model() successfully completed......................................
2024-12-04 22:52:32,372:INFO:SubProcess create_model() end ==================================
2024-12-04 22:52:32,372:INFO:Creating metrics dataframe
2024-12-04 22:52:32,374:INFO:Initializing Random Forest Classifier
2024-12-04 22:52:32,374:INFO:Total runtime is 0.4151444435119629 minutes
2024-12-04 22:52:32,374:INFO:SubProcess create_model() called ==================================
2024-12-04 22:52:32,374:INFO:Initializing create_model()
2024-12-04 22:52:32,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:52:32,374:INFO:Checking exceptions
2024-12-04 22:52:32,374:INFO:Importing libraries
2024-12-04 22:52:32,374:INFO:Copying training dataset
2024-12-04 22:52:32,387:INFO:Defining folds
2024-12-04 22:52:32,387:INFO:Declaring metric variables
2024-12-04 22:52:32,387:INFO:Importing untrained model
2024-12-04 22:52:32,387:INFO:Random Forest Classifier Imported successfully
2024-12-04 22:52:32,388:INFO:Starting cross validation
2024-12-04 22:52:32,388:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:52:39,972:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:39,983:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:39,990:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,000:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,049:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,063:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,068:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,073:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,082:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,086:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,090:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,107:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,107:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,107:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,124:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,130:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,133:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,144:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,157:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,172:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,188:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,252:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,265:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:40,340:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,249:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,261:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,264:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,271:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,272:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,279:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,297:INFO:Calculating mean and std
2024-12-04 22:52:42,298:INFO:Creating metrics dataframe
2024-12-04 22:52:42,300:INFO:Uploading results into container
2024-12-04 22:52:42,301:INFO:Uploading model into container now
2024-12-04 22:52:42,301:INFO:_master_model_container: 7
2024-12-04 22:52:42,301:INFO:_display_container: 2
2024-12-04 22:52:42,302:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=4392, verbose=0,
                       warm_start=False)
2024-12-04 22:52:42,302:INFO:create_model() successfully completed......................................
2024-12-04 22:52:42,374:INFO:SubProcess create_model() end ==================================
2024-12-04 22:52:42,374:INFO:Creating metrics dataframe
2024-12-04 22:52:42,376:INFO:Initializing Quadratic Discriminant Analysis
2024-12-04 22:52:42,377:INFO:Total runtime is 0.5818642656008403 minutes
2024-12-04 22:52:42,377:INFO:SubProcess create_model() called ==================================
2024-12-04 22:52:42,377:INFO:Initializing create_model()
2024-12-04 22:52:42,377:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:52:42,377:INFO:Checking exceptions
2024-12-04 22:52:42,377:INFO:Importing libraries
2024-12-04 22:52:42,377:INFO:Copying training dataset
2024-12-04 22:52:42,392:INFO:Defining folds
2024-12-04 22:52:42,392:INFO:Declaring metric variables
2024-12-04 22:52:42,392:INFO:Importing untrained model
2024-12-04 22:52:42,393:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-04 22:52:42,393:INFO:Starting cross validation
2024-12-04 22:52:42,394:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:52:42,549:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:42,553:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:42,553:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:42,556:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,559:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,560:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,561:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:42,564:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:42,567:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,568:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,570:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:42,572:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:42,574:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,575:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,576:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,577:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:42,579:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,582:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,583:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,583:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,587:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,588:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,591:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,593:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,595:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,596:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,601:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,605:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,607:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,609:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,616:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,622:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,679:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:42,684:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,687:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:42,690:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,692:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,699:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,707:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:42,727:INFO:Calculating mean and std
2024-12-04 22:52:42,728:INFO:Creating metrics dataframe
2024-12-04 22:52:42,729:INFO:Uploading results into container
2024-12-04 22:52:42,730:INFO:Uploading model into container now
2024-12-04 22:52:42,730:INFO:_master_model_container: 8
2024-12-04 22:52:42,730:INFO:_display_container: 2
2024-12-04 22:52:42,730:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-04 22:52:42,730:INFO:create_model() successfully completed......................................
2024-12-04 22:52:42,784:INFO:SubProcess create_model() end ==================================
2024-12-04 22:52:42,784:INFO:Creating metrics dataframe
2024-12-04 22:52:42,786:INFO:Initializing Ada Boost Classifier
2024-12-04 22:52:42,786:INFO:Total runtime is 0.5886819203694662 minutes
2024-12-04 22:52:42,786:INFO:SubProcess create_model() called ==================================
2024-12-04 22:52:42,787:INFO:Initializing create_model()
2024-12-04 22:52:42,787:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:52:42,787:INFO:Checking exceptions
2024-12-04 22:52:42,787:INFO:Importing libraries
2024-12-04 22:52:42,787:INFO:Copying training dataset
2024-12-04 22:52:42,799:INFO:Defining folds
2024-12-04 22:52:42,799:INFO:Declaring metric variables
2024-12-04 22:52:42,800:INFO:Importing untrained model
2024-12-04 22:52:42,800:INFO:Ada Boost Classifier Imported successfully
2024-12-04 22:52:42,800:INFO:Starting cross validation
2024-12-04 22:52:42,801:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:52:42,861:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:52:42,861:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:52:42,872:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:52:42,878:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:52:42,885:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:52:42,890:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:52:42,895:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:52:42,905:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:52:44,792:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:44,798:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:44,805:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:44,810:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:44,812:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:44,818:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:44,824:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:44,827:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:44,831:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:44,838:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:44,842:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:44,852:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:44,912:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:52:44,913:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:52:45,186:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:45,192:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,206:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,220:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,245:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:45,252:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,253:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:45,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,266:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,269:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:45,272:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,274:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,279:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,285:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:45,287:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,289:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,291:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,303:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,305:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:45,319:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:46,246:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:46,249:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:46,253:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:52:46,257:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:46,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:46,265:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:46,265:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:46,273:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:52:46,288:INFO:Calculating mean and std
2024-12-04 22:52:46,289:INFO:Creating metrics dataframe
2024-12-04 22:52:46,290:INFO:Uploading results into container
2024-12-04 22:52:46,290:INFO:Uploading model into container now
2024-12-04 22:52:46,291:INFO:_master_model_container: 9
2024-12-04 22:52:46,291:INFO:_display_container: 2
2024-12-04 22:52:46,291:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=4392)
2024-12-04 22:52:46,291:INFO:create_model() successfully completed......................................
2024-12-04 22:52:46,347:INFO:SubProcess create_model() end ==================================
2024-12-04 22:52:46,347:INFO:Creating metrics dataframe
2024-12-04 22:52:46,349:INFO:Initializing Gradient Boosting Classifier
2024-12-04 22:52:46,350:INFO:Total runtime is 0.648074201742808 minutes
2024-12-04 22:52:46,350:INFO:SubProcess create_model() called ==================================
2024-12-04 22:52:46,350:INFO:Initializing create_model()
2024-12-04 22:52:46,350:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:52:46,350:INFO:Checking exceptions
2024-12-04 22:52:46,350:INFO:Importing libraries
2024-12-04 22:52:46,350:INFO:Copying training dataset
2024-12-04 22:52:46,362:INFO:Defining folds
2024-12-04 22:52:46,362:INFO:Declaring metric variables
2024-12-04 22:52:46,362:INFO:Importing untrained model
2024-12-04 22:52:46,362:INFO:Gradient Boosting Classifier Imported successfully
2024-12-04 22:52:46,362:INFO:Starting cross validation
2024-12-04 22:52:46,363:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:53:21,176:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:21,181:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:21,222:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:21,235:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:22,256:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:22,263:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:22,275:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:22,289:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:23,100:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:23,129:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:23,142:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:23,155:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:25,501:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:25,507:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:25,521:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:25,568:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:28,129:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:28,133:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:28,146:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:28,160:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:28,250:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:28,253:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:28,262:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:28,271:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:28,277:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:28,282:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:28,295:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:28,306:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:28,731:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:28,735:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:28,744:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:28,752:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:44,694:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:44,697:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:44,703:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:44,708:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,038:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:45,041:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,047:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,053:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,071:INFO:Calculating mean and std
2024-12-04 22:53:45,071:INFO:Creating metrics dataframe
2024-12-04 22:53:45,072:INFO:Uploading results into container
2024-12-04 22:53:45,073:INFO:Uploading model into container now
2024-12-04 22:53:45,073:INFO:_master_model_container: 10
2024-12-04 22:53:45,073:INFO:_display_container: 2
2024-12-04 22:53:45,074:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4392, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-04 22:53:45,074:INFO:create_model() successfully completed......................................
2024-12-04 22:53:45,131:INFO:SubProcess create_model() end ==================================
2024-12-04 22:53:45,131:INFO:Creating metrics dataframe
2024-12-04 22:53:45,133:INFO:Initializing Linear Discriminant Analysis
2024-12-04 22:53:45,133:INFO:Total runtime is 1.6277879675229392 minutes
2024-12-04 22:53:45,133:INFO:SubProcess create_model() called ==================================
2024-12-04 22:53:45,133:INFO:Initializing create_model()
2024-12-04 22:53:45,133:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:53:45,134:INFO:Checking exceptions
2024-12-04 22:53:45,134:INFO:Importing libraries
2024-12-04 22:53:45,134:INFO:Copying training dataset
2024-12-04 22:53:45,145:INFO:Defining folds
2024-12-04 22:53:45,146:INFO:Declaring metric variables
2024-12-04 22:53:45,146:INFO:Importing untrained model
2024-12-04 22:53:45,146:INFO:Linear Discriminant Analysis Imported successfully
2024-12-04 22:53:45,146:INFO:Starting cross validation
2024-12-04 22:53:45,147:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:53:45,289:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:45,295:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,300:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:45,300:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:45,305:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:45,306:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:45,306:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,307:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,310:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:45,315:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,316:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,320:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,323:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,323:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:45,324:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,328:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,329:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,330:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,333:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,337:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,337:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,344:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,349:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,350:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,354:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,356:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,357:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,367:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:45,372:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,385:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,395:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,417:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:45,421:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,428:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,434:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:53:45,436:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,437:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,445:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,451:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:45,475:INFO:Calculating mean and std
2024-12-04 22:53:45,476:INFO:Creating metrics dataframe
2024-12-04 22:53:45,477:INFO:Uploading results into container
2024-12-04 22:53:45,478:INFO:Uploading model into container now
2024-12-04 22:53:45,478:INFO:_master_model_container: 11
2024-12-04 22:53:45,479:INFO:_display_container: 2
2024-12-04 22:53:45,479:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-04 22:53:45,479:INFO:create_model() successfully completed......................................
2024-12-04 22:53:45,537:INFO:SubProcess create_model() end ==================================
2024-12-04 22:53:45,538:INFO:Creating metrics dataframe
2024-12-04 22:53:45,540:INFO:Initializing Extra Trees Classifier
2024-12-04 22:53:45,540:INFO:Total runtime is 1.6345720450083416 minutes
2024-12-04 22:53:45,540:INFO:SubProcess create_model() called ==================================
2024-12-04 22:53:45,540:INFO:Initializing create_model()
2024-12-04 22:53:45,540:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:53:45,540:INFO:Checking exceptions
2024-12-04 22:53:45,540:INFO:Importing libraries
2024-12-04 22:53:45,540:INFO:Copying training dataset
2024-12-04 22:53:45,553:INFO:Defining folds
2024-12-04 22:53:45,553:INFO:Declaring metric variables
2024-12-04 22:53:45,553:INFO:Importing untrained model
2024-12-04 22:53:45,553:INFO:Extra Trees Classifier Imported successfully
2024-12-04 22:53:45,554:INFO:Starting cross validation
2024-12-04 22:53:45,554:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:53:50,933:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:50,946:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:50,953:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:50,967:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:50,973:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:50,984:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:50,995:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,005:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,009:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,009:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,029:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,037:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,172:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,177:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,187:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,193:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,194:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,207:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,207:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,213:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,215:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,221:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:51,235:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:52,277:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:52,289:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:52,299:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:52,353:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:52,359:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:52,367:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:53:52,384:INFO:Calculating mean and std
2024-12-04 22:53:52,385:INFO:Creating metrics dataframe
2024-12-04 22:53:52,387:INFO:Uploading results into container
2024-12-04 22:53:52,388:INFO:Uploading model into container now
2024-12-04 22:53:52,388:INFO:_master_model_container: 12
2024-12-04 22:53:52,388:INFO:_display_container: 2
2024-12-04 22:53:52,389:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=4392, verbose=0,
                     warm_start=False)
2024-12-04 22:53:52,389:INFO:create_model() successfully completed......................................
2024-12-04 22:53:52,475:INFO:SubProcess create_model() end ==================================
2024-12-04 22:53:52,475:INFO:Creating metrics dataframe
2024-12-04 22:53:52,480:INFO:Initializing Extreme Gradient Boosting
2024-12-04 22:53:52,480:INFO:Total runtime is 1.7502381682395938 minutes
2024-12-04 22:53:52,481:INFO:SubProcess create_model() called ==================================
2024-12-04 22:53:52,481:INFO:Initializing create_model()
2024-12-04 22:53:52,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:53:52,481:INFO:Checking exceptions
2024-12-04 22:53:52,481:INFO:Importing libraries
2024-12-04 22:53:52,481:INFO:Copying training dataset
2024-12-04 22:53:52,507:INFO:Defining folds
2024-12-04 22:53:52,507:INFO:Declaring metric variables
2024-12-04 22:53:52,507:INFO:Importing untrained model
2024-12-04 22:53:52,508:INFO:Extreme Gradient Boosting Imported successfully
2024-12-04 22:53:52,509:INFO:Starting cross validation
2024-12-04 22:53:52,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:54:18,903:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:18,916:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:18,936:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:20,210:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:20,226:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:20,242:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:20,874:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:20,890:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:20,902:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:21,001:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:21,016:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:21,029:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:22,079:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:22,093:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:22,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:22,239:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:22,253:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:22,265:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:22,744:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:22,757:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:22,771:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:23,311:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:23,326:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:23,341:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:35,131:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:35,140:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:35,150:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:35,647:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:35,652:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:35,657:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:35,672:INFO:Calculating mean and std
2024-12-04 22:54:35,672:INFO:Creating metrics dataframe
2024-12-04 22:54:35,674:INFO:Uploading results into container
2024-12-04 22:54:35,674:INFO:Uploading model into container now
2024-12-04 22:54:35,675:INFO:_master_model_container: 13
2024-12-04 22:54:35,675:INFO:_display_container: 2
2024-12-04 22:54:35,676:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic',
              predictor=None, random_state=4392, reg_alpha=None, ...)
2024-12-04 22:54:35,676:INFO:create_model() successfully completed......................................
2024-12-04 22:54:35,741:INFO:SubProcess create_model() end ==================================
2024-12-04 22:54:35,742:INFO:Creating metrics dataframe
2024-12-04 22:54:35,744:INFO:Initializing Light Gradient Boosting Machine
2024-12-04 22:54:35,744:INFO:Total runtime is 2.471314843495687 minutes
2024-12-04 22:54:35,744:INFO:SubProcess create_model() called ==================================
2024-12-04 22:54:35,744:INFO:Initializing create_model()
2024-12-04 22:54:35,744:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:54:35,744:INFO:Checking exceptions
2024-12-04 22:54:35,744:INFO:Importing libraries
2024-12-04 22:54:35,745:INFO:Copying training dataset
2024-12-04 22:54:35,758:INFO:Defining folds
2024-12-04 22:54:35,758:INFO:Declaring metric variables
2024-12-04 22:54:35,758:INFO:Importing untrained model
2024-12-04 22:54:35,758:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-04 22:54:35,759:INFO:Starting cross validation
2024-12-04 22:54:35,759:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:54:41,755:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:41,769:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:41,777:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:41,791:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:41,794:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:41,807:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:41,950:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:41,964:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:42,026:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:42,205:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:42,220:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:42,235:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:42,235:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:42,241:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:42,251:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:42,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:42,266:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:42,273:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:43,041:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:43,055:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:43,067:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:43,074:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:43,087:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:43,101:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:44,580:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:44,590:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:44,600:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:44,887:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:44,897:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:44,907:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:44,931:INFO:Calculating mean and std
2024-12-04 22:54:44,932:INFO:Creating metrics dataframe
2024-12-04 22:54:44,935:INFO:Uploading results into container
2024-12-04 22:54:44,936:INFO:Uploading model into container now
2024-12-04 22:54:44,937:INFO:_master_model_container: 14
2024-12-04 22:54:44,937:INFO:_display_container: 2
2024-12-04 22:54:44,938:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4392, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-04 22:54:44,938:INFO:create_model() successfully completed......................................
2024-12-04 22:54:45,006:INFO:SubProcess create_model() end ==================================
2024-12-04 22:54:45,007:INFO:Creating metrics dataframe
2024-12-04 22:54:45,009:INFO:Initializing Dummy Classifier
2024-12-04 22:54:45,009:INFO:Total runtime is 2.625729576746623 minutes
2024-12-04 22:54:45,009:INFO:SubProcess create_model() called ==================================
2024-12-04 22:54:45,009:INFO:Initializing create_model()
2024-12-04 22:54:45,009:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000019D5E435E90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:54:45,009:INFO:Checking exceptions
2024-12-04 22:54:45,009:INFO:Importing libraries
2024-12-04 22:54:45,009:INFO:Copying training dataset
2024-12-04 22:54:45,022:INFO:Defining folds
2024-12-04 22:54:45,022:INFO:Declaring metric variables
2024-12-04 22:54:45,022:INFO:Importing untrained model
2024-12-04 22:54:45,023:INFO:Dummy Classifier Imported successfully
2024-12-04 22:54:45,023:INFO:Starting cross validation
2024-12-04 22:54:45,023:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:54:45,113:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,118:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,130:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,133:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,134:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,137:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:54:45,139:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,142:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:54:45,143:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,144:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,147:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,148:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,155:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:54:45,157:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,160:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,161:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,165:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,168:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,171:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:54:45,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:54:45,185:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,185:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,190:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:54:45,199:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,205:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,206:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,211:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:54:45,220:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,223:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,230:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:54:45,237:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,253:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,264:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,266:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,269:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:54:45,273:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,273:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,278:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:54:45,281:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:45,303:INFO:Calculating mean and std
2024-12-04 22:54:45,304:INFO:Creating metrics dataframe
2024-12-04 22:54:45,306:INFO:Uploading results into container
2024-12-04 22:54:45,307:INFO:Uploading model into container now
2024-12-04 22:54:45,308:INFO:_master_model_container: 15
2024-12-04 22:54:45,308:INFO:_display_container: 2
2024-12-04 22:54:45,308:INFO:DummyClassifier(constant=None, random_state=4392, strategy='prior')
2024-12-04 22:54:45,308:INFO:create_model() successfully completed......................................
2024-12-04 22:54:45,388:INFO:SubProcess create_model() end ==================================
2024-12-04 22:54:45,388:INFO:Creating metrics dataframe
2024-12-04 22:54:45,393:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-04 22:54:45,395:INFO:Initializing create_model()
2024-12-04 22:54:45,395:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4392, splitter='best'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:54:45,395:INFO:Checking exceptions
2024-12-04 22:54:45,396:INFO:Importing libraries
2024-12-04 22:54:45,396:INFO:Copying training dataset
2024-12-04 22:54:45,413:INFO:Defining folds
2024-12-04 22:54:45,413:INFO:Declaring metric variables
2024-12-04 22:54:45,413:INFO:Importing untrained model
2024-12-04 22:54:45,413:INFO:Declaring custom model
2024-12-04 22:54:45,414:INFO:Decision Tree Classifier Imported successfully
2024-12-04 22:54:45,415:INFO:Cross validation set to False
2024-12-04 22:54:45,415:INFO:Fitting Model
2024-12-04 22:54:45,800:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4392, splitter='best')
2024-12-04 22:54:45,800:INFO:create_model() successfully completed......................................
2024-12-04 22:54:45,882:INFO:_master_model_container: 15
2024-12-04 22:54:45,882:INFO:_display_container: 2
2024-12-04 22:54:45,883:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4392, splitter='best')
2024-12-04 22:54:45,883:INFO:compare_models() successfully completed......................................
2024-12-04 22:54:45,883:INFO:Initializing evaluate_model()
2024-12-04 22:54:45,883:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4392, splitter='best'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-12-04 22:54:46,068:INFO:Initializing plot_model()
2024-12-04 22:54:46,068:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4392, splitter='best'), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-12-04 22:54:46,068:INFO:Checking exceptions
2024-12-04 22:54:46,075:INFO:Preloading libraries
2024-12-04 22:54:46,076:INFO:Copying training dataset
2024-12-04 22:54:46,077:INFO:Plot type: pipeline
2024-12-04 22:54:46,855:INFO:Visual Rendered Successfully
2024-12-04 22:54:46,922:INFO:plot_model() successfully completed......................................
2024-12-04 22:54:46,923:INFO:Initializing plot_model()
2024-12-04 22:54:46,924:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4392, splitter='best'), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 22:54:46,924:INFO:Checking exceptions
2024-12-04 22:54:46,929:INFO:Preloading libraries
2024-12-04 22:54:46,930:INFO:Copying training dataset
2024-12-04 22:54:46,930:INFO:Plot type: auc
2024-12-04 22:54:47,106:INFO:Fitting Model
2024-12-04 22:54:47,108:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-12-04 22:54:47,109:INFO:Scoring test/hold-out set
2024-12-04 22:54:47,511:INFO:Visual Rendered Successfully
2024-12-04 22:54:47,583:INFO:plot_model() successfully completed......................................
2024-12-04 22:54:47,585:INFO:Initializing plot_model()
2024-12-04 22:54:47,585:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4392, splitter='best'), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 22:54:47,585:INFO:Checking exceptions
2024-12-04 22:54:47,590:INFO:Preloading libraries
2024-12-04 22:54:47,591:INFO:Copying training dataset
2024-12-04 22:54:47,591:INFO:Plot type: confusion_matrix
2024-12-04 22:54:47,763:INFO:Fitting Model
2024-12-04 22:54:47,763:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names
  warnings.warn(

2024-12-04 22:54:47,764:INFO:Scoring test/hold-out set
2024-12-04 22:54:48,058:INFO:Visual Rendered Successfully
2024-12-04 22:54:48,126:INFO:plot_model() successfully completed......................................
2024-12-04 22:54:48,127:INFO:Initializing predict_model()
2024-12-04 22:54:48,127:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4392, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019D5E803D80>)
2024-12-04 22:54:48,127:INFO:Checking exceptions
2024-12-04 22:54:48,127:INFO:Preloading libraries
2024-12-04 22:54:48,235:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:48,253:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:48,272:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:48,386:INFO:Initializing predict_model()
2024-12-04 22:54:48,386:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000019D5C918990>, estimator=DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=4392, splitter='best'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000019D5E803D80>)
2024-12-04 22:54:48,386:INFO:Checking exceptions
2024-12-04 22:54:48,386:INFO:Preloading libraries
2024-12-04 22:54:48,386:INFO:Set up data.
2024-12-04 22:54:48,401:INFO:Set up index.
2024-12-04 22:54:48,462:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:48,494:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:54:48,524:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:42,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:56:42,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:56:42,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:56:42,444:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 22:56:44,406:INFO:PyCaret ClassificationExperiment
2024-12-04 22:56:44,406:INFO:Logging name: clf-default-name
2024-12-04 22:56:44,407:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-04 22:56:44,407:INFO:version 3.3.2
2024-12-04 22:56:44,407:INFO:Initializing setup()
2024-12-04 22:56:44,407:INFO:self.USI: 4c0c
2024-12-04 22:56:44,407:INFO:self._variable_keys: {'fold_shuffle_param', 'exp_name_log', 'gpu_n_jobs_param', 'USI', 'y', 'gpu_param', 'exp_id', 'n_jobs_param', 'target_param', 'logging_param', 'fold_generator', 'is_multiclass', 'X_train', 'html_param', 'fold_groups_param', 'memory', 'X', 'idx', '_ml_usecase', 'y_train', 'y_test', 'fix_imbalance', 'log_plots_param', 'seed', '_available_plots', 'X_test', 'data', 'pipeline'}
2024-12-04 22:56:44,407:INFO:Checking environment
2024-12-04 22:56:44,407:INFO:python_version: 3.11.9
2024-12-04 22:56:44,407:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-12-04 22:56:44,407:INFO:machine: AMD64
2024-12-04 22:56:44,436:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-04 22:56:44,445:INFO:Memory: svmem(total=8345964544, available=477732864, percent=94.3, used=7868231680, free=477732864)
2024-12-04 22:56:44,445:INFO:Physical Core: 4
2024-12-04 22:56:44,445:INFO:Logical Core: 8
2024-12-04 22:56:44,445:INFO:Checking libraries
2024-12-04 22:56:44,445:INFO:System:
2024-12-04 22:56:44,445:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-12-04 22:56:44,445:INFO:executable: C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Scripts\python.exe
2024-12-04 22:56:44,445:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-04 22:56:44,445:INFO:PyCaret required dependencies:
2024-12-04 22:56:44,492:INFO:                 pip: 24.3.1
2024-12-04 22:56:44,492:INFO:          setuptools: 68.2.0
2024-12-04 22:56:44,492:INFO:             pycaret: 3.3.2
2024-12-04 22:56:44,492:INFO:             IPython: 8.29.0
2024-12-04 22:56:44,492:INFO:          ipywidgets: 8.1.5
2024-12-04 22:56:44,492:INFO:                tqdm: 4.67.0
2024-12-04 22:56:44,492:INFO:               numpy: 1.26.4
2024-12-04 22:56:44,492:INFO:              pandas: 2.1.4
2024-12-04 22:56:44,492:INFO:              jinja2: 3.1.4
2024-12-04 22:56:44,492:INFO:               scipy: 1.11.4
2024-12-04 22:56:44,492:INFO:              joblib: 1.3.2
2024-12-04 22:56:44,492:INFO:             sklearn: 1.4.2
2024-12-04 22:56:44,492:INFO:                pyod: 2.0.2
2024-12-04 22:56:44,493:INFO:            imblearn: 0.12.4
2024-12-04 22:56:44,493:INFO:   category_encoders: 2.6.4
2024-12-04 22:56:44,493:INFO:            lightgbm: 4.5.0
2024-12-04 22:56:44,493:INFO:               numba: 0.60.0
2024-12-04 22:56:44,493:INFO:            requests: 2.32.3
2024-12-04 22:56:44,493:INFO:          matplotlib: 3.7.5
2024-12-04 22:56:44,493:INFO:          scikitplot: 0.3.7
2024-12-04 22:56:44,493:INFO:         yellowbrick: 1.5
2024-12-04 22:56:44,493:INFO:              plotly: 5.24.1
2024-12-04 22:56:44,493:INFO:    plotly-resampler: Not installed
2024-12-04 22:56:44,493:INFO:             kaleido: 0.2.1
2024-12-04 22:56:44,493:INFO:           schemdraw: 0.15
2024-12-04 22:56:44,493:INFO:         statsmodels: 0.14.4
2024-12-04 22:56:44,493:INFO:              sktime: 0.26.0
2024-12-04 22:56:44,493:INFO:               tbats: 1.1.3
2024-12-04 22:56:44,493:INFO:            pmdarima: 2.0.4
2024-12-04 22:56:44,493:INFO:              psutil: 6.1.0
2024-12-04 22:56:44,493:INFO:          markupsafe: 2.1.5
2024-12-04 22:56:44,493:INFO:             pickle5: Not installed
2024-12-04 22:56:44,493:INFO:         cloudpickle: 3.1.0
2024-12-04 22:56:44,493:INFO:         deprecation: 2.1.0
2024-12-04 22:56:44,493:INFO:              xxhash: 3.5.0
2024-12-04 22:56:44,493:INFO:           wurlitzer: Not installed
2024-12-04 22:56:44,493:INFO:PyCaret optional dependencies:
2024-12-04 22:56:44,514:INFO:                shap: Not installed
2024-12-04 22:56:44,515:INFO:           interpret: Not installed
2024-12-04 22:56:44,515:INFO:                umap: Not installed
2024-12-04 22:56:44,515:INFO:     ydata_profiling: Not installed
2024-12-04 22:56:44,515:INFO:  explainerdashboard: Not installed
2024-12-04 22:56:44,515:INFO:             autoviz: 0.1.905
2024-12-04 22:56:44,515:INFO:           fairlearn: Not installed
2024-12-04 22:56:44,515:INFO:          deepchecks: Not installed
2024-12-04 22:56:44,515:INFO:             xgboost: 1.6.2
2024-12-04 22:56:44,515:INFO:            catboost: Not installed
2024-12-04 22:56:44,515:INFO:              kmodes: Not installed
2024-12-04 22:56:44,515:INFO:             mlxtend: Not installed
2024-12-04 22:56:44,515:INFO:       statsforecast: Not installed
2024-12-04 22:56:44,515:INFO:        tune_sklearn: Not installed
2024-12-04 22:56:44,515:INFO:                 ray: Not installed
2024-12-04 22:56:44,515:INFO:            hyperopt: Not installed
2024-12-04 22:56:44,515:INFO:              optuna: Not installed
2024-12-04 22:56:44,515:INFO:               skopt: Not installed
2024-12-04 22:56:44,515:INFO:              mlflow: Not installed
2024-12-04 22:56:44,515:INFO:              gradio: Not installed
2024-12-04 22:56:44,515:INFO:             fastapi: Not installed
2024-12-04 22:56:44,516:INFO:             uvicorn: Not installed
2024-12-04 22:56:44,516:INFO:              m2cgen: Not installed
2024-12-04 22:56:44,516:INFO:           evidently: Not installed
2024-12-04 22:56:44,516:INFO:               fugue: Not installed
2024-12-04 22:56:44,516:INFO:           streamlit: Not installed
2024-12-04 22:56:44,516:INFO:             prophet: Not installed
2024-12-04 22:56:44,516:INFO:None
2024-12-04 22:56:44,516:INFO:Set up data.
2024-12-04 22:56:44,540:INFO:Set up folding strategy.
2024-12-04 22:56:44,540:INFO:Set up train/test split.
2024-12-04 22:56:44,566:INFO:Set up index.
2024-12-04 22:56:44,567:INFO:Assigning column types.
2024-12-04 22:56:44,579:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-04 22:56:44,629:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 22:56:44,633:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:56:44,669:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:56:45,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:56:45,183:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 22:56:45,184:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:56:45,215:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:56:45,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:56:45,218:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-04 22:56:45,261:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:56:45,291:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:56:45,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:56:45,341:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 22:56:45,367:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:56:45,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:56:45,370:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-04 22:56:45,446:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:56:45,449:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:56:45,528:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:56:45,530:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:56:45,635:INFO:Preparing preprocessing pipeline...
2024-12-04 22:56:45,676:INFO:Set up label encoding.
2024-12-04 22:56:45,678:INFO:Set up simple imputation.
2024-12-04 22:56:45,731:INFO:Finished creating preprocessing pipeline.
2024-12-04 22:56:45,736:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-04 22:56:45,736:INFO:Creating final display dataframe.
2024-12-04 22:56:45,879:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               5192
1                        Target                                          Treatment
2                   Target type                                         Multiclass
3                Target mapping  Chemotherapy: 0, Radiation Therapy: 1, Surgery...
4           Original data shape                                        (11592, 36)
5        Transformed data shape                                        (11592, 36)
6   Transformed train set shape                                         (8114, 36)
7    Transformed test set shape                                         (3478, 36)
8              Numeric features                                                 35
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               4c0c
2024-12-04 22:56:45,957:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:56:45,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:56:46,034:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 22:56:46,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 22:56:46,037:INFO:setup() successfully completed in 1.64s...............
2024-12-04 22:56:46,037:INFO:Initializing compare_models()
2024-12-04 22:56:46,037:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-12-04 22:56:46,037:INFO:Checking exceptions
2024-12-04 22:56:46,046:INFO:Preparing display monitor
2024-12-04 22:56:46,053:INFO:Initializing Logistic Regression
2024-12-04 22:56:46,053:INFO:Total runtime is 1.638333002726237e-05 minutes
2024-12-04 22:56:46,053:INFO:SubProcess create_model() called ==================================
2024-12-04 22:56:46,053:INFO:Initializing create_model()
2024-12-04 22:56:46,053:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:56:46,053:INFO:Checking exceptions
2024-12-04 22:56:46,054:INFO:Importing libraries
2024-12-04 22:56:46,054:INFO:Copying training dataset
2024-12-04 22:56:46,066:INFO:Defining folds
2024-12-04 22:56:46,066:INFO:Declaring metric variables
2024-12-04 22:56:46,066:INFO:Importing untrained model
2024-12-04 22:56:46,066:INFO:Logistic Regression Imported successfully
2024-12-04 22:56:46,066:INFO:Starting cross validation
2024-12-04 22:56:46,067:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:56:59,907:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:56:59,918:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,919:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,935:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,943:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:56:59,951:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,952:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:56:59,958:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,958:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,960:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,965:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,967:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:56:59,972:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,974:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,975:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,976:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:56:59,980:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:56:59,985:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,987:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,988:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,988:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:56:59,994:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:56:59,998:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,001:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,003:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,004:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,017:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,021:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,029:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,031:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,037:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,294:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:00,298:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,310:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,317:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,332:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:00,335:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,344:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,351:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:00,361:INFO:Calculating mean and std
2024-12-04 22:57:00,362:INFO:Creating metrics dataframe
2024-12-04 22:57:00,364:INFO:Uploading results into container
2024-12-04 22:57:00,364:INFO:Uploading model into container now
2024-12-04 22:57:00,365:INFO:_master_model_container: 1
2024-12-04 22:57:00,365:INFO:_display_container: 2
2024-12-04 22:57:00,365:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5192, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-04 22:57:00,366:INFO:create_model() successfully completed......................................
2024-12-04 22:57:00,449:INFO:SubProcess create_model() end ==================================
2024-12-04 22:57:00,449:INFO:Creating metrics dataframe
2024-12-04 22:57:00,454:INFO:Initializing K Neighbors Classifier
2024-12-04 22:57:00,454:INFO:Total runtime is 0.2400211811065674 minutes
2024-12-04 22:57:00,455:INFO:SubProcess create_model() called ==================================
2024-12-04 22:57:00,455:INFO:Initializing create_model()
2024-12-04 22:57:00,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:57:00,455:INFO:Checking exceptions
2024-12-04 22:57:00,455:INFO:Importing libraries
2024-12-04 22:57:00,455:INFO:Copying training dataset
2024-12-04 22:57:00,478:INFO:Defining folds
2024-12-04 22:57:00,478:INFO:Declaring metric variables
2024-12-04 22:57:00,479:INFO:Importing untrained model
2024-12-04 22:57:00,479:INFO:K Neighbors Classifier Imported successfully
2024-12-04 22:57:00,479:INFO:Starting cross validation
2024-12-04 22:57:00,480:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:57:01,575:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,580:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,586:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,590:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,595:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,602:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,609:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,617:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,619:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,664:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,683:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,693:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,701:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,704:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,707:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,712:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,716:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,717:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,724:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,728:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,730:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,737:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,742:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,886:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,895:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,907:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,922:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,929:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,936:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:01,955:INFO:Calculating mean and std
2024-12-04 22:57:01,956:INFO:Creating metrics dataframe
2024-12-04 22:57:01,958:INFO:Uploading results into container
2024-12-04 22:57:01,959:INFO:Uploading model into container now
2024-12-04 22:57:01,960:INFO:_master_model_container: 2
2024-12-04 22:57:01,960:INFO:_display_container: 2
2024-12-04 22:57:01,961:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-04 22:57:01,961:INFO:create_model() successfully completed......................................
2024-12-04 22:57:02,043:INFO:SubProcess create_model() end ==================================
2024-12-04 22:57:02,044:INFO:Creating metrics dataframe
2024-12-04 22:57:02,047:INFO:Initializing Naive Bayes
2024-12-04 22:57:02,047:INFO:Total runtime is 0.26658331950505576 minutes
2024-12-04 22:57:02,047:INFO:SubProcess create_model() called ==================================
2024-12-04 22:57:02,047:INFO:Initializing create_model()
2024-12-04 22:57:02,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:57:02,048:INFO:Checking exceptions
2024-12-04 22:57:02,048:INFO:Importing libraries
2024-12-04 22:57:02,048:INFO:Copying training dataset
2024-12-04 22:57:02,061:INFO:Defining folds
2024-12-04 22:57:02,061:INFO:Declaring metric variables
2024-12-04 22:57:02,061:INFO:Importing untrained model
2024-12-04 22:57:02,061:INFO:Naive Bayes Imported successfully
2024-12-04 22:57:02,061:INFO:Starting cross validation
2024-12-04 22:57:02,062:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:57:02,193:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,195:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,200:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,206:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,207:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,213:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,214:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,217:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,222:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,227:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,229:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,235:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,236:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,241:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,243:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,249:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,252:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,256:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,265:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,270:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,272:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,279:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,305:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,313:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,314:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,319:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,320:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:02,346:INFO:Calculating mean and std
2024-12-04 22:57:02,347:INFO:Creating metrics dataframe
2024-12-04 22:57:02,348:INFO:Uploading results into container
2024-12-04 22:57:02,348:INFO:Uploading model into container now
2024-12-04 22:57:02,349:INFO:_master_model_container: 3
2024-12-04 22:57:02,349:INFO:_display_container: 2
2024-12-04 22:57:02,349:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 22:57:02,349:INFO:create_model() successfully completed......................................
2024-12-04 22:57:02,403:INFO:SubProcess create_model() end ==================================
2024-12-04 22:57:02,403:INFO:Creating metrics dataframe
2024-12-04 22:57:02,406:INFO:Initializing Decision Tree Classifier
2024-12-04 22:57:02,406:INFO:Total runtime is 0.2725563327471415 minutes
2024-12-04 22:57:02,406:INFO:SubProcess create_model() called ==================================
2024-12-04 22:57:02,406:INFO:Initializing create_model()
2024-12-04 22:57:02,406:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:57:02,406:INFO:Checking exceptions
2024-12-04 22:57:02,406:INFO:Importing libraries
2024-12-04 22:57:02,406:INFO:Copying training dataset
2024-12-04 22:57:02,418:INFO:Defining folds
2024-12-04 22:57:02,418:INFO:Declaring metric variables
2024-12-04 22:57:02,418:INFO:Importing untrained model
2024-12-04 22:57:02,418:INFO:Decision Tree Classifier Imported successfully
2024-12-04 22:57:02,419:INFO:Starting cross validation
2024-12-04 22:57:02,419:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:57:03,115:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,123:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,128:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,136:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,143:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,149:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,175:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,188:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,201:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,252:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,254:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,265:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,268:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,278:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,281:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,298:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,314:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,319:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,332:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,345:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,368:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,376:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,383:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,656:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,667:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,678:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,740:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,748:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,757:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:03,780:INFO:Calculating mean and std
2024-12-04 22:57:03,781:INFO:Creating metrics dataframe
2024-12-04 22:57:03,784:INFO:Uploading results into container
2024-12-04 22:57:03,784:INFO:Uploading model into container now
2024-12-04 22:57:03,785:INFO:_master_model_container: 4
2024-12-04 22:57:03,785:INFO:_display_container: 2
2024-12-04 22:57:03,786:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=5192, splitter='best')
2024-12-04 22:57:03,786:INFO:create_model() successfully completed......................................
2024-12-04 22:57:03,851:INFO:SubProcess create_model() end ==================================
2024-12-04 22:57:03,851:INFO:Creating metrics dataframe
2024-12-04 22:57:03,853:INFO:Initializing SVM - Linear Kernel
2024-12-04 22:57:03,853:INFO:Total runtime is 0.29667909145355226 minutes
2024-12-04 22:57:03,853:INFO:SubProcess create_model() called ==================================
2024-12-04 22:57:03,853:INFO:Initializing create_model()
2024-12-04 22:57:03,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:57:03,854:INFO:Checking exceptions
2024-12-04 22:57:03,854:INFO:Importing libraries
2024-12-04 22:57:03,854:INFO:Copying training dataset
2024-12-04 22:57:03,873:INFO:Defining folds
2024-12-04 22:57:03,873:INFO:Declaring metric variables
2024-12-04 22:57:03,873:INFO:Importing untrained model
2024-12-04 22:57:03,874:INFO:SVM - Linear Kernel Imported successfully
2024-12-04 22:57:03,874:INFO:Starting cross validation
2024-12-04 22:57:03,875:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:57:05,065:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:05,070:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,078:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:05,082:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,085:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,091:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:05,096:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,097:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,097:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,109:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,139:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:05,144:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,171:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,198:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,205:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:05,210:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,222:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,230:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,243:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,312:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,766:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:05,771:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,782:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,786:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:05,792:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,794:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:05,798:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,804:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,812:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,817:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:05,825:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:06,050:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:06,053:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:06,053:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:06,059:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:06,059:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:06,064:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:06,064:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:06,078:INFO:Calculating mean and std
2024-12-04 22:57:06,079:INFO:Creating metrics dataframe
2024-12-04 22:57:06,080:INFO:Uploading results into container
2024-12-04 22:57:06,081:INFO:Uploading model into container now
2024-12-04 22:57:06,081:INFO:_master_model_container: 5
2024-12-04 22:57:06,081:INFO:_display_container: 2
2024-12-04 22:57:06,081:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5192, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-04 22:57:06,082:INFO:create_model() successfully completed......................................
2024-12-04 22:57:06,137:INFO:SubProcess create_model() end ==================================
2024-12-04 22:57:06,137:INFO:Creating metrics dataframe
2024-12-04 22:57:06,139:INFO:Initializing Ridge Classifier
2024-12-04 22:57:06,140:INFO:Total runtime is 0.3347958246866862 minutes
2024-12-04 22:57:06,140:INFO:SubProcess create_model() called ==================================
2024-12-04 22:57:06,140:INFO:Initializing create_model()
2024-12-04 22:57:06,140:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:57:06,140:INFO:Checking exceptions
2024-12-04 22:57:06,140:INFO:Importing libraries
2024-12-04 22:57:06,140:INFO:Copying training dataset
2024-12-04 22:57:06,152:INFO:Defining folds
2024-12-04 22:57:06,152:INFO:Declaring metric variables
2024-12-04 22:57:06,152:INFO:Importing untrained model
2024-12-04 22:57:06,152:INFO:Ridge Classifier Imported successfully
2024-12-04 22:57:06,153:INFO:Starting cross validation
2024-12-04 22:57:06,154:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:57:08,026:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:08,026:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:08,027:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:08,028:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:08,030:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,031:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,031:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,031:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,031:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,031:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,039:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,039:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,039:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,039:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,041:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:08,042:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,042:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,046:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:08,048:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,050:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,051:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,054:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,054:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,055:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,061:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,065:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,075:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,076:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,086:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,124:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:08,127:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,132:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:08,133:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,134:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,138:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,139:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,146:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:08,155:INFO:Calculating mean and std
2024-12-04 22:57:08,155:INFO:Creating metrics dataframe
2024-12-04 22:57:08,156:INFO:Uploading results into container
2024-12-04 22:57:08,157:INFO:Uploading model into container now
2024-12-04 22:57:08,157:INFO:_master_model_container: 6
2024-12-04 22:57:08,157:INFO:_display_container: 2
2024-12-04 22:57:08,157:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5192, solver='auto',
                tol=0.0001)
2024-12-04 22:57:08,157:INFO:create_model() successfully completed......................................
2024-12-04 22:57:08,216:INFO:SubProcess create_model() end ==================================
2024-12-04 22:57:08,216:INFO:Creating metrics dataframe
2024-12-04 22:57:08,218:INFO:Initializing Random Forest Classifier
2024-12-04 22:57:08,218:INFO:Total runtime is 0.3694290717442831 minutes
2024-12-04 22:57:08,218:INFO:SubProcess create_model() called ==================================
2024-12-04 22:57:08,219:INFO:Initializing create_model()
2024-12-04 22:57:08,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:57:08,219:INFO:Checking exceptions
2024-12-04 22:57:08,219:INFO:Importing libraries
2024-12-04 22:57:08,219:INFO:Copying training dataset
2024-12-04 22:57:08,230:INFO:Defining folds
2024-12-04 22:57:08,232:INFO:Declaring metric variables
2024-12-04 22:57:08,232:INFO:Importing untrained model
2024-12-04 22:57:08,232:INFO:Random Forest Classifier Imported successfully
2024-12-04 22:57:08,232:INFO:Starting cross validation
2024-12-04 22:57:08,233:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:57:16,346:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,368:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,374:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,385:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,389:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,461:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,461:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,462:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,472:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,490:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,491:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,498:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,510:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,513:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,537:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,550:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,561:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,565:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,713:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,737:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,773:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,781:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,786:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:16,814:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:18,662:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:18,674:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:18,688:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:18,763:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:18,771:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:18,782:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:18,805:INFO:Calculating mean and std
2024-12-04 22:57:18,807:INFO:Creating metrics dataframe
2024-12-04 22:57:18,810:INFO:Uploading results into container
2024-12-04 22:57:18,811:INFO:Uploading model into container now
2024-12-04 22:57:18,812:INFO:_master_model_container: 7
2024-12-04 22:57:18,812:INFO:_display_container: 2
2024-12-04 22:57:18,813:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=5192, verbose=0,
                       warm_start=False)
2024-12-04 22:57:18,813:INFO:create_model() successfully completed......................................
2024-12-04 22:57:18,915:INFO:SubProcess create_model() end ==================================
2024-12-04 22:57:18,915:INFO:Creating metrics dataframe
2024-12-04 22:57:18,918:INFO:Initializing Quadratic Discriminant Analysis
2024-12-04 22:57:18,919:INFO:Total runtime is 0.5477686246236166 minutes
2024-12-04 22:57:18,919:INFO:SubProcess create_model() called ==================================
2024-12-04 22:57:18,919:INFO:Initializing create_model()
2024-12-04 22:57:18,919:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:57:18,919:INFO:Checking exceptions
2024-12-04 22:57:18,919:INFO:Importing libraries
2024-12-04 22:57:18,919:INFO:Copying training dataset
2024-12-04 22:57:18,946:INFO:Defining folds
2024-12-04 22:57:18,946:INFO:Declaring metric variables
2024-12-04 22:57:18,947:INFO:Importing untrained model
2024-12-04 22:57:18,947:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-04 22:57:18,948:INFO:Starting cross validation
2024-12-04 22:57:18,950:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:57:19,155:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:19,161:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:19,161:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,166:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,176:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:19,181:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,187:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,191:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:19,194:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:19,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,198:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,200:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,200:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:19,200:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:19,207:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,207:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,211:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,214:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,221:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,226:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,229:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,231:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:19,234:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,236:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,237:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,242:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,247:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,249:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,254:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,268:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,303:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:19,309:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,321:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,321:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:19,326:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,333:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,335:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,344:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:19,365:INFO:Calculating mean and std
2024-12-04 22:57:19,365:INFO:Creating metrics dataframe
2024-12-04 22:57:19,367:INFO:Uploading results into container
2024-12-04 22:57:19,368:INFO:Uploading model into container now
2024-12-04 22:57:19,368:INFO:_master_model_container: 8
2024-12-04 22:57:19,368:INFO:_display_container: 2
2024-12-04 22:57:19,369:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-04 22:57:19,369:INFO:create_model() successfully completed......................................
2024-12-04 22:57:19,447:INFO:SubProcess create_model() end ==================================
2024-12-04 22:57:19,447:INFO:Creating metrics dataframe
2024-12-04 22:57:19,450:INFO:Initializing Ada Boost Classifier
2024-12-04 22:57:19,450:INFO:Total runtime is 0.5566254854202272 minutes
2024-12-04 22:57:19,450:INFO:SubProcess create_model() called ==================================
2024-12-04 22:57:19,451:INFO:Initializing create_model()
2024-12-04 22:57:19,451:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:57:19,451:INFO:Checking exceptions
2024-12-04 22:57:19,451:INFO:Importing libraries
2024-12-04 22:57:19,451:INFO:Copying training dataset
2024-12-04 22:57:19,466:INFO:Defining folds
2024-12-04 22:57:19,467:INFO:Declaring metric variables
2024-12-04 22:57:19,467:INFO:Importing untrained model
2024-12-04 22:57:19,467:INFO:Ada Boost Classifier Imported successfully
2024-12-04 22:57:19,467:INFO:Starting cross validation
2024-12-04 22:57:19,468:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:57:19,596:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:57:19,596:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:57:19,597:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:57:19,597:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:57:19,597:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:57:19,599:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:57:19,599:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:57:22,113:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:22,118:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,132:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,132:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:22,133:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:22,138:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,139:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,149:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:22,154:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,154:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,155:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,162:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,168:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,168:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,176:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,190:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:22,192:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,210:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,224:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

ositive class.
  warnings.warn(

2024-12-04 22:57:22,231:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:57:22,253:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:22,259:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,261:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:22,267:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,272:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,280:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,285:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,292:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,293:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:22,297:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,305:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:22,315:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:23,614:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:23,617:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:23,627:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:23,629:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:23,633:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:23,634:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:23,641:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:23,651:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:23,664:INFO:Calculating mean and std
2024-12-04 22:57:23,664:INFO:Creating metrics dataframe
2024-12-04 22:57:23,667:INFO:Uploading results into container
2024-12-04 22:57:23,668:INFO:Uploading model into container now
2024-12-04 22:57:23,668:INFO:_master_model_container: 9
2024-12-04 22:57:23,668:INFO:_display_container: 2
2024-12-04 22:57:23,669:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5192)
2024-12-04 22:57:23,669:INFO:create_model() successfully completed......................................
2024-12-04 22:57:23,735:INFO:SubProcess create_model() end ==================================
2024-12-04 22:57:23,735:INFO:Creating metrics dataframe
2024-12-04 22:57:23,737:INFO:Initializing Gradient Boosting Classifier
2024-12-04 22:57:23,738:INFO:Total runtime is 0.6280928333600363 minutes
2024-12-04 22:57:23,738:INFO:SubProcess create_model() called ==================================
2024-12-04 22:57:23,738:INFO:Initializing create_model()
2024-12-04 22:57:23,738:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:57:23,738:INFO:Checking exceptions
2024-12-04 22:57:23,738:INFO:Importing libraries
2024-12-04 22:57:23,738:INFO:Copying training dataset
2024-12-04 22:57:23,753:INFO:Defining folds
2024-12-04 22:57:23,753:INFO:Declaring metric variables
2024-12-04 22:57:23,753:INFO:Importing untrained model
2024-12-04 22:57:23,753:INFO:Gradient Boosting Classifier Imported successfully
2024-12-04 22:57:23,754:INFO:Starting cross validation
2024-12-04 22:57:23,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:57:57,058:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:57,063:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:57,076:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:57,089:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:57,128:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:57:57,133:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:57,152:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:57:57,166:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:00,662:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:00,668:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:00,682:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:00,696:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:02,069:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:02,075:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:02,089:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:02,101:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:04,306:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:04,311:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:04,324:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:04,338:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:05,240:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:05,245:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:05,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:05,261:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:05,267:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:05,271:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:05,285:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:05,298:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:05,630:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:05,634:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:05,642:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:05,651:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:22,658:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:22,661:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:22,667:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:22,674:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,098:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:23,101:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,107:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,112:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,121:INFO:Calculating mean and std
2024-12-04 22:58:23,121:INFO:Creating metrics dataframe
2024-12-04 22:58:23,123:INFO:Uploading results into container
2024-12-04 22:58:23,123:INFO:Uploading model into container now
2024-12-04 22:58:23,123:INFO:_master_model_container: 10
2024-12-04 22:58:23,123:INFO:_display_container: 2
2024-12-04 22:58:23,124:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5192, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-04 22:58:23,124:INFO:create_model() successfully completed......................................
2024-12-04 22:58:23,200:INFO:SubProcess create_model() end ==================================
2024-12-04 22:58:23,200:INFO:Creating metrics dataframe
2024-12-04 22:58:23,202:INFO:Initializing Linear Discriminant Analysis
2024-12-04 22:58:23,202:INFO:Total runtime is 1.6191688577334087 minutes
2024-12-04 22:58:23,202:INFO:SubProcess create_model() called ==================================
2024-12-04 22:58:23,202:INFO:Initializing create_model()
2024-12-04 22:58:23,202:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:58:23,202:INFO:Checking exceptions
2024-12-04 22:58:23,202:INFO:Importing libraries
2024-12-04 22:58:23,202:INFO:Copying training dataset
2024-12-04 22:58:23,216:INFO:Defining folds
2024-12-04 22:58:23,216:INFO:Declaring metric variables
2024-12-04 22:58:23,216:INFO:Importing untrained model
2024-12-04 22:58:23,216:INFO:Linear Discriminant Analysis Imported successfully
2024-12-04 22:58:23,217:INFO:Starting cross validation
2024-12-04 22:58:23,217:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:58:23,350:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:23,356:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:23,356:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,362:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,366:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:23,367:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:23,369:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:23,373:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,373:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,374:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,375:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,375:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,379:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:23,384:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,387:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,387:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,388:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:23,389:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,389:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,389:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:23,393:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,395:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,398:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,401:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,403:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,407:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,408:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,411:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,421:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,422:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,426:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,477:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:23,479:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,485:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 22:58:23,487:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,488:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,495:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,496:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,501:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:23,512:INFO:Calculating mean and std
2024-12-04 22:58:23,512:INFO:Creating metrics dataframe
2024-12-04 22:58:23,514:INFO:Uploading results into container
2024-12-04 22:58:23,514:INFO:Uploading model into container now
2024-12-04 22:58:23,514:INFO:_master_model_container: 11
2024-12-04 22:58:23,514:INFO:_display_container: 2
2024-12-04 22:58:23,515:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-04 22:58:23,515:INFO:create_model() successfully completed......................................
2024-12-04 22:58:23,571:INFO:SubProcess create_model() end ==================================
2024-12-04 22:58:23,571:INFO:Creating metrics dataframe
2024-12-04 22:58:23,574:INFO:Initializing Extra Trees Classifier
2024-12-04 22:58:23,574:INFO:Total runtime is 1.6253670811653138 minutes
2024-12-04 22:58:23,574:INFO:SubProcess create_model() called ==================================
2024-12-04 22:58:23,574:INFO:Initializing create_model()
2024-12-04 22:58:23,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:58:23,574:INFO:Checking exceptions
2024-12-04 22:58:23,574:INFO:Importing libraries
2024-12-04 22:58:23,574:INFO:Copying training dataset
2024-12-04 22:58:23,588:INFO:Defining folds
2024-12-04 22:58:23,588:INFO:Declaring metric variables
2024-12-04 22:58:23,588:INFO:Importing untrained model
2024-12-04 22:58:23,588:INFO:Extra Trees Classifier Imported successfully
2024-12-04 22:58:23,589:INFO:Starting cross validation
2024-12-04 22:58:23,590:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:58:27,448:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,462:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,487:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,493:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,495:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,501:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,504:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,508:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,515:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,520:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,521:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,540:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,650:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,663:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,668:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,682:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,683:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,684:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,705:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,708:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,723:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,851:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,864:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:27,879:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:28,734:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:28,754:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:28,770:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:29,004:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:29,018:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:29,034:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:29,060:INFO:Calculating mean and std
2024-12-04 22:58:29,061:INFO:Creating metrics dataframe
2024-12-04 22:58:29,066:INFO:Uploading results into container
2024-12-04 22:58:29,067:INFO:Uploading model into container now
2024-12-04 22:58:29,068:INFO:_master_model_container: 12
2024-12-04 22:58:29,068:INFO:_display_container: 2
2024-12-04 22:58:29,069:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=5192, verbose=0,
                     warm_start=False)
2024-12-04 22:58:29,069:INFO:create_model() successfully completed......................................
2024-12-04 22:58:29,176:INFO:SubProcess create_model() end ==================================
2024-12-04 22:58:29,177:INFO:Creating metrics dataframe
2024-12-04 22:58:29,182:INFO:Initializing Extreme Gradient Boosting
2024-12-04 22:58:29,182:INFO:Total runtime is 1.7188226858774822 minutes
2024-12-04 22:58:29,182:INFO:SubProcess create_model() called ==================================
2024-12-04 22:58:29,183:INFO:Initializing create_model()
2024-12-04 22:58:29,183:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:58:29,183:INFO:Checking exceptions
2024-12-04 22:58:29,183:INFO:Importing libraries
2024-12-04 22:58:29,183:INFO:Copying training dataset
2024-12-04 22:58:29,209:INFO:Defining folds
2024-12-04 22:58:29,209:INFO:Declaring metric variables
2024-12-04 22:58:29,210:INFO:Importing untrained model
2024-12-04 22:58:29,211:INFO:Extreme Gradient Boosting Imported successfully
2024-12-04 22:58:29,211:INFO:Starting cross validation
2024-12-04 22:58:29,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:58:55,011:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,028:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,042:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,359:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,375:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,388:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,429:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,441:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,453:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,455:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,458:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,470:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,472:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,483:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:55,484:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:56,564:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:56,577:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:56,588:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:56,762:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:56,771:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:56,781:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:56,812:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:56,820:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:58:56,828:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:09,822:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:09,831:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:09,836:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:09,977:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:09,982:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:09,987:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:10,002:INFO:Calculating mean and std
2024-12-04 22:59:10,003:INFO:Creating metrics dataframe
2024-12-04 22:59:10,005:INFO:Uploading results into container
2024-12-04 22:59:10,005:INFO:Uploading model into container now
2024-12-04 22:59:10,006:INFO:_master_model_container: 13
2024-12-04 22:59:10,006:INFO:_display_container: 2
2024-12-04 22:59:10,006:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic',
              predictor=None, random_state=5192, reg_alpha=None, ...)
2024-12-04 22:59:10,007:INFO:create_model() successfully completed......................................
2024-12-04 22:59:10,075:INFO:SubProcess create_model() end ==================================
2024-12-04 22:59:10,075:INFO:Creating metrics dataframe
2024-12-04 22:59:10,078:INFO:Initializing Light Gradient Boosting Machine
2024-12-04 22:59:10,078:INFO:Total runtime is 2.400428700447083 minutes
2024-12-04 22:59:10,078:INFO:SubProcess create_model() called ==================================
2024-12-04 22:59:10,078:INFO:Initializing create_model()
2024-12-04 22:59:10,078:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:59:10,078:INFO:Checking exceptions
2024-12-04 22:59:10,078:INFO:Importing libraries
2024-12-04 22:59:10,078:INFO:Copying training dataset
2024-12-04 22:59:10,092:INFO:Defining folds
2024-12-04 22:59:10,092:INFO:Declaring metric variables
2024-12-04 22:59:10,092:INFO:Importing untrained model
2024-12-04 22:59:10,093:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-04 22:59:10,093:INFO:Starting cross validation
2024-12-04 22:59:10,094:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:59:17,084:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,098:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,146:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,161:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,176:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,356:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,381:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,393:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,426:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,440:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,451:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,620:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,633:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,646:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,668:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,682:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:17,694:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:18,487:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:18,497:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:18,504:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:18,511:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:18,515:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:18,526:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,000:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,020:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,037:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,079:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,090:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,101:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,124:INFO:Calculating mean and std
2024-12-04 22:59:20,125:INFO:Creating metrics dataframe
2024-12-04 22:59:20,127:INFO:Uploading results into container
2024-12-04 22:59:20,128:INFO:Uploading model into container now
2024-12-04 22:59:20,129:INFO:_master_model_container: 14
2024-12-04 22:59:20,129:INFO:_display_container: 2
2024-12-04 22:59:20,130:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5192, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-04 22:59:20,130:INFO:create_model() successfully completed......................................
2024-12-04 22:59:20,216:INFO:SubProcess create_model() end ==================================
2024-12-04 22:59:20,217:INFO:Creating metrics dataframe
2024-12-04 22:59:20,220:INFO:Initializing Dummy Classifier
2024-12-04 22:59:20,220:INFO:Total runtime is 2.5694659312566124 minutes
2024-12-04 22:59:20,220:INFO:SubProcess create_model() called ==================================
2024-12-04 22:59:20,220:INFO:Initializing create_model()
2024-12-04 22:59:20,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024E82C5DE90>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:59:20,220:INFO:Checking exceptions
2024-12-04 22:59:20,220:INFO:Importing libraries
2024-12-04 22:59:20,220:INFO:Copying training dataset
2024-12-04 22:59:20,237:INFO:Defining folds
2024-12-04 22:59:20,237:INFO:Declaring metric variables
2024-12-04 22:59:20,237:INFO:Importing untrained model
2024-12-04 22:59:20,237:INFO:Dummy Classifier Imported successfully
2024-12-04 22:59:20,238:INFO:Starting cross validation
2024-12-04 22:59:20,238:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 22:59:20,347:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,350:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,359:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,361:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,365:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,368:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:59:20,372:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,373:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:59:20,376:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,379:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,380:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:59:20,384:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,387:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,391:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,399:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,402:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,407:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,413:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:59:20,415:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,416:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,417:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,419:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,425:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:59:20,432:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,433:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,433:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:59:20,433:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,439:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,441:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:59:20,441:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:59:20,446:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,447:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,461:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,471:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,475:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,480:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:59:20,483:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,484:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,490:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 22:59:20,494:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:20,507:INFO:Calculating mean and std
2024-12-04 22:59:20,508:INFO:Creating metrics dataframe
2024-12-04 22:59:20,510:INFO:Uploading results into container
2024-12-04 22:59:20,510:INFO:Uploading model into container now
2024-12-04 22:59:20,511:INFO:_master_model_container: 15
2024-12-04 22:59:20,511:INFO:_display_container: 2
2024-12-04 22:59:20,511:INFO:DummyClassifier(constant=None, random_state=5192, strategy='prior')
2024-12-04 22:59:20,511:INFO:create_model() successfully completed......................................
2024-12-04 22:59:20,576:INFO:SubProcess create_model() end ==================================
2024-12-04 22:59:20,577:INFO:Creating metrics dataframe
2024-12-04 22:59:20,599:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-04 22:59:20,601:INFO:Initializing create_model()
2024-12-04 22:59:20,601:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5192), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 22:59:20,601:INFO:Checking exceptions
2024-12-04 22:59:20,601:INFO:Importing libraries
2024-12-04 22:59:20,601:INFO:Copying training dataset
2024-12-04 22:59:20,615:INFO:Defining folds
2024-12-04 22:59:20,615:INFO:Declaring metric variables
2024-12-04 22:59:20,616:INFO:Importing untrained model
2024-12-04 22:59:20,616:INFO:Declaring custom model
2024-12-04 22:59:20,616:INFO:Ada Boost Classifier Imported successfully
2024-12-04 22:59:20,617:INFO:Cross validation set to False
2024-12-04 22:59:20,617:INFO:Fitting Model
2024-12-04 22:59:20,650:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 22:59:21,706:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5192)
2024-12-04 22:59:21,706:INFO:create_model() successfully completed......................................
2024-12-04 22:59:21,774:INFO:_master_model_container: 15
2024-12-04 22:59:21,774:INFO:_display_container: 2
2024-12-04 22:59:21,774:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5192)
2024-12-04 22:59:21,774:INFO:compare_models() successfully completed......................................
2024-12-04 22:59:21,775:INFO:Initializing evaluate_model()
2024-12-04 22:59:21,775:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5192), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-12-04 22:59:21,949:INFO:Initializing plot_model()
2024-12-04 22:59:21,949:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5192), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-12-04 22:59:21,950:INFO:Checking exceptions
2024-12-04 22:59:21,957:INFO:Preloading libraries
2024-12-04 22:59:21,961:INFO:Copying training dataset
2024-12-04 22:59:21,961:INFO:Plot type: pipeline
2024-12-04 22:59:22,627:INFO:Visual Rendered Successfully
2024-12-04 22:59:22,715:INFO:plot_model() successfully completed......................................
2024-12-04 22:59:22,716:INFO:Initializing plot_model()
2024-12-04 22:59:22,716:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5192), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 22:59:22,716:INFO:Checking exceptions
2024-12-04 22:59:22,726:INFO:Preloading libraries
2024-12-04 22:59:22,731:INFO:Copying training dataset
2024-12-04 22:59:22,731:INFO:Plot type: auc
2024-12-04 22:59:22,918:INFO:Fitting Model
2024-12-04 22:59:22,921:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but AdaBoostClassifier was fitted with feature names
  warnings.warn(

2024-12-04 22:59:22,922:INFO:Scoring test/hold-out set
2024-12-04 22:59:23,341:INFO:Visual Rendered Successfully
2024-12-04 22:59:23,411:INFO:plot_model() successfully completed......................................
2024-12-04 22:59:23,412:INFO:Initializing plot_model()
2024-12-04 22:59:23,412:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5192), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 22:59:23,412:INFO:Checking exceptions
2024-12-04 22:59:23,417:INFO:Preloading libraries
2024-12-04 22:59:23,421:INFO:Copying training dataset
2024-12-04 22:59:23,421:INFO:Plot type: confusion_matrix
2024-12-04 22:59:23,577:INFO:Fitting Model
2024-12-04 22:59:23,578:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but AdaBoostClassifier was fitted with feature names
  warnings.warn(

2024-12-04 22:59:23,578:INFO:Scoring test/hold-out set
2024-12-04 22:59:24,404:INFO:Visual Rendered Successfully
2024-12-04 22:59:24,472:INFO:plot_model() successfully completed......................................
2024-12-04 22:59:24,472:INFO:Initializing predict_model()
2024-12-04 22:59:24,472:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5192), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024E8139C680>)
2024-12-04 22:59:24,472:INFO:Checking exceptions
2024-12-04 22:59:24,473:INFO:Preloading libraries
2024-12-04 22:59:24,636:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:24,653:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:24,677:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:24,786:INFO:Initializing predict_model()
2024-12-04 22:59:24,786:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024E8138A350>, estimator=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5192), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024E8139C680>)
2024-12-04 22:59:24,786:INFO:Checking exceptions
2024-12-04 22:59:24,787:INFO:Preloading libraries
2024-12-04 22:59:24,787:INFO:Set up data.
2024-12-04 22:59:24,800:INFO:Set up index.
2024-12-04 22:59:24,928:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:24,958:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:24,988:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 22:59:25,100:INFO:Initializing save_model()
2024-12-04 22:59:25,100:INFO:save_model(model=AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=5192), model_name=Airflow/models/my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-12-04 22:59:25,100:INFO:Adding model into prep_pipe
2024-12-04 22:59:25,117:INFO:Airflow/models/my_best_pipeline.pkl saved in current working directory
2024-12-04 22:59:25,121:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnicity', 'Family_History',
                                             'Comorbidity_Diabet...
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 AdaBoostClassifier(algorithm='SAMME.R', estimator=None,
                                    learning_rate=1.0, n_estimators=50,
                                    random_state=5192))],
         verbose=False)
2024-12-04 22:59:25,122:INFO:save_model() successfully completed......................................
2024-12-04 23:02:20,107:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:02:20,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:02:20,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:02:20,108:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:02:22,063:INFO:PyCaret ClassificationExperiment
2024-12-04 23:02:22,063:INFO:Logging name: clf-default-name
2024-12-04 23:02:22,063:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-04 23:02:22,063:INFO:version 3.3.2
2024-12-04 23:02:22,063:INFO:Initializing setup()
2024-12-04 23:02:22,063:INFO:self.USI: f678
2024-12-04 23:02:22,063:INFO:self._variable_keys: {'exp_id', 'html_param', 'gpu_n_jobs_param', 'log_plots_param', 'is_multiclass', 'X', 'fold_generator', 'fold_shuffle_param', 'USI', 'n_jobs_param', 'seed', 'exp_name_log', 'pipeline', '_available_plots', 'y_train', 'y', 'y_test', 'gpu_param', 'logging_param', 'fold_groups_param', 'target_param', 'data', 'memory', '_ml_usecase', 'X_train', 'fix_imbalance', 'X_test', 'idx'}
2024-12-04 23:02:22,063:INFO:Checking environment
2024-12-04 23:02:22,063:INFO:python_version: 3.11.9
2024-12-04 23:02:22,063:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-12-04 23:02:22,063:INFO:machine: AMD64
2024-12-04 23:02:22,098:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-04 23:02:22,106:INFO:Memory: svmem(total=8345964544, available=791408640, percent=90.5, used=7554555904, free=791408640)
2024-12-04 23:02:22,107:INFO:Physical Core: 4
2024-12-04 23:02:22,107:INFO:Logical Core: 8
2024-12-04 23:02:22,107:INFO:Checking libraries
2024-12-04 23:02:22,107:INFO:System:
2024-12-04 23:02:22,107:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-12-04 23:02:22,107:INFO:executable: C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Scripts\python.exe
2024-12-04 23:02:22,107:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-04 23:02:22,107:INFO:PyCaret required dependencies:
2024-12-04 23:02:22,155:INFO:                 pip: 24.3.1
2024-12-04 23:02:22,156:INFO:          setuptools: 68.2.0
2024-12-04 23:02:22,156:INFO:             pycaret: 3.3.2
2024-12-04 23:02:22,156:INFO:             IPython: 8.29.0
2024-12-04 23:02:22,156:INFO:          ipywidgets: 8.1.5
2024-12-04 23:02:22,156:INFO:                tqdm: 4.67.0
2024-12-04 23:02:22,156:INFO:               numpy: 1.26.4
2024-12-04 23:02:22,156:INFO:              pandas: 2.1.4
2024-12-04 23:02:22,156:INFO:              jinja2: 3.1.4
2024-12-04 23:02:22,156:INFO:               scipy: 1.11.4
2024-12-04 23:02:22,156:INFO:              joblib: 1.3.2
2024-12-04 23:02:22,156:INFO:             sklearn: 1.4.2
2024-12-04 23:02:22,156:INFO:                pyod: 2.0.2
2024-12-04 23:02:22,156:INFO:            imblearn: 0.12.4
2024-12-04 23:02:22,156:INFO:   category_encoders: 2.6.4
2024-12-04 23:02:22,156:INFO:            lightgbm: 4.5.0
2024-12-04 23:02:22,156:INFO:               numba: 0.60.0
2024-12-04 23:02:22,156:INFO:            requests: 2.32.3
2024-12-04 23:02:22,156:INFO:          matplotlib: 3.7.5
2024-12-04 23:02:22,156:INFO:          scikitplot: 0.3.7
2024-12-04 23:02:22,156:INFO:         yellowbrick: 1.5
2024-12-04 23:02:22,156:INFO:              plotly: 5.24.1
2024-12-04 23:02:22,156:INFO:    plotly-resampler: Not installed
2024-12-04 23:02:22,156:INFO:             kaleido: 0.2.1
2024-12-04 23:02:22,156:INFO:           schemdraw: 0.15
2024-12-04 23:02:22,156:INFO:         statsmodels: 0.14.4
2024-12-04 23:02:22,156:INFO:              sktime: 0.26.0
2024-12-04 23:02:22,156:INFO:               tbats: 1.1.3
2024-12-04 23:02:22,156:INFO:            pmdarima: 2.0.4
2024-12-04 23:02:22,156:INFO:              psutil: 6.1.0
2024-12-04 23:02:22,157:INFO:          markupsafe: 2.1.5
2024-12-04 23:02:22,157:INFO:             pickle5: Not installed
2024-12-04 23:02:22,157:INFO:         cloudpickle: 3.1.0
2024-12-04 23:02:22,157:INFO:         deprecation: 2.1.0
2024-12-04 23:02:22,157:INFO:              xxhash: 3.5.0
2024-12-04 23:02:22,157:INFO:           wurlitzer: Not installed
2024-12-04 23:02:22,157:INFO:PyCaret optional dependencies:
2024-12-04 23:02:22,179:INFO:                shap: Not installed
2024-12-04 23:02:22,179:INFO:           interpret: Not installed
2024-12-04 23:02:22,179:INFO:                umap: Not installed
2024-12-04 23:02:22,179:INFO:     ydata_profiling: Not installed
2024-12-04 23:02:22,179:INFO:  explainerdashboard: Not installed
2024-12-04 23:02:22,179:INFO:             autoviz: 0.1.905
2024-12-04 23:02:22,179:INFO:           fairlearn: Not installed
2024-12-04 23:02:22,179:INFO:          deepchecks: Not installed
2024-12-04 23:02:22,179:INFO:             xgboost: 1.6.2
2024-12-04 23:02:22,179:INFO:            catboost: Not installed
2024-12-04 23:02:22,179:INFO:              kmodes: Not installed
2024-12-04 23:02:22,179:INFO:             mlxtend: Not installed
2024-12-04 23:02:22,179:INFO:       statsforecast: Not installed
2024-12-04 23:02:22,179:INFO:        tune_sklearn: Not installed
2024-12-04 23:02:22,179:INFO:                 ray: Not installed
2024-12-04 23:02:22,179:INFO:            hyperopt: Not installed
2024-12-04 23:02:22,179:INFO:              optuna: Not installed
2024-12-04 23:02:22,180:INFO:               skopt: Not installed
2024-12-04 23:02:22,180:INFO:              mlflow: Not installed
2024-12-04 23:02:22,180:INFO:              gradio: Not installed
2024-12-04 23:02:22,180:INFO:             fastapi: Not installed
2024-12-04 23:02:22,180:INFO:             uvicorn: Not installed
2024-12-04 23:02:22,180:INFO:              m2cgen: Not installed
2024-12-04 23:02:22,180:INFO:           evidently: Not installed
2024-12-04 23:02:22,180:INFO:               fugue: Not installed
2024-12-04 23:02:22,180:INFO:           streamlit: Not installed
2024-12-04 23:02:22,180:INFO:             prophet: Not installed
2024-12-04 23:02:22,180:INFO:None
2024-12-04 23:02:22,180:INFO:Set up data.
2024-12-04 23:02:22,207:INFO:Set up folding strategy.
2024-12-04 23:02:22,207:INFO:Set up train/test split.
2024-12-04 23:02:22,233:INFO:Set up index.
2024-12-04 23:02:22,234:INFO:Assigning column types.
2024-12-04 23:02:22,245:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-04 23:02:22,299:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 23:02:22,302:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:02:22,343:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:02:22,783:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:02:22,826:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 23:02:22,826:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:02:22,855:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:02:22,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:02:22,858:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-04 23:02:22,905:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:02:22,934:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:02:22,937:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:02:22,985:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:02:23,013:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:02:23,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:02:23,016:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-04 23:02:23,093:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:02:23,095:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:02:23,171:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:02:23,175:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:02:23,178:INFO:Preparing preprocessing pipeline...
2024-12-04 23:02:23,183:INFO:Set up label encoding.
2024-12-04 23:02:23,183:INFO:Set up simple imputation.
2024-12-04 23:02:23,234:INFO:Finished creating preprocessing pipeline.
2024-12-04 23:02:23,239:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-04 23:02:23,239:INFO:Creating final display dataframe.
2024-12-04 23:02:23,382:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               8677
1                        Target                                          Treatment
2                   Target type                                         Multiclass
3                Target mapping  Chemotherapy: 0, Radiation Therapy: 1, Surgery...
4           Original data shape                                        (11592, 36)
5        Transformed data shape                                        (11592, 36)
6   Transformed train set shape                                         (8114, 36)
7    Transformed test set shape                                         (3478, 36)
8              Numeric features                                                 35
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               f678
2024-12-04 23:02:23,451:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:02:23,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:02:23,529:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:02:23,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:02:23,533:INFO:setup() successfully completed in 1.48s...............
2024-12-04 23:02:23,533:INFO:Initializing compare_models()
2024-12-04 23:02:23,533:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-12-04 23:02:23,534:INFO:Checking exceptions
2024-12-04 23:02:23,545:INFO:Preparing display monitor
2024-12-04 23:02:23,551:INFO:Initializing Logistic Regression
2024-12-04 23:02:23,551:INFO:Total runtime is 1.608133316040039e-05 minutes
2024-12-04 23:02:23,551:INFO:SubProcess create_model() called ==================================
2024-12-04 23:02:23,551:INFO:Initializing create_model()
2024-12-04 23:02:23,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:02:23,551:INFO:Checking exceptions
2024-12-04 23:02:23,551:INFO:Importing libraries
2024-12-04 23:02:23,551:INFO:Copying training dataset
2024-12-04 23:02:23,568:INFO:Defining folds
2024-12-04 23:02:23,568:INFO:Declaring metric variables
2024-12-04 23:02:23,568:INFO:Importing untrained model
2024-12-04 23:02:23,568:INFO:Logistic Regression Imported successfully
2024-12-04 23:02:23,568:INFO:Starting cross validation
2024-12-04 23:02:23,569:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:02:32,949:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:32,953:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:32,958:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:32,962:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:32,963:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:32,972:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:32,974:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:32,978:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:32,979:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:32,982:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:32,985:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:32,986:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:32,992:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:32,993:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:32,993:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,001:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,008:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,018:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,023:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,032:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,046:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:33,056:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,075:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,090:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,132:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:33,141:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,154:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,173:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,314:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:33,318:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,322:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:33,326:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,336:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:33,338:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,339:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,342:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,349:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,349:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,356:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:33,369:INFO:Calculating mean and std
2024-12-04 23:02:33,371:INFO:Creating metrics dataframe
2024-12-04 23:02:33,375:INFO:Uploading results into container
2024-12-04 23:02:33,375:INFO:Uploading model into container now
2024-12-04 23:02:33,376:INFO:_master_model_container: 1
2024-12-04 23:02:33,376:INFO:_display_container: 2
2024-12-04 23:02:33,377:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8677, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-04 23:02:33,377:INFO:create_model() successfully completed......................................
2024-12-04 23:02:33,460:INFO:SubProcess create_model() end ==================================
2024-12-04 23:02:33,460:INFO:Creating metrics dataframe
2024-12-04 23:02:33,463:INFO:Initializing K Neighbors Classifier
2024-12-04 23:02:33,463:INFO:Total runtime is 0.16522674957911174 minutes
2024-12-04 23:02:33,464:INFO:SubProcess create_model() called ==================================
2024-12-04 23:02:33,464:INFO:Initializing create_model()
2024-12-04 23:02:33,464:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:02:33,464:INFO:Checking exceptions
2024-12-04 23:02:33,464:INFO:Importing libraries
2024-12-04 23:02:33,464:INFO:Copying training dataset
2024-12-04 23:02:33,477:INFO:Defining folds
2024-12-04 23:02:33,477:INFO:Declaring metric variables
2024-12-04 23:02:33,477:INFO:Importing untrained model
2024-12-04 23:02:33,477:INFO:K Neighbors Classifier Imported successfully
2024-12-04 23:02:33,478:INFO:Starting cross validation
2024-12-04 23:02:33,478:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:02:34,169:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,170:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,183:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,195:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,212:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,227:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,243:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,255:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,261:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,270:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,276:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,280:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,288:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,295:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,296:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,308:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,308:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,309:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,324:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,326:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,336:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,438:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,446:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,456:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,469:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,477:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,485:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,509:INFO:Calculating mean and std
2024-12-04 23:02:34,509:INFO:Creating metrics dataframe
2024-12-04 23:02:34,512:INFO:Uploading results into container
2024-12-04 23:02:34,512:INFO:Uploading model into container now
2024-12-04 23:02:34,513:INFO:_master_model_container: 2
2024-12-04 23:02:34,513:INFO:_display_container: 2
2024-12-04 23:02:34,513:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-04 23:02:34,514:INFO:create_model() successfully completed......................................
2024-12-04 23:02:34,601:INFO:SubProcess create_model() end ==================================
2024-12-04 23:02:34,602:INFO:Creating metrics dataframe
2024-12-04 23:02:34,607:INFO:Initializing Naive Bayes
2024-12-04 23:02:34,608:INFO:Total runtime is 0.18429634968439737 minutes
2024-12-04 23:02:34,608:INFO:SubProcess create_model() called ==================================
2024-12-04 23:02:34,608:INFO:Initializing create_model()
2024-12-04 23:02:34,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:02:34,609:INFO:Checking exceptions
2024-12-04 23:02:34,609:INFO:Importing libraries
2024-12-04 23:02:34,609:INFO:Copying training dataset
2024-12-04 23:02:34,636:INFO:Defining folds
2024-12-04 23:02:34,636:INFO:Declaring metric variables
2024-12-04 23:02:34,636:INFO:Importing untrained model
2024-12-04 23:02:34,636:INFO:Naive Bayes Imported successfully
2024-12-04 23:02:34,637:INFO:Starting cross validation
2024-12-04 23:02:34,638:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:02:34,779:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,789:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,793:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,795:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,806:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,806:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,813:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,817:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,817:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,820:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,825:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,825:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,829:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,830:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,839:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,841:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,843:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,855:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,857:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,859:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,873:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,887:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,912:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,912:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,919:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,920:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,927:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,928:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:34,948:INFO:Calculating mean and std
2024-12-04 23:02:34,948:INFO:Creating metrics dataframe
2024-12-04 23:02:34,950:INFO:Uploading results into container
2024-12-04 23:02:34,951:INFO:Uploading model into container now
2024-12-04 23:02:34,951:INFO:_master_model_container: 3
2024-12-04 23:02:34,951:INFO:_display_container: 2
2024-12-04 23:02:34,951:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 23:02:34,951:INFO:create_model() successfully completed......................................
2024-12-04 23:02:35,011:INFO:SubProcess create_model() end ==================================
2024-12-04 23:02:35,011:INFO:Creating metrics dataframe
2024-12-04 23:02:35,014:INFO:Initializing Decision Tree Classifier
2024-12-04 23:02:35,014:INFO:Total runtime is 0.1910662770271301 minutes
2024-12-04 23:02:35,014:INFO:SubProcess create_model() called ==================================
2024-12-04 23:02:35,014:INFO:Initializing create_model()
2024-12-04 23:02:35,014:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:02:35,014:INFO:Checking exceptions
2024-12-04 23:02:35,014:INFO:Importing libraries
2024-12-04 23:02:35,014:INFO:Copying training dataset
2024-12-04 23:02:35,027:INFO:Defining folds
2024-12-04 23:02:35,028:INFO:Declaring metric variables
2024-12-04 23:02:35,028:INFO:Importing untrained model
2024-12-04 23:02:35,028:INFO:Decision Tree Classifier Imported successfully
2024-12-04 23:02:35,028:INFO:Starting cross validation
2024-12-04 23:02:35,029:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:02:35,760:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,762:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,771:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,777:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,783:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,790:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,816:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,820:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,826:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,831:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,839:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,844:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,935:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,940:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,947:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,953:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,959:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,967:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,968:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,981:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,987:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,993:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:35,999:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:36,011:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:36,319:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:36,329:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:36,338:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:36,348:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:36,356:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:36,363:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:36,384:INFO:Calculating mean and std
2024-12-04 23:02:36,384:INFO:Creating metrics dataframe
2024-12-04 23:02:36,386:INFO:Uploading results into container
2024-12-04 23:02:36,387:INFO:Uploading model into container now
2024-12-04 23:02:36,387:INFO:_master_model_container: 4
2024-12-04 23:02:36,387:INFO:_display_container: 2
2024-12-04 23:02:36,388:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=8677, splitter='best')
2024-12-04 23:02:36,388:INFO:create_model() successfully completed......................................
2024-12-04 23:02:36,453:INFO:SubProcess create_model() end ==================================
2024-12-04 23:02:36,454:INFO:Creating metrics dataframe
2024-12-04 23:02:36,457:INFO:Initializing SVM - Linear Kernel
2024-12-04 23:02:36,457:INFO:Total runtime is 0.21511266628901163 minutes
2024-12-04 23:02:36,457:INFO:SubProcess create_model() called ==================================
2024-12-04 23:02:36,457:INFO:Initializing create_model()
2024-12-04 23:02:36,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:02:36,458:INFO:Checking exceptions
2024-12-04 23:02:36,458:INFO:Importing libraries
2024-12-04 23:02:36,458:INFO:Copying training dataset
2024-12-04 23:02:36,480:INFO:Defining folds
2024-12-04 23:02:36,480:INFO:Declaring metric variables
2024-12-04 23:02:36,481:INFO:Importing untrained model
2024-12-04 23:02:36,481:INFO:SVM - Linear Kernel Imported successfully
2024-12-04 23:02:36,482:INFO:Starting cross validation
2024-12-04 23:02:36,483:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:02:37,654:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:37,659:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,671:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,672:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:37,678:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,691:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:37,705:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,705:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,718:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:37,724:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,729:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,738:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,748:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,750:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,762:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,788:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:37,793:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,812:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,826:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,853:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:37,859:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,870:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:37,881:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:38,267:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:38,272:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:38,283:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:38,326:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:38,413:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:38,418:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:38,457:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:38,468:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:38,695:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:38,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:38,701:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:38,704:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:38,704:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:38,711:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:38,711:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:38,718:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:38,730:INFO:Calculating mean and std
2024-12-04 23:02:38,731:INFO:Creating metrics dataframe
2024-12-04 23:02:38,732:INFO:Uploading results into container
2024-12-04 23:02:38,733:INFO:Uploading model into container now
2024-12-04 23:02:38,733:INFO:_master_model_container: 5
2024-12-04 23:02:38,733:INFO:_display_container: 2
2024-12-04 23:02:38,734:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8677, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-04 23:02:38,734:INFO:create_model() successfully completed......................................
2024-12-04 23:02:38,793:INFO:SubProcess create_model() end ==================================
2024-12-04 23:02:38,793:INFO:Creating metrics dataframe
2024-12-04 23:02:38,795:INFO:Initializing Ridge Classifier
2024-12-04 23:02:38,796:INFO:Total runtime is 0.254103954633077 minutes
2024-12-04 23:02:38,796:INFO:SubProcess create_model() called ==================================
2024-12-04 23:02:38,796:INFO:Initializing create_model()
2024-12-04 23:02:38,796:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:02:38,796:INFO:Checking exceptions
2024-12-04 23:02:38,796:INFO:Importing libraries
2024-12-04 23:02:38,796:INFO:Copying training dataset
2024-12-04 23:02:38,809:INFO:Defining folds
2024-12-04 23:02:38,809:INFO:Declaring metric variables
2024-12-04 23:02:38,809:INFO:Importing untrained model
2024-12-04 23:02:38,809:INFO:Ridge Classifier Imported successfully
2024-12-04 23:02:38,809:INFO:Starting cross validation
2024-12-04 23:02:38,810:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:02:40,795:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:40,795:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:40,795:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:40,797:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:40,799:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:40,800:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,800:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,801:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,801:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,801:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,804:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,808:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,808:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,808:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,810:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,813:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,813:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,817:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:40,817:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,818:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,820:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,820:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,821:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,821:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,822:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,830:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,833:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,839:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,847:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,881:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:40,883:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:40,884:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,886:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,890:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,891:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,897:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,898:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:40,915:INFO:Calculating mean and std
2024-12-04 23:02:40,916:INFO:Creating metrics dataframe
2024-12-04 23:02:40,917:INFO:Uploading results into container
2024-12-04 23:02:40,917:INFO:Uploading model into container now
2024-12-04 23:02:40,918:INFO:_master_model_container: 6
2024-12-04 23:02:40,918:INFO:_display_container: 2
2024-12-04 23:02:40,918:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8677, solver='auto',
                tol=0.0001)
2024-12-04 23:02:40,918:INFO:create_model() successfully completed......................................
2024-12-04 23:02:40,975:INFO:SubProcess create_model() end ==================================
2024-12-04 23:02:40,975:INFO:Creating metrics dataframe
2024-12-04 23:02:40,978:INFO:Initializing Random Forest Classifier
2024-12-04 23:02:40,978:INFO:Total runtime is 0.2904627958933512 minutes
2024-12-04 23:02:40,978:INFO:SubProcess create_model() called ==================================
2024-12-04 23:02:40,978:INFO:Initializing create_model()
2024-12-04 23:02:40,978:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:02:40,978:INFO:Checking exceptions
2024-12-04 23:02:40,978:INFO:Importing libraries
2024-12-04 23:02:40,978:INFO:Copying training dataset
2024-12-04 23:02:40,991:INFO:Defining folds
2024-12-04 23:02:40,991:INFO:Declaring metric variables
2024-12-04 23:02:40,991:INFO:Importing untrained model
2024-12-04 23:02:40,991:INFO:Random Forest Classifier Imported successfully
2024-12-04 23:02:40,991:INFO:Starting cross validation
2024-12-04 23:02:40,992:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:02:48,193:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,198:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,200:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,205:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,209:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,210:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,212:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,225:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,228:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,231:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,233:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,237:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,245:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,247:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,260:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,331:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,343:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,348:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,357:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,360:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,374:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,418:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,430:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:48,503:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:50,314:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:50,320:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:50,329:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:50,331:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:50,338:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:50,347:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:50,362:INFO:Calculating mean and std
2024-12-04 23:02:50,362:INFO:Creating metrics dataframe
2024-12-04 23:02:50,365:INFO:Uploading results into container
2024-12-04 23:02:50,365:INFO:Uploading model into container now
2024-12-04 23:02:50,366:INFO:_master_model_container: 7
2024-12-04 23:02:50,366:INFO:_display_container: 2
2024-12-04 23:02:50,367:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=8677, verbose=0,
                       warm_start=False)
2024-12-04 23:02:50,367:INFO:create_model() successfully completed......................................
2024-12-04 23:02:50,436:INFO:SubProcess create_model() end ==================================
2024-12-04 23:02:50,436:INFO:Creating metrics dataframe
2024-12-04 23:02:50,439:INFO:Initializing Quadratic Discriminant Analysis
2024-12-04 23:02:50,439:INFO:Total runtime is 0.4481470386187235 minutes
2024-12-04 23:02:50,439:INFO:SubProcess create_model() called ==================================
2024-12-04 23:02:50,439:INFO:Initializing create_model()
2024-12-04 23:02:50,439:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:02:50,439:INFO:Checking exceptions
2024-12-04 23:02:50,440:INFO:Importing libraries
2024-12-04 23:02:50,440:INFO:Copying training dataset
2024-12-04 23:02:50,455:INFO:Defining folds
2024-12-04 23:02:50,456:INFO:Declaring metric variables
2024-12-04 23:02:50,456:INFO:Importing untrained model
2024-12-04 23:02:50,456:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-04 23:02:50,456:INFO:Starting cross validation
2024-12-04 23:02:50,457:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:02:51,835:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:51,835:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:51,836:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:51,837:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:51,838:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:51,839:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,841:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,841:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,841:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,842:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,847:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,850:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,850:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,851:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,852:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,852:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,853:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,857:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,858:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:51,860:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,861:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,862:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,863:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,863:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,868:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,871:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,875:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,889:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,933:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:51,935:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,938:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:51,941:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,941:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,946:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,948:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,952:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:51,964:INFO:Calculating mean and std
2024-12-04 23:02:51,965:INFO:Creating metrics dataframe
2024-12-04 23:02:51,966:INFO:Uploading results into container
2024-12-04 23:02:51,967:INFO:Uploading model into container now
2024-12-04 23:02:51,967:INFO:_master_model_container: 8
2024-12-04 23:02:51,967:INFO:_display_container: 2
2024-12-04 23:02:51,967:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-04 23:02:51,968:INFO:create_model() successfully completed......................................
2024-12-04 23:02:52,027:INFO:SubProcess create_model() end ==================================
2024-12-04 23:02:52,027:INFO:Creating metrics dataframe
2024-12-04 23:02:52,029:INFO:Initializing Ada Boost Classifier
2024-12-04 23:02:52,029:INFO:Total runtime is 0.47465871572494506 minutes
2024-12-04 23:02:52,029:INFO:SubProcess create_model() called ==================================
2024-12-04 23:02:52,029:INFO:Initializing create_model()
2024-12-04 23:02:52,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:02:52,029:INFO:Checking exceptions
2024-12-04 23:02:52,030:INFO:Importing libraries
2024-12-04 23:02:52,030:INFO:Copying training dataset
2024-12-04 23:02:52,042:INFO:Defining folds
2024-12-04 23:02:52,042:INFO:Declaring metric variables
2024-12-04 23:02:52,042:INFO:Importing untrained model
2024-12-04 23:02:52,043:INFO:Ada Boost Classifier Imported successfully
2024-12-04 23:02:52,043:INFO:Starting cross validation
2024-12-04 23:02:52,044:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:02:52,186:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:02:52,186:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:02:52,186:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:02:52,187:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:02:52,187:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:02:52,187:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:02:54,126:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:54,131:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,135:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:54,140:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:54,144:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,145:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,147:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,161:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,164:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,173:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,178:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,236:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:02:54,243:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:02:54,493:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:54,499:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,514:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,515:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:54,515:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:54,518:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:54,520:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,521:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,523:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,527:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,527:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:54,533:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,533:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,534:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,535:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,547:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,547:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,548:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,549:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:54,560:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:55,541:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:55,544:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:55,548:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:02:55,552:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:55,552:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:55,558:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:55,560:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:55,566:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:02:55,579:INFO:Calculating mean and std
2024-12-04 23:02:55,580:INFO:Creating metrics dataframe
2024-12-04 23:02:55,581:INFO:Uploading results into container
2024-12-04 23:02:55,582:INFO:Uploading model into container now
2024-12-04 23:02:55,582:INFO:_master_model_container: 9
2024-12-04 23:02:55,582:INFO:_display_container: 2
2024-12-04 23:02:55,582:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=8677)
2024-12-04 23:02:55,583:INFO:create_model() successfully completed......................................
2024-12-04 23:02:55,648:INFO:SubProcess create_model() end ==================================
2024-12-04 23:02:55,648:INFO:Creating metrics dataframe
2024-12-04 23:02:55,650:INFO:Initializing Gradient Boosting Classifier
2024-12-04 23:02:55,650:INFO:Total runtime is 0.5349948883056641 minutes
2024-12-04 23:02:55,650:INFO:SubProcess create_model() called ==================================
2024-12-04 23:02:55,651:INFO:Initializing create_model()
2024-12-04 23:02:55,651:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:02:55,651:INFO:Checking exceptions
2024-12-04 23:02:55,651:INFO:Importing libraries
2024-12-04 23:02:55,651:INFO:Copying training dataset
2024-12-04 23:02:55,671:INFO:Defining folds
2024-12-04 23:02:55,671:INFO:Declaring metric variables
2024-12-04 23:02:55,671:INFO:Importing untrained model
2024-12-04 23:02:55,672:INFO:Gradient Boosting Classifier Imported successfully
2024-12-04 23:02:55,672:INFO:Starting cross validation
2024-12-04 23:02:55,673:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:03:30,129:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:03:30,135:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:30,148:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:30,174:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:30,547:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:03:30,552:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:30,568:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:30,581:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:33,366:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:03:33,371:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:33,384:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:33,428:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:33,691:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:03:33,697:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:33,709:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:33,755:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:35,472:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:03:35,476:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:35,494:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:35,510:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:37,485:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:03:37,490:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:37,501:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:37,513:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:37,819:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:03:37,822:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:37,836:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:37,853:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:38,801:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:03:38,806:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:38,820:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:03:38,835:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:02,684:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:04:02,687:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:02,692:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:02,697:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,011:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:04:03,017:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,030:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,048:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,074:INFO:Calculating mean and std
2024-12-04 23:04:03,075:INFO:Creating metrics dataframe
2024-12-04 23:04:03,077:INFO:Uploading results into container
2024-12-04 23:04:03,078:INFO:Uploading model into container now
2024-12-04 23:04:03,079:INFO:_master_model_container: 10
2024-12-04 23:04:03,079:INFO:_display_container: 2
2024-12-04 23:04:03,079:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8677, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-04 23:04:03,079:INFO:create_model() successfully completed......................................
2024-12-04 23:04:03,164:INFO:SubProcess create_model() end ==================================
2024-12-04 23:04:03,164:INFO:Creating metrics dataframe
2024-12-04 23:04:03,167:INFO:Initializing Linear Discriminant Analysis
2024-12-04 23:04:03,167:INFO:Total runtime is 1.6602890491485596 minutes
2024-12-04 23:04:03,167:INFO:SubProcess create_model() called ==================================
2024-12-04 23:04:03,168:INFO:Initializing create_model()
2024-12-04 23:04:03,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:04:03,168:INFO:Checking exceptions
2024-12-04 23:04:03,168:INFO:Importing libraries
2024-12-04 23:04:03,168:INFO:Copying training dataset
2024-12-04 23:04:03,187:INFO:Defining folds
2024-12-04 23:04:03,187:INFO:Declaring metric variables
2024-12-04 23:04:03,187:INFO:Importing untrained model
2024-12-04 23:04:03,187:INFO:Linear Discriminant Analysis Imported successfully
2024-12-04 23:04:03,188:INFO:Starting cross validation
2024-12-04 23:04:03,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:04:03,337:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:04:03,339:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:04:03,339:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:04:03,339:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:04:03,343:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,343:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,344:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,344:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,351:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:04:03,352:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:04:03,353:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,354:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,354:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,355:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,357:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,358:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,358:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,363:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,365:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,366:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,366:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,368:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,369:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:04:03,369:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,369:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,374:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,381:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,387:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,390:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,399:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,443:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:04:03,446:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:04:03,447:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,450:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,453:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,458:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,459:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,465:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:03,480:INFO:Calculating mean and std
2024-12-04 23:04:03,480:INFO:Creating metrics dataframe
2024-12-04 23:04:03,482:INFO:Uploading results into container
2024-12-04 23:04:03,482:INFO:Uploading model into container now
2024-12-04 23:04:03,483:INFO:_master_model_container: 11
2024-12-04 23:04:03,483:INFO:_display_container: 2
2024-12-04 23:04:03,483:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-04 23:04:03,483:INFO:create_model() successfully completed......................................
2024-12-04 23:04:03,551:INFO:SubProcess create_model() end ==================================
2024-12-04 23:04:03,551:INFO:Creating metrics dataframe
2024-12-04 23:04:03,553:INFO:Initializing Extra Trees Classifier
2024-12-04 23:04:03,554:INFO:Total runtime is 1.6667424122492471 minutes
2024-12-04 23:04:03,554:INFO:SubProcess create_model() called ==================================
2024-12-04 23:04:03,554:INFO:Initializing create_model()
2024-12-04 23:04:03,554:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:04:03,554:INFO:Checking exceptions
2024-12-04 23:04:03,554:INFO:Importing libraries
2024-12-04 23:04:03,554:INFO:Copying training dataset
2024-12-04 23:04:03,567:INFO:Defining folds
2024-12-04 23:04:03,567:INFO:Declaring metric variables
2024-12-04 23:04:03,567:INFO:Importing untrained model
2024-12-04 23:04:03,568:INFO:Extra Trees Classifier Imported successfully
2024-12-04 23:04:03,568:INFO:Starting cross validation
2024-12-04 23:04:03,569:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:04:08,789:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,794:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,801:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,807:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,853:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,869:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,876:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,884:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,918:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,918:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,921:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,930:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,930:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,942:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,945:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,954:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,954:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,966:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,972:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,981:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:08,984:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:09,008:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:10,066:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:10,075:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:10,084:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:10,091:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:10,100:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:10,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:10,135:INFO:Calculating mean and std
2024-12-04 23:04:10,136:INFO:Creating metrics dataframe
2024-12-04 23:04:10,139:INFO:Uploading results into container
2024-12-04 23:04:10,140:INFO:Uploading model into container now
2024-12-04 23:04:10,140:INFO:_master_model_container: 12
2024-12-04 23:04:10,140:INFO:_display_container: 2
2024-12-04 23:04:10,141:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=8677, verbose=0,
                     warm_start=False)
2024-12-04 23:04:10,141:INFO:create_model() successfully completed......................................
2024-12-04 23:04:10,240:INFO:SubProcess create_model() end ==================================
2024-12-04 23:04:10,241:INFO:Creating metrics dataframe
2024-12-04 23:04:10,271:INFO:Initializing Extreme Gradient Boosting
2024-12-04 23:04:10,272:INFO:Total runtime is 1.7786991914113361 minutes
2024-12-04 23:04:10,272:INFO:SubProcess create_model() called ==================================
2024-12-04 23:04:10,272:INFO:Initializing create_model()
2024-12-04 23:04:10,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:04:10,272:INFO:Checking exceptions
2024-12-04 23:04:10,272:INFO:Importing libraries
2024-12-04 23:04:10,272:INFO:Copying training dataset
2024-12-04 23:04:10,296:INFO:Defining folds
2024-12-04 23:04:10,296:INFO:Declaring metric variables
2024-12-04 23:04:10,297:INFO:Importing untrained model
2024-12-04 23:04:10,299:INFO:Extreme Gradient Boosting Imported successfully
2024-12-04 23:04:10,299:INFO:Starting cross validation
2024-12-04 23:04:10,301:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:04:37,012:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:37,026:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:37,069:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:38,026:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:38,036:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:38,052:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:38,951:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:38,984:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:38,999:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:39,139:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:39,153:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:39,169:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:39,967:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:39,982:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:39,998:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:40,394:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:40,410:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:40,427:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:40,551:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:40,564:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:40,573:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:40,578:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:40,589:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:40,603:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:51,939:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:51,945:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:51,952:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:52,472:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:52,479:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:52,484:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:52,495:INFO:Calculating mean and std
2024-12-04 23:04:52,496:INFO:Creating metrics dataframe
2024-12-04 23:04:52,498:INFO:Uploading results into container
2024-12-04 23:04:52,498:INFO:Uploading model into container now
2024-12-04 23:04:52,499:INFO:_master_model_container: 13
2024-12-04 23:04:52,499:INFO:_display_container: 2
2024-12-04 23:04:52,500:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic',
              predictor=None, random_state=8677, reg_alpha=None, ...)
2024-12-04 23:04:52,500:INFO:create_model() successfully completed......................................
2024-12-04 23:04:52,565:INFO:SubProcess create_model() end ==================================
2024-12-04 23:04:52,565:INFO:Creating metrics dataframe
2024-12-04 23:04:52,570:INFO:Initializing Light Gradient Boosting Machine
2024-12-04 23:04:52,570:INFO:Total runtime is 2.4836757898330686 minutes
2024-12-04 23:04:52,570:INFO:SubProcess create_model() called ==================================
2024-12-04 23:04:52,570:INFO:Initializing create_model()
2024-12-04 23:04:52,570:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:04:52,570:INFO:Checking exceptions
2024-12-04 23:04:52,570:INFO:Importing libraries
2024-12-04 23:04:52,571:INFO:Copying training dataset
2024-12-04 23:04:52,584:INFO:Defining folds
2024-12-04 23:04:52,584:INFO:Declaring metric variables
2024-12-04 23:04:52,584:INFO:Importing untrained model
2024-12-04 23:04:52,584:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-04 23:04:52,584:INFO:Starting cross validation
2024-12-04 23:04:52,585:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:04:59,509:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:59,533:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:59,544:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:59,636:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:59,651:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:59,682:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:59,748:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:59,762:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:59,786:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:59,918:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:59,953:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:04:59,966:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:00,015:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:00,036:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:00,052:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:01,030:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:01,046:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:01,071:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:01,157:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:01,163:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:01,167:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:01,175:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:01,181:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:01,185:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,649:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,662:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,673:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,674:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,686:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,698:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,718:INFO:Calculating mean and std
2024-12-04 23:05:02,719:INFO:Creating metrics dataframe
2024-12-04 23:05:02,721:INFO:Uploading results into container
2024-12-04 23:05:02,722:INFO:Uploading model into container now
2024-12-04 23:05:02,723:INFO:_master_model_container: 14
2024-12-04 23:05:02,723:INFO:_display_container: 2
2024-12-04 23:05:02,723:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8677, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-04 23:05:02,723:INFO:create_model() successfully completed......................................
2024-12-04 23:05:02,806:INFO:SubProcess create_model() end ==================================
2024-12-04 23:05:02,806:INFO:Creating metrics dataframe
2024-12-04 23:05:02,811:INFO:Initializing Dummy Classifier
2024-12-04 23:05:02,811:INFO:Total runtime is 2.654344395796458 minutes
2024-12-04 23:05:02,811:INFO:SubProcess create_model() called ==================================
2024-12-04 23:05:02,811:INFO:Initializing create_model()
2024-12-04 23:05:02,811:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000185006B1B10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:05:02,812:INFO:Checking exceptions
2024-12-04 23:05:02,812:INFO:Importing libraries
2024-12-04 23:05:02,812:INFO:Copying training dataset
2024-12-04 23:05:02,837:INFO:Defining folds
2024-12-04 23:05:02,837:INFO:Declaring metric variables
2024-12-04 23:05:02,837:INFO:Importing untrained model
2024-12-04 23:05:02,838:INFO:Dummy Classifier Imported successfully
2024-12-04 23:05:02,838:INFO:Starting cross validation
2024-12-04 23:05:02,839:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:05:02,961:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,972:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,972:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,977:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,985:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,985:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,986:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,986:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:05:02,993:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:05:02,993:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:05:02,993:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,995:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:02,997:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,000:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,004:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:05:03,005:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,008:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,009:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,009:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,009:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,014:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,018:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:05:03,020:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,023:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,024:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,025:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:05:03,031:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,032:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:05:03,035:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,043:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

c.capitalize()} is", len(result))

2024-12-04 23:05:03,049:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,087:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,092:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,095:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,099:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:05:03,101:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,102:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,106:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:05:03,109:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:03,122:INFO:Calculating mean and std
2024-12-04 23:05:03,123:INFO:Creating metrics dataframe
2024-12-04 23:05:03,124:INFO:Uploading results into container
2024-12-04 23:05:03,125:INFO:Uploading model into container now
2024-12-04 23:05:03,125:INFO:_master_model_container: 15
2024-12-04 23:05:03,125:INFO:_display_container: 2
2024-12-04 23:05:03,125:INFO:DummyClassifier(constant=None, random_state=8677, strategy='prior')
2024-12-04 23:05:03,125:INFO:create_model() successfully completed......................................
2024-12-04 23:05:03,183:INFO:SubProcess create_model() end ==================================
2024-12-04 23:05:03,183:INFO:Creating metrics dataframe
2024-12-04 23:05:03,199:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-04 23:05:03,201:INFO:Initializing create_model()
2024-12-04 23:05:03,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:05:03,201:INFO:Checking exceptions
2024-12-04 23:05:03,202:INFO:Importing libraries
2024-12-04 23:05:03,202:INFO:Copying training dataset
2024-12-04 23:05:03,218:INFO:Defining folds
2024-12-04 23:05:03,218:INFO:Declaring metric variables
2024-12-04 23:05:03,218:INFO:Importing untrained model
2024-12-04 23:05:03,219:INFO:Declaring custom model
2024-12-04 23:05:03,219:INFO:Naive Bayes Imported successfully
2024-12-04 23:05:03,219:INFO:Cross validation set to False
2024-12-04 23:05:03,219:INFO:Fitting Model
2024-12-04 23:05:03,244:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 23:05:03,244:INFO:create_model() successfully completed......................................
2024-12-04 23:05:03,317:INFO:_master_model_container: 15
2024-12-04 23:05:03,317:INFO:_display_container: 2
2024-12-04 23:05:03,318:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 23:05:03,318:INFO:compare_models() successfully completed......................................
2024-12-04 23:05:03,320:INFO:Initializing evaluate_model()
2024-12-04 23:05:03,320:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-12-04 23:05:03,508:INFO:Initializing plot_model()
2024-12-04 23:05:03,508:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-12-04 23:05:03,508:INFO:Checking exceptions
2024-12-04 23:05:03,514:INFO:Preloading libraries
2024-12-04 23:05:03,514:INFO:Copying training dataset
2024-12-04 23:05:03,514:INFO:Plot type: pipeline
2024-12-04 23:05:04,285:INFO:Visual Rendered Successfully
2024-12-04 23:05:04,362:INFO:plot_model() successfully completed......................................
2024-12-04 23:05:04,362:INFO:Initializing plot_model()
2024-12-04 23:05:04,362:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 23:05:04,362:INFO:Checking exceptions
2024-12-04 23:05:04,368:INFO:Preloading libraries
2024-12-04 23:05:04,368:INFO:Copying training dataset
2024-12-04 23:05:04,368:INFO:Plot type: auc
2024-12-04 23:05:04,583:INFO:Fitting Model
2024-12-04 23:05:04,588:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2024-12-04 23:05:04,589:INFO:Scoring test/hold-out set
2024-12-04 23:05:05,295:INFO:Visual Rendered Successfully
2024-12-04 23:05:05,372:INFO:plot_model() successfully completed......................................
2024-12-04 23:05:05,372:INFO:Initializing plot_model()
2024-12-04 23:05:05,372:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 23:05:05,372:INFO:Checking exceptions
2024-12-04 23:05:05,378:INFO:Preloading libraries
2024-12-04 23:05:05,378:INFO:Copying training dataset
2024-12-04 23:05:05,378:INFO:Plot type: confusion_matrix
2024-12-04 23:05:05,583:INFO:Fitting Model
2024-12-04 23:05:05,584:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but GaussianNB was fitted with feature names
  warnings.warn(

2024-12-04 23:05:05,584:INFO:Scoring test/hold-out set
2024-12-04 23:05:05,841:INFO:Visual Rendered Successfully
2024-12-04 23:05:05,914:INFO:plot_model() successfully completed......................................
2024-12-04 23:05:05,914:INFO:Initializing predict_model()
2024-12-04 23:05:05,914:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000185004337E0>)
2024-12-04 23:05:05,914:INFO:Checking exceptions
2024-12-04 23:05:05,914:INFO:Preloading libraries
2024-12-04 23:05:06,076:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:06,095:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:06,112:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:06,217:INFO:Initializing predict_model()
2024-12-04 23:05:06,218:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001857E1F9C90>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x00000185004337E0>)
2024-12-04 23:05:06,218:INFO:Checking exceptions
2024-12-04 23:05:06,218:INFO:Preloading libraries
2024-12-04 23:05:06,218:INFO:Set up data.
2024-12-04 23:05:06,240:INFO:Set up index.
2024-12-04 23:05:06,311:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:06,339:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:06,373:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:05:06,488:INFO:Initializing save_model()
2024-12-04 23:05:06,488:INFO:save_model(model=GaussianNB(priors=None, var_smoothing=1e-09), model_name=Airflow/models/my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-12-04 23:05:06,488:INFO:Adding model into prep_pipe
2024-12-04 23:05:06,492:INFO:Airflow/models/my_best_pipeline.pkl saved in current working directory
2024-12-04 23:05:06,497:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnicity', 'Family_History',
                                             'Comorbidity_Diabet...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 GaussianNB(priors=None, var_smoothing=1e-09))],
         verbose=False)
2024-12-04 23:05:06,497:INFO:save_model() successfully completed......................................
2024-12-04 23:06:59,863:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:06:59,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:06:59,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:06:59,864:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:07:02,269:INFO:PyCaret ClassificationExperiment
2024-12-04 23:07:02,269:INFO:Logging name: clf-default-name
2024-12-04 23:07:02,270:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-04 23:07:02,270:INFO:version 3.3.2
2024-12-04 23:07:02,270:INFO:Initializing setup()
2024-12-04 23:07:02,270:INFO:self.USI: 17cb
2024-12-04 23:07:02,270:INFO:self._variable_keys: {'X_train', 'X_test', '_ml_usecase', 'exp_id', 'fold_shuffle_param', 'memory', 'gpu_param', 'exp_name_log', 'data', 'y_test', 'y_train', 'logging_param', 'fold_groups_param', 'fix_imbalance', '_available_plots', 'seed', 'target_param', 'pipeline', 'X', 'n_jobs_param', 'y', 'fold_generator', 'idx', 'html_param', 'is_multiclass', 'USI', 'gpu_n_jobs_param', 'log_plots_param'}
2024-12-04 23:07:02,270:INFO:Checking environment
2024-12-04 23:07:02,270:INFO:python_version: 3.11.9
2024-12-04 23:07:02,270:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-12-04 23:07:02,270:INFO:machine: AMD64
2024-12-04 23:07:02,302:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-04 23:07:02,310:INFO:Memory: svmem(total=8345964544, available=667656192, percent=92.0, used=7678308352, free=667656192)
2024-12-04 23:07:02,310:INFO:Physical Core: 4
2024-12-04 23:07:02,310:INFO:Logical Core: 8
2024-12-04 23:07:02,310:INFO:Checking libraries
2024-12-04 23:07:02,310:INFO:System:
2024-12-04 23:07:02,311:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-12-04 23:07:02,311:INFO:executable: C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Scripts\python.exe
2024-12-04 23:07:02,311:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-04 23:07:02,311:INFO:PyCaret required dependencies:
2024-12-04 23:07:02,363:INFO:                 pip: 24.3.1
2024-12-04 23:07:02,363:INFO:          setuptools: 68.2.0
2024-12-04 23:07:02,363:INFO:             pycaret: 3.3.2
2024-12-04 23:07:02,363:INFO:             IPython: 8.29.0
2024-12-04 23:07:02,363:INFO:          ipywidgets: 8.1.5
2024-12-04 23:07:02,363:INFO:                tqdm: 4.67.0
2024-12-04 23:07:02,363:INFO:               numpy: 1.26.4
2024-12-04 23:07:02,363:INFO:              pandas: 2.1.4
2024-12-04 23:07:02,363:INFO:              jinja2: 3.1.4
2024-12-04 23:07:02,363:INFO:               scipy: 1.11.4
2024-12-04 23:07:02,363:INFO:              joblib: 1.3.2
2024-12-04 23:07:02,363:INFO:             sklearn: 1.4.2
2024-12-04 23:07:02,363:INFO:                pyod: 2.0.2
2024-12-04 23:07:02,363:INFO:            imblearn: 0.12.4
2024-12-04 23:07:02,363:INFO:   category_encoders: 2.6.4
2024-12-04 23:07:02,363:INFO:            lightgbm: 4.5.0
2024-12-04 23:07:02,363:INFO:               numba: 0.60.0
2024-12-04 23:07:02,363:INFO:            requests: 2.32.3
2024-12-04 23:07:02,363:INFO:          matplotlib: 3.7.5
2024-12-04 23:07:02,363:INFO:          scikitplot: 0.3.7
2024-12-04 23:07:02,363:INFO:         yellowbrick: 1.5
2024-12-04 23:07:02,364:INFO:              plotly: 5.24.1
2024-12-04 23:07:02,364:INFO:    plotly-resampler: Not installed
2024-12-04 23:07:02,364:INFO:             kaleido: 0.2.1
2024-12-04 23:07:02,364:INFO:           schemdraw: 0.15
2024-12-04 23:07:02,364:INFO:         statsmodels: 0.14.4
2024-12-04 23:07:02,364:INFO:              sktime: 0.26.0
2024-12-04 23:07:02,364:INFO:               tbats: 1.1.3
2024-12-04 23:07:02,364:INFO:            pmdarima: 2.0.4
2024-12-04 23:07:02,364:INFO:              psutil: 6.1.0
2024-12-04 23:07:02,364:INFO:          markupsafe: 2.1.5
2024-12-04 23:07:02,364:INFO:             pickle5: Not installed
2024-12-04 23:07:02,364:INFO:         cloudpickle: 3.1.0
2024-12-04 23:07:02,364:INFO:         deprecation: 2.1.0
2024-12-04 23:07:02,364:INFO:              xxhash: 3.5.0
2024-12-04 23:07:02,364:INFO:           wurlitzer: Not installed
2024-12-04 23:07:02,364:INFO:PyCaret optional dependencies:
2024-12-04 23:07:02,395:INFO:                shap: Not installed
2024-12-04 23:07:02,396:INFO:           interpret: Not installed
2024-12-04 23:07:02,396:INFO:                umap: Not installed
2024-12-04 23:07:02,396:INFO:     ydata_profiling: Not installed
2024-12-04 23:07:02,396:INFO:  explainerdashboard: Not installed
2024-12-04 23:07:02,396:INFO:             autoviz: 0.1.905
2024-12-04 23:07:02,396:INFO:           fairlearn: Not installed
2024-12-04 23:07:02,397:INFO:          deepchecks: Not installed
2024-12-04 23:07:02,397:INFO:             xgboost: 1.6.2
2024-12-04 23:07:02,397:INFO:            catboost: Not installed
2024-12-04 23:07:02,397:INFO:              kmodes: Not installed
2024-12-04 23:07:02,397:INFO:             mlxtend: Not installed
2024-12-04 23:07:02,397:INFO:       statsforecast: Not installed
2024-12-04 23:07:02,397:INFO:        tune_sklearn: Not installed
2024-12-04 23:07:02,397:INFO:                 ray: Not installed
2024-12-04 23:07:02,397:INFO:            hyperopt: Not installed
2024-12-04 23:07:02,397:INFO:              optuna: Not installed
2024-12-04 23:07:02,397:INFO:               skopt: Not installed
2024-12-04 23:07:02,397:INFO:              mlflow: Not installed
2024-12-04 23:07:02,397:INFO:              gradio: Not installed
2024-12-04 23:07:02,398:INFO:             fastapi: Not installed
2024-12-04 23:07:02,398:INFO:             uvicorn: Not installed
2024-12-04 23:07:02,398:INFO:              m2cgen: Not installed
2024-12-04 23:07:02,398:INFO:           evidently: Not installed
2024-12-04 23:07:02,398:INFO:               fugue: Not installed
2024-12-04 23:07:02,398:INFO:           streamlit: Not installed
2024-12-04 23:07:02,398:INFO:             prophet: Not installed
2024-12-04 23:07:02,398:INFO:None
2024-12-04 23:07:02,399:INFO:Set up data.
2024-12-04 23:07:02,441:INFO:Set up folding strategy.
2024-12-04 23:07:02,442:INFO:Set up train/test split.
2024-12-04 23:07:02,478:INFO:Set up index.
2024-12-04 23:07:02,478:INFO:Assigning column types.
2024-12-04 23:07:02,494:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-04 23:07:02,554:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 23:07:02,559:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:07:02,612:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:07:03,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:07:03,205:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 23:07:03,207:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:07:03,256:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:07:03,259:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:07:03,259:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-04 23:07:03,345:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:07:03,410:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:07:03,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:07:03,525:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:07:03,587:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:07:03,592:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:07:03,592:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-04 23:07:03,711:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:07:03,716:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:07:03,895:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:07:03,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:07:03,905:INFO:Preparing preprocessing pipeline...
2024-12-04 23:07:03,915:INFO:Set up label encoding.
2024-12-04 23:07:03,915:INFO:Set up simple imputation.
2024-12-04 23:07:04,046:INFO:Finished creating preprocessing pipeline.
2024-12-04 23:07:04,056:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-04 23:07:04,056:INFO:Creating final display dataframe.
2024-12-04 23:07:04,335:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               1674
1                        Target                                          Treatment
2                   Target type                                         Multiclass
3                Target mapping  Chemotherapy: 0, Radiation Therapy: 1, Surgery...
4           Original data shape                                        (11592, 36)
5        Transformed data shape                                        (11592, 36)
6   Transformed train set shape                                         (8114, 36)
7    Transformed test set shape                                         (3478, 36)
8              Numeric features                                                 35
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               17cb
2024-12-04 23:07:04,472:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:07:04,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:07:04,564:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:07:04,566:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:07:04,567:INFO:setup() successfully completed in 2.31s...............
2024-12-04 23:07:04,567:INFO:Initializing compare_models()
2024-12-04 23:07:04,567:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-12-04 23:07:04,568:INFO:Checking exceptions
2024-12-04 23:07:04,585:INFO:Preparing display monitor
2024-12-04 23:07:04,595:INFO:Initializing Logistic Regression
2024-12-04 23:07:04,595:INFO:Total runtime is 1.6617774963378907e-05 minutes
2024-12-04 23:07:04,595:INFO:SubProcess create_model() called ==================================
2024-12-04 23:07:04,596:INFO:Initializing create_model()
2024-12-04 23:07:04,596:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:07:04,596:INFO:Checking exceptions
2024-12-04 23:07:04,596:INFO:Importing libraries
2024-12-04 23:07:04,597:INFO:Copying training dataset
2024-12-04 23:07:04,628:INFO:Defining folds
2024-12-04 23:07:04,628:INFO:Declaring metric variables
2024-12-04 23:07:04,629:INFO:Importing untrained model
2024-12-04 23:07:04,629:INFO:Logistic Regression Imported successfully
2024-12-04 23:07:04,629:INFO:Starting cross validation
2024-12-04 23:07:04,630:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:07:25,124:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:25,133:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:25,135:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,144:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,166:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:25,175:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,190:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,209:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:25,217:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:25,227:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,228:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,248:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,279:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,280:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,281:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:25,289:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,310:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,314:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,328:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,333:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:25,335:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,339:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,341:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,355:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,369:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,373:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,397:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,522:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:25,533:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,539:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:25,545:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,549:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,560:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,568:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,627:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,691:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:25,699:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,716:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,728:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:25,751:INFO:Calculating mean and std
2024-12-04 23:07:25,755:INFO:Creating metrics dataframe
2024-12-04 23:07:25,762:INFO:Uploading results into container
2024-12-04 23:07:25,763:INFO:Uploading model into container now
2024-12-04 23:07:25,765:INFO:_master_model_container: 1
2024-12-04 23:07:25,765:INFO:_display_container: 2
2024-12-04 23:07:25,766:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1674, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-04 23:07:25,766:INFO:create_model() successfully completed......................................
2024-12-04 23:07:25,956:INFO:SubProcess create_model() end ==================================
2024-12-04 23:07:25,956:INFO:Creating metrics dataframe
2024-12-04 23:07:25,963:INFO:Initializing K Neighbors Classifier
2024-12-04 23:07:25,963:INFO:Total runtime is 0.35615947643915813 minutes
2024-12-04 23:07:25,963:INFO:SubProcess create_model() called ==================================
2024-12-04 23:07:25,964:INFO:Initializing create_model()
2024-12-04 23:07:25,964:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:07:25,964:INFO:Checking exceptions
2024-12-04 23:07:25,964:INFO:Importing libraries
2024-12-04 23:07:25,964:INFO:Copying training dataset
2024-12-04 23:07:26,014:INFO:Defining folds
2024-12-04 23:07:26,014:INFO:Declaring metric variables
2024-12-04 23:07:26,015:INFO:Importing untrained model
2024-12-04 23:07:26,015:INFO:K Neighbors Classifier Imported successfully
2024-12-04 23:07:26,016:INFO:Starting cross validation
2024-12-04 23:07:26,018:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:07:27,027:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,037:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,054:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,062:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,071:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,073:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,087:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,103:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,115:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,130:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,130:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,140:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,141:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,145:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,146:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,151:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,155:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,157:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,160:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,164:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,167:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,172:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,174:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,393:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,409:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,425:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,430:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,444:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,456:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,477:INFO:Calculating mean and std
2024-12-04 23:07:27,478:INFO:Creating metrics dataframe
2024-12-04 23:07:27,482:INFO:Uploading results into container
2024-12-04 23:07:27,483:INFO:Uploading model into container now
2024-12-04 23:07:27,483:INFO:_master_model_container: 2
2024-12-04 23:07:27,484:INFO:_display_container: 2
2024-12-04 23:07:27,484:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-04 23:07:27,484:INFO:create_model() successfully completed......................................
2024-12-04 23:07:27,582:INFO:SubProcess create_model() end ==================================
2024-12-04 23:07:27,584:INFO:Creating metrics dataframe
2024-12-04 23:07:27,589:INFO:Initializing Naive Bayes
2024-12-04 23:07:27,589:INFO:Total runtime is 0.3832470178604126 minutes
2024-12-04 23:07:27,590:INFO:SubProcess create_model() called ==================================
2024-12-04 23:07:27,590:INFO:Initializing create_model()
2024-12-04 23:07:27,590:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:07:27,590:INFO:Checking exceptions
2024-12-04 23:07:27,590:INFO:Importing libraries
2024-12-04 23:07:27,591:INFO:Copying training dataset
2024-12-04 23:07:27,625:INFO:Defining folds
2024-12-04 23:07:27,625:INFO:Declaring metric variables
2024-12-04 23:07:27,625:INFO:Importing untrained model
2024-12-04 23:07:27,626:INFO:Naive Bayes Imported successfully
2024-12-04 23:07:27,626:INFO:Starting cross validation
2024-12-04 23:07:27,628:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:07:27,891:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,901:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,913:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,921:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,924:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,931:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,935:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,944:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,958:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,970:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,972:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,980:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,988:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,988:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:27,998:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,012:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,014:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,032:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,039:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,041:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,056:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,061:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,068:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,069:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,082:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,107:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,134:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,134:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,150:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,164:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:28,204:INFO:Calculating mean and std
2024-12-04 23:07:28,205:INFO:Creating metrics dataframe
2024-12-04 23:07:28,209:INFO:Uploading results into container
2024-12-04 23:07:28,210:INFO:Uploading model into container now
2024-12-04 23:07:28,210:INFO:_master_model_container: 3
2024-12-04 23:07:28,211:INFO:_display_container: 2
2024-12-04 23:07:28,211:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 23:07:28,211:INFO:create_model() successfully completed......................................
2024-12-04 23:07:28,328:INFO:SubProcess create_model() end ==================================
2024-12-04 23:07:28,328:INFO:Creating metrics dataframe
2024-12-04 23:07:28,332:INFO:Initializing Decision Tree Classifier
2024-12-04 23:07:28,332:INFO:Total runtime is 0.3956341544787089 minutes
2024-12-04 23:07:28,332:INFO:SubProcess create_model() called ==================================
2024-12-04 23:07:28,333:INFO:Initializing create_model()
2024-12-04 23:07:28,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:07:28,333:INFO:Checking exceptions
2024-12-04 23:07:28,333:INFO:Importing libraries
2024-12-04 23:07:28,333:INFO:Copying training dataset
2024-12-04 23:07:28,358:INFO:Defining folds
2024-12-04 23:07:28,358:INFO:Declaring metric variables
2024-12-04 23:07:28,359:INFO:Importing untrained model
2024-12-04 23:07:28,359:INFO:Decision Tree Classifier Imported successfully
2024-12-04 23:07:28,359:INFO:Starting cross validation
2024-12-04 23:07:28,361:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:07:29,756:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,761:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,763:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,769:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,775:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,786:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,788:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,799:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,809:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,883:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,891:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,896:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,904:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,918:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,931:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,965:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,979:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:29,992:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:30,003:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:30,010:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:30,018:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:30,019:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:30,031:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:30,390:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:30,397:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:30,406:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:30,453:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:30,460:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:30,468:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:30,485:INFO:Calculating mean and std
2024-12-04 23:07:30,486:INFO:Creating metrics dataframe
2024-12-04 23:07:30,488:INFO:Uploading results into container
2024-12-04 23:07:30,489:INFO:Uploading model into container now
2024-12-04 23:07:30,489:INFO:_master_model_container: 4
2024-12-04 23:07:30,489:INFO:_display_container: 2
2024-12-04 23:07:30,490:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=1674, splitter='best')
2024-12-04 23:07:30,490:INFO:create_model() successfully completed......................................
2024-12-04 23:07:30,580:INFO:SubProcess create_model() end ==================================
2024-12-04 23:07:30,580:INFO:Creating metrics dataframe
2024-12-04 23:07:30,583:INFO:Initializing SVM - Linear Kernel
2024-12-04 23:07:30,583:INFO:Total runtime is 0.4331581711769104 minutes
2024-12-04 23:07:30,583:INFO:SubProcess create_model() called ==================================
2024-12-04 23:07:30,584:INFO:Initializing create_model()
2024-12-04 23:07:30,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:07:30,584:INFO:Checking exceptions
2024-12-04 23:07:30,584:INFO:Importing libraries
2024-12-04 23:07:30,584:INFO:Copying training dataset
2024-12-04 23:07:30,610:INFO:Defining folds
2024-12-04 23:07:30,610:INFO:Declaring metric variables
2024-12-04 23:07:30,610:INFO:Importing untrained model
2024-12-04 23:07:30,611:INFO:SVM - Linear Kernel Imported successfully
2024-12-04 23:07:30,611:INFO:Starting cross validation
2024-12-04 23:07:30,613:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:07:32,129:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:32,134:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,142:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:32,148:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,151:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:32,157:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,161:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,169:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:32,170:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,174:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,181:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,191:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:32,195:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,199:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,208:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,224:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,239:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,242:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:32,245:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,246:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,256:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:32,260:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,261:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,281:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,294:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,296:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,778:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:32,783:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,798:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,809:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,914:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:32,919:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,930:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,944:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,962:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:32,967:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,978:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:32,989:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,010:INFO:Calculating mean and std
2024-12-04 23:07:33,011:INFO:Creating metrics dataframe
2024-12-04 23:07:33,015:INFO:Uploading results into container
2024-12-04 23:07:33,016:INFO:Uploading model into container now
2024-12-04 23:07:33,016:INFO:_master_model_container: 5
2024-12-04 23:07:33,017:INFO:_display_container: 2
2024-12-04 23:07:33,017:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1674, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-04 23:07:33,017:INFO:create_model() successfully completed......................................
2024-12-04 23:07:33,097:INFO:SubProcess create_model() end ==================================
2024-12-04 23:07:33,097:INFO:Creating metrics dataframe
2024-12-04 23:07:33,100:INFO:Initializing Ridge Classifier
2024-12-04 23:07:33,100:INFO:Total runtime is 0.47509652773539224 minutes
2024-12-04 23:07:33,101:INFO:SubProcess create_model() called ==================================
2024-12-04 23:07:33,101:INFO:Initializing create_model()
2024-12-04 23:07:33,101:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:07:33,101:INFO:Checking exceptions
2024-12-04 23:07:33,101:INFO:Importing libraries
2024-12-04 23:07:33,101:INFO:Copying training dataset
2024-12-04 23:07:33,123:INFO:Defining folds
2024-12-04 23:07:33,123:INFO:Declaring metric variables
2024-12-04 23:07:33,123:INFO:Importing untrained model
2024-12-04 23:07:33,123:INFO:Ridge Classifier Imported successfully
2024-12-04 23:07:33,124:INFO:Starting cross validation
2024-12-04 23:07:33,125:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:07:33,279:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:33,282:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:33,285:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,287:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,287:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:33,292:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:33,293:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,293:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:33,293:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:33,296:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:33,297:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,298:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,299:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,302:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,305:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,312:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:33,313:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,313:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,317:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,319:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,319:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,321:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,323:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,326:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,330:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,331:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,333:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,334:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,337:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,343:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,351:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,368:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,420:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:33,425:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:33,426:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,429:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,439:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,440:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,450:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,453:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:33,479:INFO:Calculating mean and std
2024-12-04 23:07:33,480:INFO:Creating metrics dataframe
2024-12-04 23:07:33,483:INFO:Uploading results into container
2024-12-04 23:07:33,484:INFO:Uploading model into container now
2024-12-04 23:07:33,485:INFO:_master_model_container: 6
2024-12-04 23:07:33,485:INFO:_display_container: 2
2024-12-04 23:07:33,485:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1674, solver='auto',
                tol=0.0001)
2024-12-04 23:07:33,485:INFO:create_model() successfully completed......................................
2024-12-04 23:07:33,569:INFO:SubProcess create_model() end ==================================
2024-12-04 23:07:33,569:INFO:Creating metrics dataframe
2024-12-04 23:07:33,572:INFO:Initializing Random Forest Classifier
2024-12-04 23:07:33,573:INFO:Total runtime is 0.4829626719156901 minutes
2024-12-04 23:07:33,573:INFO:SubProcess create_model() called ==================================
2024-12-04 23:07:33,573:INFO:Initializing create_model()
2024-12-04 23:07:33,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:07:33,573:INFO:Checking exceptions
2024-12-04 23:07:33,573:INFO:Importing libraries
2024-12-04 23:07:33,573:INFO:Copying training dataset
2024-12-04 23:07:33,596:INFO:Defining folds
2024-12-04 23:07:33,597:INFO:Declaring metric variables
2024-12-04 23:07:33,597:INFO:Importing untrained model
2024-12-04 23:07:33,598:INFO:Random Forest Classifier Imported successfully
2024-12-04 23:07:33,598:INFO:Starting cross validation
2024-12-04 23:07:33,600:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:07:41,769:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,770:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,781:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,782:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,783:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,783:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,794:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,795:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,798:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,800:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,811:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,829:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,862:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,873:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,874:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,886:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,897:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,903:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,949:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,959:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:41,975:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:42,024:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:42,035:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:42,111:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,000:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,005:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,010:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,012:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,018:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,020:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,047:INFO:Calculating mean and std
2024-12-04 23:07:44,048:INFO:Creating metrics dataframe
2024-12-04 23:07:44,051:INFO:Uploading results into container
2024-12-04 23:07:44,052:INFO:Uploading model into container now
2024-12-04 23:07:44,053:INFO:_master_model_container: 7
2024-12-04 23:07:44,054:INFO:_display_container: 2
2024-12-04 23:07:44,054:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=1674, verbose=0,
                       warm_start=False)
2024-12-04 23:07:44,054:INFO:create_model() successfully completed......................................
2024-12-04 23:07:44,149:INFO:SubProcess create_model() end ==================================
2024-12-04 23:07:44,149:INFO:Creating metrics dataframe
2024-12-04 23:07:44,153:INFO:Initializing Quadratic Discriminant Analysis
2024-12-04 23:07:44,153:INFO:Total runtime is 0.6593218763669332 minutes
2024-12-04 23:07:44,153:INFO:SubProcess create_model() called ==================================
2024-12-04 23:07:44,154:INFO:Initializing create_model()
2024-12-04 23:07:44,154:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:07:44,154:INFO:Checking exceptions
2024-12-04 23:07:44,155:INFO:Importing libraries
2024-12-04 23:07:44,155:INFO:Copying training dataset
2024-12-04 23:07:44,183:INFO:Defining folds
2024-12-04 23:07:44,183:INFO:Declaring metric variables
2024-12-04 23:07:44,183:INFO:Importing untrained model
2024-12-04 23:07:44,183:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-04 23:07:44,183:INFO:Starting cross validation
2024-12-04 23:07:44,184:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:07:44,362:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:44,365:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:44,370:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:44,372:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,375:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:44,378:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,381:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,386:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,393:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:44,393:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,394:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,398:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:44,398:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,400:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,402:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:44,404:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,405:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:44,406:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,409:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,411:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,413:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,414:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,416:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,418:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,419:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,422:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,423:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,427:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,430:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,436:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,437:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,440:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,527:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:44,527:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:44,531:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,532:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,540:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,545:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,552:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,557:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:44,582:INFO:Calculating mean and std
2024-12-04 23:07:44,582:INFO:Creating metrics dataframe
2024-12-04 23:07:44,585:INFO:Uploading results into container
2024-12-04 23:07:44,586:INFO:Uploading model into container now
2024-12-04 23:07:44,586:INFO:_master_model_container: 8
2024-12-04 23:07:44,586:INFO:_display_container: 2
2024-12-04 23:07:44,587:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-04 23:07:44,587:INFO:create_model() successfully completed......................................
2024-12-04 23:07:44,652:INFO:SubProcess create_model() end ==================================
2024-12-04 23:07:44,652:INFO:Creating metrics dataframe
2024-12-04 23:07:44,656:INFO:Initializing Ada Boost Classifier
2024-12-04 23:07:44,656:INFO:Total runtime is 0.6676964640617371 minutes
2024-12-04 23:07:44,656:INFO:SubProcess create_model() called ==================================
2024-12-04 23:07:44,657:INFO:Initializing create_model()
2024-12-04 23:07:44,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:07:44,657:INFO:Checking exceptions
2024-12-04 23:07:44,657:INFO:Importing libraries
2024-12-04 23:07:44,657:INFO:Copying training dataset
2024-12-04 23:07:44,674:INFO:Defining folds
2024-12-04 23:07:44,674:INFO:Declaring metric variables
2024-12-04 23:07:44,675:INFO:Importing untrained model
2024-12-04 23:07:44,675:INFO:Ada Boost Classifier Imported successfully
2024-12-04 23:07:44,675:INFO:Starting cross validation
2024-12-04 23:07:44,676:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:07:44,759:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:07:44,763:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:07:44,767:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:07:44,768:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:07:44,778:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:07:44,781:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:07:44,792:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:07:44,799:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:07:46,636:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:46,642:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:46,647:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:46,652:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:46,655:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:46,655:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:46,665:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:46,674:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:46,677:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:46,695:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:46,696:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:46,754:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:07:46,759:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:07:47,015:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:47,019:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,033:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,040:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:47,046:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,049:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,061:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,075:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,104:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:47,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,124:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,124:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:47,130:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,137:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,143:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,150:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:47,156:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,156:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,169:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:47,181:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:48,313:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:48,317:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:48,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:48,330:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:07:48,334:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:48,336:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:48,343:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:48,353:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:07:48,367:INFO:Calculating mean and std
2024-12-04 23:07:48,368:INFO:Creating metrics dataframe
2024-12-04 23:07:48,369:INFO:Uploading results into container
2024-12-04 23:07:48,370:INFO:Uploading model into container now
2024-12-04 23:07:48,370:INFO:_master_model_container: 9
2024-12-04 23:07:48,370:INFO:_display_container: 2
2024-12-04 23:07:48,371:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=1674)
2024-12-04 23:07:48,371:INFO:create_model() successfully completed......................................
2024-12-04 23:07:48,449:INFO:SubProcess create_model() end ==================================
2024-12-04 23:07:48,449:INFO:Creating metrics dataframe
2024-12-04 23:07:48,452:INFO:Initializing Gradient Boosting Classifier
2024-12-04 23:07:48,452:INFO:Total runtime is 0.7309627254803976 minutes
2024-12-04 23:07:48,452:INFO:SubProcess create_model() called ==================================
2024-12-04 23:07:48,452:INFO:Initializing create_model()
2024-12-04 23:07:48,452:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:07:48,452:INFO:Checking exceptions
2024-12-04 23:07:48,452:INFO:Importing libraries
2024-12-04 23:07:48,452:INFO:Copying training dataset
2024-12-04 23:07:48,465:INFO:Defining folds
2024-12-04 23:07:48,466:INFO:Declaring metric variables
2024-12-04 23:07:48,466:INFO:Importing untrained model
2024-12-04 23:07:48,466:INFO:Gradient Boosting Classifier Imported successfully
2024-12-04 23:07:48,467:INFO:Starting cross validation
2024-12-04 23:07:48,467:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:08:22,209:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:22,226:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:22,239:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:22,253:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:24,827:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:24,833:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:24,846:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:24,880:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:25,515:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:25,521:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:25,541:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:25,554:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:26,467:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:26,473:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:26,485:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:26,500:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:27,157:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:27,163:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:27,177:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:27,192:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:28,969:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:28,975:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:28,983:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:28,995:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:29,542:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:29,547:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:29,560:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:29,572:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:30,115:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:30,118:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:30,126:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:30,135:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:46,685:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:46,689:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:46,697:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:46,707:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:47,733:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:47,736:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:47,741:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:47,746:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:47,758:INFO:Calculating mean and std
2024-12-04 23:08:47,759:INFO:Creating metrics dataframe
2024-12-04 23:08:47,760:INFO:Uploading results into container
2024-12-04 23:08:47,762:INFO:Uploading model into container now
2024-12-04 23:08:47,762:INFO:_master_model_container: 10
2024-12-04 23:08:47,762:INFO:_display_container: 2
2024-12-04 23:08:47,762:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1674, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-04 23:08:47,762:INFO:create_model() successfully completed......................................
2024-12-04 23:08:47,824:INFO:SubProcess create_model() end ==================================
2024-12-04 23:08:47,824:INFO:Creating metrics dataframe
2024-12-04 23:08:47,826:INFO:Initializing Linear Discriminant Analysis
2024-12-04 23:08:47,826:INFO:Total runtime is 1.720536263783773 minutes
2024-12-04 23:08:47,826:INFO:SubProcess create_model() called ==================================
2024-12-04 23:08:47,826:INFO:Initializing create_model()
2024-12-04 23:08:47,826:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:08:47,826:INFO:Checking exceptions
2024-12-04 23:08:47,826:INFO:Importing libraries
2024-12-04 23:08:47,827:INFO:Copying training dataset
2024-12-04 23:08:47,839:INFO:Defining folds
2024-12-04 23:08:47,839:INFO:Declaring metric variables
2024-12-04 23:08:47,839:INFO:Importing untrained model
2024-12-04 23:08:47,839:INFO:Linear Discriminant Analysis Imported successfully
2024-12-04 23:08:47,839:INFO:Starting cross validation
2024-12-04 23:08:47,840:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:08:47,975:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:47,979:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:47,981:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:47,982:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:47,983:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:47,983:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:47,985:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:47,987:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:47,988:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:47,995:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:47,996:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:47,997:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,001:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:48,001:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,002:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,006:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,007:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,008:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,011:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,012:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,014:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,018:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:48,020:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,021:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,022:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,032:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,032:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,037:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,037:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,046:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,051:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,100:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:08:48,103:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,103:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,112:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,119:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:48,131:INFO:Calculating mean and std
2024-12-04 23:08:48,132:INFO:Creating metrics dataframe
2024-12-04 23:08:48,133:INFO:Uploading results into container
2024-12-04 23:08:48,134:INFO:Uploading model into container now
2024-12-04 23:08:48,134:INFO:_master_model_container: 11
2024-12-04 23:08:48,134:INFO:_display_container: 2
2024-12-04 23:08:48,134:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-04 23:08:48,134:INFO:create_model() successfully completed......................................
2024-12-04 23:08:48,191:INFO:SubProcess create_model() end ==================================
2024-12-04 23:08:48,191:INFO:Creating metrics dataframe
2024-12-04 23:08:48,193:INFO:Initializing Extra Trees Classifier
2024-12-04 23:08:48,193:INFO:Total runtime is 1.7266610344250999 minutes
2024-12-04 23:08:48,193:INFO:SubProcess create_model() called ==================================
2024-12-04 23:08:48,193:INFO:Initializing create_model()
2024-12-04 23:08:48,193:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:08:48,193:INFO:Checking exceptions
2024-12-04 23:08:48,193:INFO:Importing libraries
2024-12-04 23:08:48,194:INFO:Copying training dataset
2024-12-04 23:08:48,206:INFO:Defining folds
2024-12-04 23:08:48,206:INFO:Declaring metric variables
2024-12-04 23:08:48,207:INFO:Importing untrained model
2024-12-04 23:08:48,207:INFO:Extra Trees Classifier Imported successfully
2024-12-04 23:08:48,207:INFO:Starting cross validation
2024-12-04 23:08:48,208:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:08:52,059:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,064:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,072:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,078:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,095:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,105:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,119:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,134:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,154:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,181:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,198:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,224:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,225:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,225:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,237:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,239:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,261:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,282:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,302:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,304:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,312:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,316:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,324:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:52,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:53,333:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:53,341:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:53,349:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:53,350:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:53,356:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:53,364:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:08:53,384:INFO:Calculating mean and std
2024-12-04 23:08:53,386:INFO:Creating metrics dataframe
2024-12-04 23:08:53,389:INFO:Uploading results into container
2024-12-04 23:08:53,390:INFO:Uploading model into container now
2024-12-04 23:08:53,391:INFO:_master_model_container: 12
2024-12-04 23:08:53,391:INFO:_display_container: 2
2024-12-04 23:08:53,391:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1674, verbose=0,
                     warm_start=False)
2024-12-04 23:08:53,392:INFO:create_model() successfully completed......................................
2024-12-04 23:08:53,474:INFO:SubProcess create_model() end ==================================
2024-12-04 23:08:53,474:INFO:Creating metrics dataframe
2024-12-04 23:08:53,477:INFO:Initializing Extreme Gradient Boosting
2024-12-04 23:08:53,477:INFO:Total runtime is 1.814724640051524 minutes
2024-12-04 23:08:53,477:INFO:SubProcess create_model() called ==================================
2024-12-04 23:08:53,477:INFO:Initializing create_model()
2024-12-04 23:08:53,477:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:08:53,477:INFO:Checking exceptions
2024-12-04 23:08:53,477:INFO:Importing libraries
2024-12-04 23:08:53,477:INFO:Copying training dataset
2024-12-04 23:08:53,496:INFO:Defining folds
2024-12-04 23:08:53,496:INFO:Declaring metric variables
2024-12-04 23:08:53,496:INFO:Importing untrained model
2024-12-04 23:08:53,498:INFO:Extreme Gradient Boosting Imported successfully
2024-12-04 23:08:53,498:INFO:Starting cross validation
2024-12-04 23:08:53,500:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:09:19,418:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:19,429:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:19,432:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:19,442:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:19,451:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:19,461:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:19,634:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:19,648:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:19,662:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:20,490:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:20,505:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:20,518:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:20,574:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:20,588:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:20,603:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:21,679:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:21,692:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:21,703:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:21,975:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:21,985:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:21,997:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:22,002:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:22,012:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:22,024:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:32,288:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:32,297:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:32,308:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:32,481:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:32,487:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:32,493:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:32,504:INFO:Calculating mean and std
2024-12-04 23:09:32,506:INFO:Creating metrics dataframe
2024-12-04 23:09:32,507:INFO:Uploading results into container
2024-12-04 23:09:32,508:INFO:Uploading model into container now
2024-12-04 23:09:32,508:INFO:_master_model_container: 13
2024-12-04 23:09:32,508:INFO:_display_container: 2
2024-12-04 23:09:32,509:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic',
              predictor=None, random_state=1674, reg_alpha=None, ...)
2024-12-04 23:09:32,509:INFO:create_model() successfully completed......................................
2024-12-04 23:09:32,569:INFO:SubProcess create_model() end ==================================
2024-12-04 23:09:32,570:INFO:Creating metrics dataframe
2024-12-04 23:09:32,572:INFO:Initializing Light Gradient Boosting Machine
2024-12-04 23:09:32,572:INFO:Total runtime is 2.4663069605827332 minutes
2024-12-04 23:09:32,573:INFO:SubProcess create_model() called ==================================
2024-12-04 23:09:32,573:INFO:Initializing create_model()
2024-12-04 23:09:32,573:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:09:32,573:INFO:Checking exceptions
2024-12-04 23:09:32,573:INFO:Importing libraries
2024-12-04 23:09:32,573:INFO:Copying training dataset
2024-12-04 23:09:32,586:INFO:Defining folds
2024-12-04 23:09:32,586:INFO:Declaring metric variables
2024-12-04 23:09:32,586:INFO:Importing untrained model
2024-12-04 23:09:32,586:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-04 23:09:32,586:INFO:Starting cross validation
2024-12-04 23:09:32,587:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:09:39,578:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:39,590:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:39,631:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:39,664:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:39,677:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:39,691:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:39,711:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:39,724:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:39,749:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:39,886:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:39,903:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:39,945:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:40,082:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:40,098:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:40,107:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:40,112:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:40,122:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:40,135:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:40,284:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:40,296:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:40,306:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:40,838:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:40,849:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:40,861:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,615:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,628:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,636:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,640:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,649:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,662:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,681:INFO:Calculating mean and std
2024-12-04 23:09:42,682:INFO:Creating metrics dataframe
2024-12-04 23:09:42,684:INFO:Uploading results into container
2024-12-04 23:09:42,685:INFO:Uploading model into container now
2024-12-04 23:09:42,685:INFO:_master_model_container: 14
2024-12-04 23:09:42,685:INFO:_display_container: 2
2024-12-04 23:09:42,686:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1674, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-04 23:09:42,686:INFO:create_model() successfully completed......................................
2024-12-04 23:09:42,774:INFO:SubProcess create_model() end ==================================
2024-12-04 23:09:42,774:INFO:Creating metrics dataframe
2024-12-04 23:09:42,778:INFO:Initializing Dummy Classifier
2024-12-04 23:09:42,779:INFO:Total runtime is 2.6364237308502196 minutes
2024-12-04 23:09:42,779:INFO:SubProcess create_model() called ==================================
2024-12-04 23:09:42,779:INFO:Initializing create_model()
2024-12-04 23:09:42,779:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000024BEEAA1810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:09:42,779:INFO:Checking exceptions
2024-12-04 23:09:42,780:INFO:Importing libraries
2024-12-04 23:09:42,780:INFO:Copying training dataset
2024-12-04 23:09:42,810:INFO:Defining folds
2024-12-04 23:09:42,810:INFO:Declaring metric variables
2024-12-04 23:09:42,811:INFO:Importing untrained model
2024-12-04 23:09:42,811:INFO:Dummy Classifier Imported successfully
2024-12-04 23:09:42,812:INFO:Starting cross validation
2024-12-04 23:09:42,814:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:09:42,929:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,943:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,945:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,950:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:09:42,957:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,971:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,984:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,991:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:09:42,992:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,995:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:42,996:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,000:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:09:43,001:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,006:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,008:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,010:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,014:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,017:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,017:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:09:43,023:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:09:43,023:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,026:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,026:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,027:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,031:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:09:43,037:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,040:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,041:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,049:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:09:43,050:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:09:43,055:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,056:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,056:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,066:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,073:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:09:43,078:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,085:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,097:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,104:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:09:43,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:43,135:INFO:Calculating mean and std
2024-12-04 23:09:43,136:INFO:Creating metrics dataframe
2024-12-04 23:09:43,139:INFO:Uploading results into container
2024-12-04 23:09:43,140:INFO:Uploading model into container now
2024-12-04 23:09:43,141:INFO:_master_model_container: 15
2024-12-04 23:09:43,141:INFO:_display_container: 2
2024-12-04 23:09:43,141:INFO:DummyClassifier(constant=None, random_state=1674, strategy='prior')
2024-12-04 23:09:43,141:INFO:create_model() successfully completed......................................
2024-12-04 23:09:43,232:INFO:SubProcess create_model() end ==================================
2024-12-04 23:09:43,232:INFO:Creating metrics dataframe
2024-12-04 23:09:43,243:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-04 23:09:43,247:INFO:Initializing create_model()
2024-12-04 23:09:43,247:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1674, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:09:43,247:INFO:Checking exceptions
2024-12-04 23:09:43,248:INFO:Importing libraries
2024-12-04 23:09:43,249:INFO:Copying training dataset
2024-12-04 23:09:43,277:INFO:Defining folds
2024-12-04 23:09:43,277:INFO:Declaring metric variables
2024-12-04 23:09:43,278:INFO:Importing untrained model
2024-12-04 23:09:43,278:INFO:Declaring custom model
2024-12-04 23:09:43,279:INFO:Extra Trees Classifier Imported successfully
2024-12-04 23:09:43,280:INFO:Cross validation set to False
2024-12-04 23:09:43,280:INFO:Fitting Model
2024-12-04 23:09:43,938:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1674, verbose=0,
                     warm_start=False)
2024-12-04 23:09:43,939:INFO:create_model() successfully completed......................................
2024-12-04 23:09:44,010:INFO:_master_model_container: 15
2024-12-04 23:09:44,010:INFO:_display_container: 2
2024-12-04 23:09:44,011:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1674, verbose=0,
                     warm_start=False)
2024-12-04 23:09:44,011:INFO:compare_models() successfully completed......................................
2024-12-04 23:09:44,011:INFO:Initializing evaluate_model()
2024-12-04 23:09:44,012:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1674, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-12-04 23:09:44,158:INFO:Initializing plot_model()
2024-12-04 23:09:44,158:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1674, verbose=0,
                     warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-12-04 23:09:44,158:INFO:Checking exceptions
2024-12-04 23:09:44,192:INFO:Preloading libraries
2024-12-04 23:09:44,374:INFO:Copying training dataset
2024-12-04 23:09:44,374:INFO:Plot type: pipeline
2024-12-04 23:09:47,475:INFO:Visual Rendered Successfully
2024-12-04 23:09:47,542:INFO:plot_model() successfully completed......................................
2024-12-04 23:09:47,558:INFO:Initializing plot_model()
2024-12-04 23:09:47,558:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1674, verbose=0,
                     warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 23:09:47,558:INFO:Checking exceptions
2024-12-04 23:09:47,596:INFO:Preloading libraries
2024-12-04 23:09:47,791:INFO:Copying training dataset
2024-12-04 23:09:47,792:INFO:Plot type: auc
2024-12-04 23:09:47,985:INFO:Fitting Model
2024-12-04 23:09:47,988:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-12-04 23:09:47,988:INFO:Scoring test/hold-out set
2024-12-04 23:09:48,377:INFO:Visual Rendered Successfully
2024-12-04 23:09:48,451:INFO:plot_model() successfully completed......................................
2024-12-04 23:09:48,464:INFO:Initializing plot_model()
2024-12-04 23:09:48,464:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1674, verbose=0,
                     warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 23:09:48,464:INFO:Checking exceptions
2024-12-04 23:09:48,498:INFO:Preloading libraries
2024-12-04 23:09:48,662:INFO:Copying training dataset
2024-12-04 23:09:48,663:INFO:Plot type: confusion_matrix
2024-12-04 23:09:48,834:INFO:Fitting Model
2024-12-04 23:09:48,834:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-12-04 23:09:48,835:INFO:Scoring test/hold-out set
2024-12-04 23:09:49,132:INFO:Visual Rendered Successfully
2024-12-04 23:09:49,206:INFO:plot_model() successfully completed......................................
2024-12-04 23:09:49,220:INFO:Initializing predict_model()
2024-12-04 23:09:49,220:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1674, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024BEED86340>)
2024-12-04 23:09:49,220:INFO:Checking exceptions
2024-12-04 23:09:49,220:INFO:Preloading libraries
2024-12-04 23:09:49,409:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:49,430:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:49,454:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:49,562:INFO:Initializing predict_model()
2024-12-04 23:09:49,562:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000024BD72DDE50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1674, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x0000024BEED86340>)
2024-12-04 23:09:49,563:INFO:Checking exceptions
2024-12-04 23:09:49,563:INFO:Preloading libraries
2024-12-04 23:09:49,563:INFO:Set up data.
2024-12-04 23:09:49,583:INFO:Set up index.
2024-12-04 23:09:49,758:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:49,786:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:49,816:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:09:49,963:INFO:Initializing save_model()
2024-12-04 23:09:49,963:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=1674, verbose=0,
                     warm_start=False), model_name=Airflow/models/my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-12-04 23:09:49,963:INFO:Adding model into prep_pipe
2024-12-04 23:09:50,044:INFO:Airflow/models/my_best_pipeline.pkl saved in current working directory
2024-12-04 23:09:50,050:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnicity', 'Family_History',
                                             'Comorbidity_Diabet...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=1674, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-04 23:09:50,050:INFO:save_model() successfully completed......................................
2024-12-04 23:10:42,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:10:42,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:10:42,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:10:42,656:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:10:44,392:INFO:PyCaret ClassificationExperiment
2024-12-04 23:10:44,392:INFO:Logging name: clf-default-name
2024-12-04 23:10:44,392:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-04 23:10:44,392:INFO:version 3.3.2
2024-12-04 23:10:44,392:INFO:Initializing setup()
2024-12-04 23:10:44,392:INFO:self.USI: ee29
2024-12-04 23:10:44,392:INFO:self._variable_keys: {'pipeline', 'X', 'exp_id', 'fold_groups_param', 'log_plots_param', 'target_param', 'gpu_n_jobs_param', 'idx', 'seed', 'html_param', '_available_plots', 'fold_generator', 'fold_shuffle_param', 'is_multiclass', 'y_test', 'X_test', 'gpu_param', 'data', 'fix_imbalance', 'exp_name_log', 'USI', '_ml_usecase', 'y', 'X_train', 'y_train', 'logging_param', 'memory', 'n_jobs_param'}
2024-12-04 23:10:44,392:INFO:Checking environment
2024-12-04 23:10:44,392:INFO:python_version: 3.11.9
2024-12-04 23:10:44,392:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-12-04 23:10:44,392:INFO:machine: AMD64
2024-12-04 23:10:44,419:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-04 23:10:44,429:INFO:Memory: svmem(total=8345964544, available=1174257664, percent=85.9, used=7171706880, free=1174257664)
2024-12-04 23:10:44,430:INFO:Physical Core: 4
2024-12-04 23:10:44,430:INFO:Logical Core: 8
2024-12-04 23:10:44,430:INFO:Checking libraries
2024-12-04 23:10:44,430:INFO:System:
2024-12-04 23:10:44,430:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-12-04 23:10:44,430:INFO:executable: C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Scripts\python.exe
2024-12-04 23:10:44,430:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-04 23:10:44,430:INFO:PyCaret required dependencies:
2024-12-04 23:10:44,470:INFO:                 pip: 24.3.1
2024-12-04 23:10:44,471:INFO:          setuptools: 68.2.0
2024-12-04 23:10:44,471:INFO:             pycaret: 3.3.2
2024-12-04 23:10:44,471:INFO:             IPython: 8.29.0
2024-12-04 23:10:44,471:INFO:          ipywidgets: 8.1.5
2024-12-04 23:10:44,471:INFO:                tqdm: 4.67.0
2024-12-04 23:10:44,471:INFO:               numpy: 1.26.4
2024-12-04 23:10:44,471:INFO:              pandas: 2.1.4
2024-12-04 23:10:44,471:INFO:              jinja2: 3.1.4
2024-12-04 23:10:44,471:INFO:               scipy: 1.11.4
2024-12-04 23:10:44,471:INFO:              joblib: 1.3.2
2024-12-04 23:10:44,471:INFO:             sklearn: 1.4.2
2024-12-04 23:10:44,471:INFO:                pyod: 2.0.2
2024-12-04 23:10:44,471:INFO:            imblearn: 0.12.4
2024-12-04 23:10:44,471:INFO:   category_encoders: 2.6.4
2024-12-04 23:10:44,471:INFO:            lightgbm: 4.5.0
2024-12-04 23:10:44,471:INFO:               numba: 0.60.0
2024-12-04 23:10:44,471:INFO:            requests: 2.32.3
2024-12-04 23:10:44,471:INFO:          matplotlib: 3.7.5
2024-12-04 23:10:44,471:INFO:          scikitplot: 0.3.7
2024-12-04 23:10:44,471:INFO:         yellowbrick: 1.5
2024-12-04 23:10:44,472:INFO:              plotly: 5.24.1
2024-12-04 23:10:44,472:INFO:    plotly-resampler: Not installed
2024-12-04 23:10:44,472:INFO:             kaleido: 0.2.1
2024-12-04 23:10:44,472:INFO:           schemdraw: 0.15
2024-12-04 23:10:44,472:INFO:         statsmodels: 0.14.4
2024-12-04 23:10:44,472:INFO:              sktime: 0.26.0
2024-12-04 23:10:44,472:INFO:               tbats: 1.1.3
2024-12-04 23:10:44,472:INFO:            pmdarima: 2.0.4
2024-12-04 23:10:44,472:INFO:              psutil: 6.1.0
2024-12-04 23:10:44,472:INFO:          markupsafe: 2.1.5
2024-12-04 23:10:44,472:INFO:             pickle5: Not installed
2024-12-04 23:10:44,472:INFO:         cloudpickle: 3.1.0
2024-12-04 23:10:44,472:INFO:         deprecation: 2.1.0
2024-12-04 23:10:44,472:INFO:              xxhash: 3.5.0
2024-12-04 23:10:44,472:INFO:           wurlitzer: Not installed
2024-12-04 23:10:44,472:INFO:PyCaret optional dependencies:
2024-12-04 23:10:44,491:INFO:                shap: Not installed
2024-12-04 23:10:44,492:INFO:           interpret: Not installed
2024-12-04 23:10:44,492:INFO:                umap: Not installed
2024-12-04 23:10:44,492:INFO:     ydata_profiling: Not installed
2024-12-04 23:10:44,492:INFO:  explainerdashboard: Not installed
2024-12-04 23:10:44,492:INFO:             autoviz: 0.1.905
2024-12-04 23:10:44,492:INFO:           fairlearn: Not installed
2024-12-04 23:10:44,492:INFO:          deepchecks: Not installed
2024-12-04 23:10:44,492:INFO:             xgboost: 1.6.2
2024-12-04 23:10:44,492:INFO:            catboost: Not installed
2024-12-04 23:10:44,492:INFO:              kmodes: Not installed
2024-12-04 23:10:44,492:INFO:             mlxtend: Not installed
2024-12-04 23:10:44,492:INFO:       statsforecast: Not installed
2024-12-04 23:10:44,492:INFO:        tune_sklearn: Not installed
2024-12-04 23:10:44,492:INFO:                 ray: Not installed
2024-12-04 23:10:44,492:INFO:            hyperopt: Not installed
2024-12-04 23:10:44,492:INFO:              optuna: Not installed
2024-12-04 23:10:44,492:INFO:               skopt: Not installed
2024-12-04 23:10:44,492:INFO:              mlflow: Not installed
2024-12-04 23:10:44,492:INFO:              gradio: Not installed
2024-12-04 23:10:44,492:INFO:             fastapi: Not installed
2024-12-04 23:10:44,492:INFO:             uvicorn: Not installed
2024-12-04 23:10:44,492:INFO:              m2cgen: Not installed
2024-12-04 23:10:44,492:INFO:           evidently: Not installed
2024-12-04 23:10:44,492:INFO:               fugue: Not installed
2024-12-04 23:10:44,492:INFO:           streamlit: Not installed
2024-12-04 23:10:44,492:INFO:             prophet: Not installed
2024-12-04 23:10:44,492:INFO:None
2024-12-04 23:10:44,493:INFO:Set up data.
2024-12-04 23:10:44,509:INFO:Set up folding strategy.
2024-12-04 23:10:44,510:INFO:Set up train/test split.
2024-12-04 23:10:44,533:INFO:Set up index.
2024-12-04 23:10:44,533:INFO:Assigning column types.
2024-12-04 23:10:44,546:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-04 23:10:44,589:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 23:10:44,592:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:10:44,628:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:10:44,974:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:10:45,020:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 23:10:45,021:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:10:45,048:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:10:45,050:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:10:45,051:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-04 23:10:45,092:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:10:45,117:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:10:45,120:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:10:45,161:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:10:45,187:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:10:45,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:10:45,190:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-04 23:10:45,263:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:10:45,266:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:10:45,338:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:10:45,340:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:10:45,343:INFO:Preparing preprocessing pipeline...
2024-12-04 23:10:45,350:INFO:Set up label encoding.
2024-12-04 23:10:45,350:INFO:Set up simple imputation.
2024-12-04 23:10:45,401:INFO:Finished creating preprocessing pipeline.
2024-12-04 23:10:45,406:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-04 23:10:45,406:INFO:Creating final display dataframe.
2024-12-04 23:10:45,554:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               2077
1                        Target                                          Treatment
2                   Target type                                         Multiclass
3                Target mapping  Chemotherapy: 0, Radiation Therapy: 1, Surgery...
4           Original data shape                                        (11592, 36)
5        Transformed data shape                                        (11592, 36)
6   Transformed train set shape                                         (8114, 36)
7    Transformed test set shape                                         (3478, 36)
8              Numeric features                                                 35
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               ee29
2024-12-04 23:10:45,631:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:10:45,633:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:10:45,709:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:10:45,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:10:45,713:INFO:setup() successfully completed in 1.33s...............
2024-12-04 23:10:45,713:INFO:Initializing compare_models()
2024-12-04 23:10:45,713:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-12-04 23:10:45,713:INFO:Checking exceptions
2024-12-04 23:10:45,722:INFO:Preparing display monitor
2024-12-04 23:10:45,726:INFO:Initializing Logistic Regression
2024-12-04 23:10:45,726:INFO:Total runtime is 0.0 minutes
2024-12-04 23:10:45,726:INFO:SubProcess create_model() called ==================================
2024-12-04 23:10:45,726:INFO:Initializing create_model()
2024-12-04 23:10:45,726:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:10:45,726:INFO:Checking exceptions
2024-12-04 23:10:45,727:INFO:Importing libraries
2024-12-04 23:10:45,727:INFO:Copying training dataset
2024-12-04 23:10:45,739:INFO:Defining folds
2024-12-04 23:10:45,739:INFO:Declaring metric variables
2024-12-04 23:10:45,740:INFO:Importing untrained model
2024-12-04 23:10:45,740:INFO:Logistic Regression Imported successfully
2024-12-04 23:10:45,740:INFO:Starting cross validation
2024-12-04 23:10:45,741:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:10:57,513:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:10:57,517:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:10:57,522:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,525:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,529:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:10:57,530:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:10:57,534:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,535:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:10:57,536:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,538:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:10:57,543:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,545:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:10:57,546:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,547:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,547:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,552:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,555:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,557:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,558:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,561:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,564:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,566:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,567:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,567:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,573:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,576:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,577:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,578:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,587:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,588:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,859:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:10:57,862:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,864:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:10:57,868:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,869:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,877:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,878:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,885:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:57,903:INFO:Calculating mean and std
2024-12-04 23:10:57,905:INFO:Creating metrics dataframe
2024-12-04 23:10:57,908:INFO:Uploading results into container
2024-12-04 23:10:57,908:INFO:Uploading model into container now
2024-12-04 23:10:57,909:INFO:_master_model_container: 1
2024-12-04 23:10:57,909:INFO:_display_container: 2
2024-12-04 23:10:57,909:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2077, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-04 23:10:57,909:INFO:create_model() successfully completed......................................
2024-12-04 23:10:57,976:INFO:SubProcess create_model() end ==================================
2024-12-04 23:10:57,976:INFO:Creating metrics dataframe
2024-12-04 23:10:57,981:INFO:Initializing K Neighbors Classifier
2024-12-04 23:10:57,981:INFO:Total runtime is 0.2042493502298991 minutes
2024-12-04 23:10:57,981:INFO:SubProcess create_model() called ==================================
2024-12-04 23:10:57,982:INFO:Initializing create_model()
2024-12-04 23:10:57,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:10:57,982:INFO:Checking exceptions
2024-12-04 23:10:57,982:INFO:Importing libraries
2024-12-04 23:10:57,982:INFO:Copying training dataset
2024-12-04 23:10:57,998:INFO:Defining folds
2024-12-04 23:10:57,998:INFO:Declaring metric variables
2024-12-04 23:10:57,998:INFO:Importing untrained model
2024-12-04 23:10:57,999:INFO:K Neighbors Classifier Imported successfully
2024-12-04 23:10:57,999:INFO:Starting cross validation
2024-12-04 23:10:58,000:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:10:58,761:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,798:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,798:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,805:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,810:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,815:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,824:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,826:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,830:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,884:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,898:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,906:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,915:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,915:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,918:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,920:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,930:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,931:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,935:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,940:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,945:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,948:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,961:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:58,975:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,117:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,123:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,126:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,131:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,134:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,138:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,153:INFO:Calculating mean and std
2024-12-04 23:10:59,154:INFO:Creating metrics dataframe
2024-12-04 23:10:59,155:INFO:Uploading results into container
2024-12-04 23:10:59,156:INFO:Uploading model into container now
2024-12-04 23:10:59,156:INFO:_master_model_container: 2
2024-12-04 23:10:59,156:INFO:_display_container: 2
2024-12-04 23:10:59,156:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-04 23:10:59,156:INFO:create_model() successfully completed......................................
2024-12-04 23:10:59,219:INFO:SubProcess create_model() end ==================================
2024-12-04 23:10:59,220:INFO:Creating metrics dataframe
2024-12-04 23:10:59,400:INFO:Initializing Naive Bayes
2024-12-04 23:10:59,400:INFO:Total runtime is 0.22790101766586304 minutes
2024-12-04 23:10:59,401:INFO:SubProcess create_model() called ==================================
2024-12-04 23:10:59,401:INFO:Initializing create_model()
2024-12-04 23:10:59,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:10:59,401:INFO:Checking exceptions
2024-12-04 23:10:59,401:INFO:Importing libraries
2024-12-04 23:10:59,401:INFO:Copying training dataset
2024-12-04 23:10:59,422:INFO:Defining folds
2024-12-04 23:10:59,422:INFO:Declaring metric variables
2024-12-04 23:10:59,422:INFO:Importing untrained model
2024-12-04 23:10:59,422:INFO:Naive Bayes Imported successfully
2024-12-04 23:10:59,422:INFO:Starting cross validation
2024-12-04 23:10:59,424:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:10:59,549:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,568:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,571:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,575:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,580:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,582:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,587:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,593:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,594:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,596:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,599:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,600:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,604:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,608:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,609:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,611:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,614:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,617:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,622:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,629:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,631:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,668:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,681:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,695:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,703:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,712:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,712:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,719:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,722:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,729:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:10:59,739:INFO:Calculating mean and std
2024-12-04 23:10:59,740:INFO:Creating metrics dataframe
2024-12-04 23:10:59,741:INFO:Uploading results into container
2024-12-04 23:10:59,742:INFO:Uploading model into container now
2024-12-04 23:10:59,742:INFO:_master_model_container: 3
2024-12-04 23:10:59,742:INFO:_display_container: 2
2024-12-04 23:10:59,742:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 23:10:59,742:INFO:create_model() successfully completed......................................
2024-12-04 23:10:59,821:INFO:SubProcess create_model() end ==================================
2024-12-04 23:10:59,821:INFO:Creating metrics dataframe
2024-12-04 23:10:59,827:INFO:Initializing Decision Tree Classifier
2024-12-04 23:10:59,827:INFO:Total runtime is 0.2350079576174418 minutes
2024-12-04 23:10:59,827:INFO:SubProcess create_model() called ==================================
2024-12-04 23:10:59,828:INFO:Initializing create_model()
2024-12-04 23:10:59,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:10:59,828:INFO:Checking exceptions
2024-12-04 23:10:59,828:INFO:Importing libraries
2024-12-04 23:10:59,828:INFO:Copying training dataset
2024-12-04 23:10:59,845:INFO:Defining folds
2024-12-04 23:10:59,845:INFO:Declaring metric variables
2024-12-04 23:10:59,845:INFO:Importing untrained model
2024-12-04 23:10:59,846:INFO:Decision Tree Classifier Imported successfully
2024-12-04 23:10:59,846:INFO:Starting cross validation
2024-12-04 23:10:59,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:11:00,550:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,564:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,576:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,588:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,595:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,601:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,612:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,614:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,629:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,755:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,768:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,770:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,780:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,784:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,787:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,797:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,798:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,801:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,811:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,813:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,819:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,824:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,832:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:00,845:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:01,121:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:01,129:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:01,135:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:01,144:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:01,152:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:01,159:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:01,170:INFO:Calculating mean and std
2024-12-04 23:11:01,170:INFO:Creating metrics dataframe
2024-12-04 23:11:01,173:INFO:Uploading results into container
2024-12-04 23:11:01,174:INFO:Uploading model into container now
2024-12-04 23:11:01,174:INFO:_master_model_container: 4
2024-12-04 23:11:01,175:INFO:_display_container: 2
2024-12-04 23:11:01,175:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=2077, splitter='best')
2024-12-04 23:11:01,175:INFO:create_model() successfully completed......................................
2024-12-04 23:11:01,241:INFO:SubProcess create_model() end ==================================
2024-12-04 23:11:01,242:INFO:Creating metrics dataframe
2024-12-04 23:11:01,244:INFO:Initializing SVM - Linear Kernel
2024-12-04 23:11:01,244:INFO:Total runtime is 0.25863036314646404 minutes
2024-12-04 23:11:01,244:INFO:SubProcess create_model() called ==================================
2024-12-04 23:11:01,244:INFO:Initializing create_model()
2024-12-04 23:11:01,244:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:11:01,244:INFO:Checking exceptions
2024-12-04 23:11:01,245:INFO:Importing libraries
2024-12-04 23:11:01,245:INFO:Copying training dataset
2024-12-04 23:11:01,260:INFO:Defining folds
2024-12-04 23:11:01,260:INFO:Declaring metric variables
2024-12-04 23:11:01,261:INFO:Importing untrained model
2024-12-04 23:11:01,261:INFO:SVM - Linear Kernel Imported successfully
2024-12-04 23:11:01,261:INFO:Starting cross validation
2024-12-04 23:11:01,262:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:11:02,417:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:02,423:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,425:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:02,429:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,435:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,444:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,448:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,448:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:02,453:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,495:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,500:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,514:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,556:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:02,558:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:02,562:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,563:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,575:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,615:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,618:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:02,624:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,625:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,628:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,637:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:02,649:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,013:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:03,018:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,043:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:03,048:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,059:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,072:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,096:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,376:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:03,382:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,398:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,409:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,447:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:03,449:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,457:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,466:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,482:INFO:Calculating mean and std
2024-12-04 23:11:03,483:INFO:Creating metrics dataframe
2024-12-04 23:11:03,486:INFO:Uploading results into container
2024-12-04 23:11:03,487:INFO:Uploading model into container now
2024-12-04 23:11:03,487:INFO:_master_model_container: 5
2024-12-04 23:11:03,487:INFO:_display_container: 2
2024-12-04 23:11:03,488:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2077, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-04 23:11:03,488:INFO:create_model() successfully completed......................................
2024-12-04 23:11:03,554:INFO:SubProcess create_model() end ==================================
2024-12-04 23:11:03,554:INFO:Creating metrics dataframe
2024-12-04 23:11:03,557:INFO:Initializing Ridge Classifier
2024-12-04 23:11:03,557:INFO:Total runtime is 0.2971864342689514 minutes
2024-12-04 23:11:03,557:INFO:SubProcess create_model() called ==================================
2024-12-04 23:11:03,557:INFO:Initializing create_model()
2024-12-04 23:11:03,557:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:11:03,557:INFO:Checking exceptions
2024-12-04 23:11:03,557:INFO:Importing libraries
2024-12-04 23:11:03,557:INFO:Copying training dataset
2024-12-04 23:11:03,571:INFO:Defining folds
2024-12-04 23:11:03,571:INFO:Declaring metric variables
2024-12-04 23:11:03,571:INFO:Importing untrained model
2024-12-04 23:11:03,572:INFO:Ridge Classifier Imported successfully
2024-12-04 23:11:03,572:INFO:Starting cross validation
2024-12-04 23:11:03,573:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:11:03,700:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:03,706:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,714:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:03,715:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:03,719:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,719:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,720:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,721:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:03,728:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,731:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:03,732:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,736:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:03,736:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,740:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,742:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,742:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,744:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:03,747:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,748:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,749:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,749:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,750:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,758:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,761:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,761:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,761:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,763:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,777:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,777:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,777:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,778:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,841:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:03,844:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:03,844:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,849:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,854:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,857:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,861:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,866:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:03,888:INFO:Calculating mean and std
2024-12-04 23:11:03,888:INFO:Creating metrics dataframe
2024-12-04 23:11:03,890:INFO:Uploading results into container
2024-12-04 23:11:03,891:INFO:Uploading model into container now
2024-12-04 23:11:03,891:INFO:_master_model_container: 6
2024-12-04 23:11:03,891:INFO:_display_container: 2
2024-12-04 23:11:03,892:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2077, solver='auto',
                tol=0.0001)
2024-12-04 23:11:03,892:INFO:create_model() successfully completed......................................
2024-12-04 23:11:03,967:INFO:SubProcess create_model() end ==================================
2024-12-04 23:11:03,968:INFO:Creating metrics dataframe
2024-12-04 23:11:03,970:INFO:Initializing Random Forest Classifier
2024-12-04 23:11:03,970:INFO:Total runtime is 0.30405643781026204 minutes
2024-12-04 23:11:03,970:INFO:SubProcess create_model() called ==================================
2024-12-04 23:11:03,970:INFO:Initializing create_model()
2024-12-04 23:11:03,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:11:03,970:INFO:Checking exceptions
2024-12-04 23:11:03,970:INFO:Importing libraries
2024-12-04 23:11:03,970:INFO:Copying training dataset
2024-12-04 23:11:03,987:INFO:Defining folds
2024-12-04 23:11:03,987:INFO:Declaring metric variables
2024-12-04 23:11:03,988:INFO:Importing untrained model
2024-12-04 23:11:03,988:INFO:Random Forest Classifier Imported successfully
2024-12-04 23:11:03,989:INFO:Starting cross validation
2024-12-04 23:11:03,990:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:11:12,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,123:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,174:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,183:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,194:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,194:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,201:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,206:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,206:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,217:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,222:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,223:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,233:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,235:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,236:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,247:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,248:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,262:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,263:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,376:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,391:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:12,435:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:14,326:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:14,336:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:14,349:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:14,371:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:14,378:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:14,385:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:14,403:INFO:Calculating mean and std
2024-12-04 23:11:14,404:INFO:Creating metrics dataframe
2024-12-04 23:11:14,406:INFO:Uploading results into container
2024-12-04 23:11:14,406:INFO:Uploading model into container now
2024-12-04 23:11:14,407:INFO:_master_model_container: 7
2024-12-04 23:11:14,407:INFO:_display_container: 2
2024-12-04 23:11:14,407:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=2077, verbose=0,
                       warm_start=False)
2024-12-04 23:11:14,408:INFO:create_model() successfully completed......................................
2024-12-04 23:11:14,495:INFO:SubProcess create_model() end ==================================
2024-12-04 23:11:14,495:INFO:Creating metrics dataframe
2024-12-04 23:11:14,498:INFO:Initializing Quadratic Discriminant Analysis
2024-12-04 23:11:14,498:INFO:Total runtime is 0.4795305132865906 minutes
2024-12-04 23:11:14,498:INFO:SubProcess create_model() called ==================================
2024-12-04 23:11:14,498:INFO:Initializing create_model()
2024-12-04 23:11:14,498:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:11:14,498:INFO:Checking exceptions
2024-12-04 23:11:14,498:INFO:Importing libraries
2024-12-04 23:11:14,498:INFO:Copying training dataset
2024-12-04 23:11:14,511:INFO:Defining folds
2024-12-04 23:11:14,511:INFO:Declaring metric variables
2024-12-04 23:11:14,512:INFO:Importing untrained model
2024-12-04 23:11:14,512:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-04 23:11:14,512:INFO:Starting cross validation
2024-12-04 23:11:14,513:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:11:16,055:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:16,055:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:16,055:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:16,055:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:16,055:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:16,055:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:16,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:16,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,061:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,065:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,068:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,069:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,069:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,069:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,069:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,075:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,078:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,079:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,080:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,081:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,081:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,083:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,091:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,096:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:16,101:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,113:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,121:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,157:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:16,160:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,166:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:16,168:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,170:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,174:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,179:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,187:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:16,210:INFO:Calculating mean and std
2024-12-04 23:11:16,211:INFO:Creating metrics dataframe
2024-12-04 23:11:16,214:INFO:Uploading results into container
2024-12-04 23:11:16,214:INFO:Uploading model into container now
2024-12-04 23:11:16,214:INFO:_master_model_container: 8
2024-12-04 23:11:16,214:INFO:_display_container: 2
2024-12-04 23:11:16,215:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-04 23:11:16,215:INFO:create_model() successfully completed......................................
2024-12-04 23:11:16,272:INFO:SubProcess create_model() end ==================================
2024-12-04 23:11:16,272:INFO:Creating metrics dataframe
2024-12-04 23:11:16,274:INFO:Initializing Ada Boost Classifier
2024-12-04 23:11:16,275:INFO:Total runtime is 0.5091486175855001 minutes
2024-12-04 23:11:16,275:INFO:SubProcess create_model() called ==================================
2024-12-04 23:11:16,275:INFO:Initializing create_model()
2024-12-04 23:11:16,275:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:11:16,275:INFO:Checking exceptions
2024-12-04 23:11:16,275:INFO:Importing libraries
2024-12-04 23:11:16,275:INFO:Copying training dataset
2024-12-04 23:11:16,288:INFO:Defining folds
2024-12-04 23:11:16,288:INFO:Declaring metric variables
2024-12-04 23:11:16,288:INFO:Importing untrained model
2024-12-04 23:11:16,288:INFO:Ada Boost Classifier Imported successfully
2024-12-04 23:11:16,289:INFO:Starting cross validation
2024-12-04 23:11:16,289:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:11:16,381:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:11:16,391:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:11:16,393:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:11:16,398:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:11:16,405:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:11:16,412:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:11:16,414:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:11:16,438:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:11:18,230:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:18,236:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,239:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:18,245:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,249:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,262:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,274:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,286:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,339:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:11:18,358:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:18,364:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,365:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:11:18,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,399:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,576:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:18,581:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,590:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:18,595:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,597:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,609:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,611:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,622:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,641:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:18,647:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,660:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,674:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,696:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:18,703:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,716:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,730:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,777:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:18,783:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,797:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:18,809:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:19,846:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:19,852:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:19,864:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:19,871:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:19,875:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:19,880:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:19,893:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:19,905:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:19,923:INFO:Calculating mean and std
2024-12-04 23:11:19,924:INFO:Creating metrics dataframe
2024-12-04 23:11:19,929:INFO:Uploading results into container
2024-12-04 23:11:19,930:INFO:Uploading model into container now
2024-12-04 23:11:19,931:INFO:_master_model_container: 9
2024-12-04 23:11:19,931:INFO:_display_container: 2
2024-12-04 23:11:19,931:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=2077)
2024-12-04 23:11:19,931:INFO:create_model() successfully completed......................................
2024-12-04 23:11:19,999:INFO:SubProcess create_model() end ==================================
2024-12-04 23:11:19,999:INFO:Creating metrics dataframe
2024-12-04 23:11:20,002:INFO:Initializing Gradient Boosting Classifier
2024-12-04 23:11:20,002:INFO:Total runtime is 0.5712611079216003 minutes
2024-12-04 23:11:20,002:INFO:SubProcess create_model() called ==================================
2024-12-04 23:11:20,002:INFO:Initializing create_model()
2024-12-04 23:11:20,002:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:11:20,002:INFO:Checking exceptions
2024-12-04 23:11:20,002:INFO:Importing libraries
2024-12-04 23:11:20,002:INFO:Copying training dataset
2024-12-04 23:11:20,019:INFO:Defining folds
2024-12-04 23:11:20,019:INFO:Declaring metric variables
2024-12-04 23:11:20,019:INFO:Importing untrained model
2024-12-04 23:11:20,019:INFO:Gradient Boosting Classifier Imported successfully
2024-12-04 23:11:20,020:INFO:Starting cross validation
2024-12-04 23:11:20,020:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:11:53,573:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:53,579:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:53,630:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:53,635:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:53,642:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:53,644:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:53,656:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:53,670:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:54,752:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:54,758:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:54,771:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:54,785:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:56,696:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:56,701:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:56,715:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:56,727:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:58,484:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:11:58,488:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:58,499:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:11:58,510:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:00,017:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:00,026:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:00,046:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:00,057:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:00,516:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:00,520:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:00,528:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:00,536:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:00,948:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:00,952:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:00,965:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:00,972:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:16,763:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:16,766:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:16,773:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:16,780:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:16,914:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:16,917:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:16,922:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:16,927:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:16,940:INFO:Calculating mean and std
2024-12-04 23:12:16,940:INFO:Creating metrics dataframe
2024-12-04 23:12:16,942:INFO:Uploading results into container
2024-12-04 23:12:16,943:INFO:Uploading model into container now
2024-12-04 23:12:16,943:INFO:_master_model_container: 10
2024-12-04 23:12:16,943:INFO:_display_container: 2
2024-12-04 23:12:16,943:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2077, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-04 23:12:16,943:INFO:create_model() successfully completed......................................
2024-12-04 23:12:17,001:INFO:SubProcess create_model() end ==================================
2024-12-04 23:12:17,001:INFO:Creating metrics dataframe
2024-12-04 23:12:17,004:INFO:Initializing Linear Discriminant Analysis
2024-12-04 23:12:17,004:INFO:Total runtime is 1.5212960561116535 minutes
2024-12-04 23:12:17,004:INFO:SubProcess create_model() called ==================================
2024-12-04 23:12:17,004:INFO:Initializing create_model()
2024-12-04 23:12:17,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:12:17,004:INFO:Checking exceptions
2024-12-04 23:12:17,004:INFO:Importing libraries
2024-12-04 23:12:17,004:INFO:Copying training dataset
2024-12-04 23:12:17,017:INFO:Defining folds
2024-12-04 23:12:17,018:INFO:Declaring metric variables
2024-12-04 23:12:17,018:INFO:Importing untrained model
2024-12-04 23:12:17,018:INFO:Linear Discriminant Analysis Imported successfully
2024-12-04 23:12:17,018:INFO:Starting cross validation
2024-12-04 23:12:17,019:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:12:17,162:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:17,163:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:17,164:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:17,168:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,169:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,170:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:17,174:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,169:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:17,183:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,184:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,185:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,188:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,191:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,191:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,193:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:17,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,198:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,198:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,200:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,204:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,206:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,209:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:17,212:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,215:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,217:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,226:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,231:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,243:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,294:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:17,294:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:12:17,296:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,298:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,304:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,305:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,310:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,311:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:17,329:INFO:Calculating mean and std
2024-12-04 23:12:17,330:INFO:Creating metrics dataframe
2024-12-04 23:12:17,331:INFO:Uploading results into container
2024-12-04 23:12:17,331:INFO:Uploading model into container now
2024-12-04 23:12:17,331:INFO:_master_model_container: 11
2024-12-04 23:12:17,331:INFO:_display_container: 2
2024-12-04 23:12:17,333:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-04 23:12:17,333:INFO:create_model() successfully completed......................................
2024-12-04 23:12:17,387:INFO:SubProcess create_model() end ==================================
2024-12-04 23:12:17,387:INFO:Creating metrics dataframe
2024-12-04 23:12:17,390:INFO:Initializing Extra Trees Classifier
2024-12-04 23:12:17,390:INFO:Total runtime is 1.5277238686879475 minutes
2024-12-04 23:12:17,390:INFO:SubProcess create_model() called ==================================
2024-12-04 23:12:17,390:INFO:Initializing create_model()
2024-12-04 23:12:17,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:12:17,390:INFO:Checking exceptions
2024-12-04 23:12:17,390:INFO:Importing libraries
2024-12-04 23:12:17,390:INFO:Copying training dataset
2024-12-04 23:12:17,402:INFO:Defining folds
2024-12-04 23:12:17,402:INFO:Declaring metric variables
2024-12-04 23:12:17,403:INFO:Importing untrained model
2024-12-04 23:12:17,403:INFO:Extra Trees Classifier Imported successfully
2024-12-04 23:12:17,403:INFO:Starting cross validation
2024-12-04 23:12:17,404:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:12:21,943:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:21,946:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:21,957:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:21,965:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:21,973:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:21,976:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:21,984:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:21,987:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:21,987:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:21,998:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,013:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,014:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,083:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,095:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,115:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,163:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,170:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,175:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,182:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,186:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,191:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,200:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:22,213:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:23,227:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:23,236:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:23,241:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:23,243:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:23,251:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:23,259:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:23,276:INFO:Calculating mean and std
2024-12-04 23:12:23,277:INFO:Creating metrics dataframe
2024-12-04 23:12:23,280:INFO:Uploading results into container
2024-12-04 23:12:23,281:INFO:Uploading model into container now
2024-12-04 23:12:23,281:INFO:_master_model_container: 12
2024-12-04 23:12:23,281:INFO:_display_container: 2
2024-12-04 23:12:23,282:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=2077, verbose=0,
                     warm_start=False)
2024-12-04 23:12:23,282:INFO:create_model() successfully completed......................................
2024-12-04 23:12:23,367:INFO:SubProcess create_model() end ==================================
2024-12-04 23:12:23,367:INFO:Creating metrics dataframe
2024-12-04 23:12:23,370:INFO:Initializing Extreme Gradient Boosting
2024-12-04 23:12:23,370:INFO:Total runtime is 1.6274031400680542 minutes
2024-12-04 23:12:23,370:INFO:SubProcess create_model() called ==================================
2024-12-04 23:12:23,370:INFO:Initializing create_model()
2024-12-04 23:12:23,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:12:23,370:INFO:Checking exceptions
2024-12-04 23:12:23,370:INFO:Importing libraries
2024-12-04 23:12:23,370:INFO:Copying training dataset
2024-12-04 23:12:23,385:INFO:Defining folds
2024-12-04 23:12:23,385:INFO:Declaring metric variables
2024-12-04 23:12:23,385:INFO:Importing untrained model
2024-12-04 23:12:23,386:INFO:Extreme Gradient Boosting Imported successfully
2024-12-04 23:12:23,386:INFO:Starting cross validation
2024-12-04 23:12:23,387:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:12:48,254:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:48,287:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:48,301:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:49,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:49,211:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:49,225:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:49,821:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:49,835:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:49,851:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:50,015:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:50,031:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:50,045:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:50,123:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:50,138:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:50,152:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:50,229:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:50,243:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:50,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:51,426:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:51,438:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:51,450:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:51,852:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:51,865:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:12:51,873:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:03,072:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:03,079:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:03,086:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:03,349:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:03,355:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:03,361:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:03,374:INFO:Calculating mean and std
2024-12-04 23:13:03,374:INFO:Creating metrics dataframe
2024-12-04 23:13:03,376:INFO:Uploading results into container
2024-12-04 23:13:03,376:INFO:Uploading model into container now
2024-12-04 23:13:03,376:INFO:_master_model_container: 13
2024-12-04 23:13:03,376:INFO:_display_container: 2
2024-12-04 23:13:03,377:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic',
              predictor=None, random_state=2077, reg_alpha=None, ...)
2024-12-04 23:13:03,377:INFO:create_model() successfully completed......................................
2024-12-04 23:13:03,433:INFO:SubProcess create_model() end ==================================
2024-12-04 23:13:03,433:INFO:Creating metrics dataframe
2024-12-04 23:13:03,436:INFO:Initializing Light Gradient Boosting Machine
2024-12-04 23:13:03,436:INFO:Total runtime is 2.295170362790426 minutes
2024-12-04 23:13:03,436:INFO:SubProcess create_model() called ==================================
2024-12-04 23:13:03,436:INFO:Initializing create_model()
2024-12-04 23:13:03,436:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:13:03,436:INFO:Checking exceptions
2024-12-04 23:13:03,436:INFO:Importing libraries
2024-12-04 23:13:03,436:INFO:Copying training dataset
2024-12-04 23:13:03,449:INFO:Defining folds
2024-12-04 23:13:03,449:INFO:Declaring metric variables
2024-12-04 23:13:03,449:INFO:Importing untrained model
2024-12-04 23:13:03,450:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-04 23:13:03,450:INFO:Starting cross validation
2024-12-04 23:13:03,451:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:13:09,644:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:09,658:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:09,673:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:09,715:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:09,727:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:09,739:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:09,763:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:09,776:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:09,791:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:09,971:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:09,985:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:10,000:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:10,791:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:10,803:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:10,817:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:11,089:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:11,103:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:11,105:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:11,105:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:11,117:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:11,120:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:11,134:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,533:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,545:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,557:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,568:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,581:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,594:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,613:INFO:Calculating mean and std
2024-12-04 23:13:12,614:INFO:Creating metrics dataframe
2024-12-04 23:13:12,616:INFO:Uploading results into container
2024-12-04 23:13:12,617:INFO:Uploading model into container now
2024-12-04 23:13:12,618:INFO:_master_model_container: 14
2024-12-04 23:13:12,618:INFO:_display_container: 2
2024-12-04 23:13:12,619:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2077, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-04 23:13:12,619:INFO:create_model() successfully completed......................................
2024-12-04 23:13:12,704:INFO:SubProcess create_model() end ==================================
2024-12-04 23:13:12,704:INFO:Creating metrics dataframe
2024-12-04 23:13:12,706:INFO:Initializing Dummy Classifier
2024-12-04 23:13:12,707:INFO:Total runtime is 2.449663559595744 minutes
2024-12-04 23:13:12,707:INFO:SubProcess create_model() called ==================================
2024-12-04 23:13:12,707:INFO:Initializing create_model()
2024-12-04 23:13:12,707:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DA448AA890>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:13:12,707:INFO:Checking exceptions
2024-12-04 23:13:12,707:INFO:Importing libraries
2024-12-04 23:13:12,707:INFO:Copying training dataset
2024-12-04 23:13:12,722:INFO:Defining folds
2024-12-04 23:13:12,722:INFO:Declaring metric variables
2024-12-04 23:13:12,723:INFO:Importing untrained model
2024-12-04 23:13:12,723:INFO:Dummy Classifier Imported successfully
2024-12-04 23:13:12,723:INFO:Starting cross validation
2024-12-04 23:13:12,724:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:13:12,835:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,837:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,846:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,846:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,848:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,852:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,852:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,852:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,856:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:13:12,860:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,860:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:13:12,861:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,861:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,863:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,861:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,865:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,865:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,866:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,867:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:13:12,869:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:13:12,874:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,874:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:13:12,875:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:13:12,876:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,879:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,880:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,882:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,886:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:13:12,891:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,895:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,900:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:13:12,907:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,940:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,940:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,947:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,948:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,953:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:13:12,954:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:13:12,958:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,959:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:12,977:INFO:Calculating mean and std
2024-12-04 23:13:12,978:INFO:Creating metrics dataframe
2024-12-04 23:13:12,979:INFO:Uploading results into container
2024-12-04 23:13:12,980:INFO:Uploading model into container now
2024-12-04 23:13:12,980:INFO:_master_model_container: 15
2024-12-04 23:13:12,980:INFO:_display_container: 2
2024-12-04 23:13:12,980:INFO:DummyClassifier(constant=None, random_state=2077, strategy='prior')
2024-12-04 23:13:12,980:INFO:create_model() successfully completed......................................
2024-12-04 23:13:13,035:INFO:SubProcess create_model() end ==================================
2024-12-04 23:13:13,035:INFO:Creating metrics dataframe
2024-12-04 23:13:13,041:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-04 23:13:13,043:INFO:Initializing create_model()
2024-12-04 23:13:13,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=DummyClassifier(constant=None, random_state=2077, strategy='prior'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:13:13,043:INFO:Checking exceptions
2024-12-04 23:13:13,043:INFO:Importing libraries
2024-12-04 23:13:13,044:INFO:Copying training dataset
2024-12-04 23:13:13,057:INFO:Defining folds
2024-12-04 23:13:13,057:INFO:Declaring metric variables
2024-12-04 23:13:13,057:INFO:Importing untrained model
2024-12-04 23:13:13,057:INFO:Declaring custom model
2024-12-04 23:13:13,058:INFO:Dummy Classifier Imported successfully
2024-12-04 23:13:13,058:INFO:Cross validation set to False
2024-12-04 23:13:13,058:INFO:Fitting Model
2024-12-04 23:13:13,073:INFO:DummyClassifier(constant=None, random_state=2077, strategy='prior')
2024-12-04 23:13:13,073:INFO:create_model() successfully completed......................................
2024-12-04 23:13:13,144:INFO:_master_model_container: 15
2024-12-04 23:13:13,145:INFO:_display_container: 2
2024-12-04 23:13:13,145:INFO:DummyClassifier(constant=None, random_state=2077, strategy='prior')
2024-12-04 23:13:13,145:INFO:compare_models() successfully completed......................................
2024-12-04 23:13:13,146:INFO:Initializing evaluate_model()
2024-12-04 23:13:13,146:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=DummyClassifier(constant=None, random_state=2077, strategy='prior'), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-12-04 23:13:13,324:INFO:Initializing plot_model()
2024-12-04 23:13:13,324:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=DummyClassifier(constant=None, random_state=2077, strategy='prior'), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-12-04 23:13:13,324:INFO:Checking exceptions
2024-12-04 23:13:13,331:INFO:Preloading libraries
2024-12-04 23:13:13,332:INFO:Copying training dataset
2024-12-04 23:13:13,332:INFO:Plot type: pipeline
2024-12-04 23:13:13,900:INFO:Visual Rendered Successfully
2024-12-04 23:13:13,970:INFO:plot_model() successfully completed......................................
2024-12-04 23:13:13,971:INFO:Initializing plot_model()
2024-12-04 23:13:13,971:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=DummyClassifier(constant=None, random_state=2077, strategy='prior'), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 23:13:13,971:INFO:Checking exceptions
2024-12-04 23:13:13,976:INFO:Preloading libraries
2024-12-04 23:13:13,977:INFO:Copying training dataset
2024-12-04 23:13:13,977:INFO:Plot type: auc
2024-12-04 23:13:14,164:INFO:Fitting Model
2024-12-04 23:13:14,165:INFO:Scoring test/hold-out set
2024-12-04 23:13:14,441:INFO:Visual Rendered Successfully
2024-12-04 23:13:14,506:INFO:plot_model() successfully completed......................................
2024-12-04 23:13:14,506:INFO:Initializing plot_model()
2024-12-04 23:13:14,506:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=DummyClassifier(constant=None, random_state=2077, strategy='prior'), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 23:13:14,506:INFO:Checking exceptions
2024-12-04 23:13:14,512:INFO:Preloading libraries
2024-12-04 23:13:14,512:INFO:Copying training dataset
2024-12-04 23:13:14,512:INFO:Plot type: confusion_matrix
2024-12-04 23:13:14,690:INFO:Fitting Model
2024-12-04 23:13:14,691:INFO:Scoring test/hold-out set
2024-12-04 23:13:14,933:INFO:Visual Rendered Successfully
2024-12-04 23:13:14,999:INFO:plot_model() successfully completed......................................
2024-12-04 23:13:15,000:INFO:Initializing predict_model()
2024-12-04 23:13:15,000:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=DummyClassifier(constant=None, random_state=2077, strategy='prior'), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002DA44660CC0>)
2024-12-04 23:13:15,000:INFO:Checking exceptions
2024-12-04 23:13:15,000:INFO:Preloading libraries
2024-12-04 23:13:15,104:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 706, in _multiclass_roc_auc_score
    if not np.allclose(1, y_score.sum(axis=1)):
                          ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\numpy\core\_methods.py", line 49, in _sum
    return umr_sum(a, axis, dtype, out, keepdims, initial, where)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
numpy.exceptions.AxisError: axis 1 is out of bounds for array of dimension 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 706, in _multiclass_roc_auc_score
    if not np.allclose(1, y_score.sum(axis=1)):
                          ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\numpy\core\_methods.py", line 49, in _sum
    return umr_sum(a, axis, dtype, out, keepdims, initial, where)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
numpy.exceptions.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(traceback.format_exc())

2024-12-04 23:13:15,115:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:15,143:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:15,157:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:13:15,164:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:15,266:INFO:Initializing predict_model()
2024-12-04 23:13:15,267:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DA42FB3510>, estimator=DummyClassifier(constant=None, random_state=2077, strategy='prior'), probability_threshold=None, encoded_labels=False, raw_score=True, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002DA44660CC0>)
2024-12-04 23:13:15,267:INFO:Checking exceptions
2024-12-04 23:13:15,267:INFO:Preloading libraries
2024-12-04 23:13:15,267:INFO:Set up data.
2024-12-04 23:13:15,280:INFO:Set up index.
2024-12-04 23:13:15,324:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\utils\generic.py:585: UserWarning: Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\utils\generic.py", line 580, in _calculate_metric
    calculated_metric = score_func(y_test, target, sample_weight=weights, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 706, in _multiclass_roc_auc_score
    if not np.allclose(1, y_score.sum(axis=1)):
                          ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\numpy\core\_methods.py", line 49, in _sum
    return umr_sum(a, axis, dtype, out, keepdims, initial, where)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
numpy.exceptions.AxisError: axis 1 is out of bounds for array of dimension 1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\utils\generic.py", line 583, in _calculate_metric
    calculated_metric = score_func(y_test, target, **kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 706, in _multiclass_roc_auc_score
    if not np.allclose(1, y_score.sum(axis=1)):
                          ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\numpy\core\_methods.py", line 49, in _sum
    return umr_sum(a, axis, dtype, out, keepdims, initial, where)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
numpy.exceptions.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(traceback.format_exc())

2024-12-04 23:13:15,335:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:15,367:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:15,385:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:13:15,396:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:13:15,549:INFO:Initializing save_model()
2024-12-04 23:13:15,549:INFO:save_model(model=DummyClassifier(constant=None, random_state=2077, strategy='prior'), model_name=Airflow/models/my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-12-04 23:13:15,549:INFO:Adding model into prep_pipe
2024-12-04 23:13:15,552:INFO:Airflow/models/my_best_pipeline.pkl saved in current working directory
2024-12-04 23:13:15,557:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnicity', 'Family_History',
                                             'Comorbidity_Diabet...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent'))),
                ('trained_model',
                 DummyClassifier(constant=None, random_state=2077,
                                 strategy='prior'))],
         verbose=False)
2024-12-04 23:13:15,557:INFO:save_model() successfully completed......................................
2024-12-04 23:13:58,756:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:13:58,756:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:13:58,756:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:13:58,756:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-12-04 23:14:00,293:INFO:PyCaret ClassificationExperiment
2024-12-04 23:14:00,293:INFO:Logging name: clf-default-name
2024-12-04 23:14:00,293:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-12-04 23:14:00,293:INFO:version 3.3.2
2024-12-04 23:14:00,293:INFO:Initializing setup()
2024-12-04 23:14:00,293:INFO:self.USI: cf86
2024-12-04 23:14:00,293:INFO:self._variable_keys: {'y_train', 'fold_shuffle_param', 'gpu_n_jobs_param', 'USI', 'X', 'X_test', 'memory', 'is_multiclass', '_available_plots', 'fix_imbalance', 'target_param', 'fold_groups_param', 'exp_id', 'fold_generator', 'data', 'y', 'idx', 'logging_param', 'html_param', 'X_train', 'y_test', '_ml_usecase', 'pipeline', 'n_jobs_param', 'log_plots_param', 'gpu_param', 'seed', 'exp_name_log'}
2024-12-04 23:14:00,293:INFO:Checking environment
2024-12-04 23:14:00,293:INFO:python_version: 3.11.9
2024-12-04 23:14:00,293:INFO:python_build: ('tags/v3.11.9:de54cf5', 'Apr  2 2024 10:12:12')
2024-12-04 23:14:00,293:INFO:machine: AMD64
2024-12-04 23:14:00,320:INFO:platform: Windows-10-10.0.22631-SP0
2024-12-04 23:14:00,326:INFO:Memory: svmem(total=8345964544, available=810008576, percent=90.3, used=7535955968, free=810008576)
2024-12-04 23:14:00,326:INFO:Physical Core: 4
2024-12-04 23:14:00,326:INFO:Logical Core: 8
2024-12-04 23:14:00,326:INFO:Checking libraries
2024-12-04 23:14:00,326:INFO:System:
2024-12-04 23:14:00,326:INFO:    python: 3.11.9 (tags/v3.11.9:de54cf5, Apr  2 2024, 10:12:12) [MSC v.1938 64 bit (AMD64)]
2024-12-04 23:14:00,326:INFO:executable: C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Scripts\python.exe
2024-12-04 23:14:00,326:INFO:   machine: Windows-10-10.0.22631-SP0
2024-12-04 23:14:00,327:INFO:PyCaret required dependencies:
2024-12-04 23:14:00,367:INFO:                 pip: 24.3.1
2024-12-04 23:14:00,367:INFO:          setuptools: 68.2.0
2024-12-04 23:14:00,367:INFO:             pycaret: 3.3.2
2024-12-04 23:14:00,367:INFO:             IPython: 8.29.0
2024-12-04 23:14:00,367:INFO:          ipywidgets: 8.1.5
2024-12-04 23:14:00,367:INFO:                tqdm: 4.67.0
2024-12-04 23:14:00,367:INFO:               numpy: 1.26.4
2024-12-04 23:14:00,368:INFO:              pandas: 2.1.4
2024-12-04 23:14:00,368:INFO:              jinja2: 3.1.4
2024-12-04 23:14:00,368:INFO:               scipy: 1.11.4
2024-12-04 23:14:00,368:INFO:              joblib: 1.3.2
2024-12-04 23:14:00,368:INFO:             sklearn: 1.4.2
2024-12-04 23:14:00,368:INFO:                pyod: 2.0.2
2024-12-04 23:14:00,368:INFO:            imblearn: 0.12.4
2024-12-04 23:14:00,368:INFO:   category_encoders: 2.6.4
2024-12-04 23:14:00,368:INFO:            lightgbm: 4.5.0
2024-12-04 23:14:00,368:INFO:               numba: 0.60.0
2024-12-04 23:14:00,368:INFO:            requests: 2.32.3
2024-12-04 23:14:00,368:INFO:          matplotlib: 3.7.5
2024-12-04 23:14:00,368:INFO:          scikitplot: 0.3.7
2024-12-04 23:14:00,368:INFO:         yellowbrick: 1.5
2024-12-04 23:14:00,368:INFO:              plotly: 5.24.1
2024-12-04 23:14:00,368:INFO:    plotly-resampler: Not installed
2024-12-04 23:14:00,368:INFO:             kaleido: 0.2.1
2024-12-04 23:14:00,368:INFO:           schemdraw: 0.15
2024-12-04 23:14:00,368:INFO:         statsmodels: 0.14.4
2024-12-04 23:14:00,368:INFO:              sktime: 0.26.0
2024-12-04 23:14:00,368:INFO:               tbats: 1.1.3
2024-12-04 23:14:00,368:INFO:            pmdarima: 2.0.4
2024-12-04 23:14:00,368:INFO:              psutil: 6.1.0
2024-12-04 23:14:00,368:INFO:          markupsafe: 2.1.5
2024-12-04 23:14:00,368:INFO:             pickle5: Not installed
2024-12-04 23:14:00,369:INFO:         cloudpickle: 3.1.0
2024-12-04 23:14:00,369:INFO:         deprecation: 2.1.0
2024-12-04 23:14:00,369:INFO:              xxhash: 3.5.0
2024-12-04 23:14:00,369:INFO:           wurlitzer: Not installed
2024-12-04 23:14:00,369:INFO:PyCaret optional dependencies:
2024-12-04 23:14:00,390:INFO:                shap: Not installed
2024-12-04 23:14:00,391:INFO:           interpret: Not installed
2024-12-04 23:14:00,391:INFO:                umap: Not installed
2024-12-04 23:14:00,391:INFO:     ydata_profiling: Not installed
2024-12-04 23:14:00,391:INFO:  explainerdashboard: Not installed
2024-12-04 23:14:00,391:INFO:             autoviz: 0.1.905
2024-12-04 23:14:00,391:INFO:           fairlearn: Not installed
2024-12-04 23:14:00,391:INFO:          deepchecks: Not installed
2024-12-04 23:14:00,391:INFO:             xgboost: 1.6.2
2024-12-04 23:14:00,391:INFO:            catboost: Not installed
2024-12-04 23:14:00,391:INFO:              kmodes: Not installed
2024-12-04 23:14:00,391:INFO:             mlxtend: Not installed
2024-12-04 23:14:00,391:INFO:       statsforecast: Not installed
2024-12-04 23:14:00,391:INFO:        tune_sklearn: Not installed
2024-12-04 23:14:00,391:INFO:                 ray: Not installed
2024-12-04 23:14:00,391:INFO:            hyperopt: Not installed
2024-12-04 23:14:00,391:INFO:              optuna: Not installed
2024-12-04 23:14:00,391:INFO:               skopt: Not installed
2024-12-04 23:14:00,391:INFO:              mlflow: Not installed
2024-12-04 23:14:00,391:INFO:              gradio: Not installed
2024-12-04 23:14:00,391:INFO:             fastapi: Not installed
2024-12-04 23:14:00,391:INFO:             uvicorn: Not installed
2024-12-04 23:14:00,391:INFO:              m2cgen: Not installed
2024-12-04 23:14:00,391:INFO:           evidently: Not installed
2024-12-04 23:14:00,391:INFO:               fugue: Not installed
2024-12-04 23:14:00,391:INFO:           streamlit: Not installed
2024-12-04 23:14:00,391:INFO:             prophet: Not installed
2024-12-04 23:14:00,391:INFO:None
2024-12-04 23:14:00,391:INFO:Set up data.
2024-12-04 23:14:00,409:INFO:Set up folding strategy.
2024-12-04 23:14:00,409:INFO:Set up train/test split.
2024-12-04 23:14:00,430:INFO:Set up index.
2024-12-04 23:14:00,430:INFO:Assigning column types.
2024-12-04 23:14:00,443:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-12-04 23:14:00,488:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 23:14:00,492:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:14:00,535:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:14:00,894:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:14:00,938:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-12-04 23:14:00,939:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:14:00,966:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:14:00,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:14:00,968:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-12-04 23:14:01,014:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:14:01,044:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:14:01,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:14:01,090:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-12-04 23:14:01,117:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:14:01,120:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:14:01,120:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-12-04 23:14:01,199:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:14:01,202:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:14:01,275:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:14:01,278:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:14:01,282:INFO:Preparing preprocessing pipeline...
2024-12-04 23:14:01,285:INFO:Set up label encoding.
2024-12-04 23:14:01,285:INFO:Set up simple imputation.
2024-12-04 23:14:01,330:INFO:Finished creating preprocessing pipeline.
2024-12-04 23:14:01,335:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-12-04 23:14:01,335:INFO:Creating final display dataframe.
2024-12-04 23:14:01,473:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               6166
1                        Target                                          Treatment
2                   Target type                                         Multiclass
3                Target mapping  Chemotherapy: 0, Radiation Therapy: 1, Surgery...
4           Original data shape                                        (11592, 36)
5        Transformed data shape                                        (11592, 36)
6   Transformed train set shape                                         (8114, 36)
7    Transformed test set shape                                         (3478, 36)
8              Numeric features                                                 35
9                    Preprocess                                               True
10              Imputation type                                             simple
11           Numeric imputation                                               mean
12       Categorical imputation                                               mode
13               Fold Generator                                    StratifiedKFold
14                  Fold Number                                                 10
15                     CPU Jobs                                                 -1
16                      Use GPU                                              False
17               Log Experiment                                              False
18              Experiment Name                                   clf-default-name
19                          USI                                               cf86
2024-12-04 23:14:01,556:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:14:01,558:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:14:01,634:INFO:Soft dependency imported: xgboost: 1.6.2
2024-12-04 23:14:01,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-12-04 23:14:01,637:INFO:setup() successfully completed in 1.35s...............
2024-12-04 23:14:01,637:INFO:Initializing compare_models()
2024-12-04 23:14:01,637:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, include=None, exclude=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>})
2024-12-04 23:14:01,637:INFO:Checking exceptions
2024-12-04 23:14:01,645:INFO:Preparing display monitor
2024-12-04 23:14:01,649:INFO:Initializing Logistic Regression
2024-12-04 23:14:01,649:INFO:Total runtime is 0.0 minutes
2024-12-04 23:14:01,650:INFO:SubProcess create_model() called ==================================
2024-12-04 23:14:01,650:INFO:Initializing create_model()
2024-12-04 23:14:01,650:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:14:01,650:INFO:Checking exceptions
2024-12-04 23:14:01,651:INFO:Importing libraries
2024-12-04 23:14:01,651:INFO:Copying training dataset
2024-12-04 23:14:01,662:INFO:Defining folds
2024-12-04 23:14:01,662:INFO:Declaring metric variables
2024-12-04 23:14:01,663:INFO:Importing untrained model
2024-12-04 23:14:01,663:INFO:Logistic Regression Imported successfully
2024-12-04 23:14:01,663:INFO:Starting cross validation
2024-12-04 23:14:01,664:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:14:15,078:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:15,083:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:15,083:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:15,090:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,091:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,092:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,093:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:15,097:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:15,101:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,103:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:15,105:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,108:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,112:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:15,113:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,114:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,117:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:15,120:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,123:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,125:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,125:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,127:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,129:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,133:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,137:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,145:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,149:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,154:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,157:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,447:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:15,451:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,460:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,468:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,474:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:15,478:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,485:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,492:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:15,509:INFO:Calculating mean and std
2024-12-04 23:14:15,510:INFO:Creating metrics dataframe
2024-12-04 23:14:15,512:INFO:Uploading results into container
2024-12-04 23:14:15,513:INFO:Uploading model into container now
2024-12-04 23:14:15,514:INFO:_master_model_container: 1
2024-12-04 23:14:15,514:INFO:_display_container: 2
2024-12-04 23:14:15,514:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6166, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-12-04 23:14:15,514:INFO:create_model() successfully completed......................................
2024-12-04 23:14:15,589:INFO:SubProcess create_model() end ==================================
2024-12-04 23:14:15,590:INFO:Creating metrics dataframe
2024-12-04 23:14:15,595:INFO:Initializing K Neighbors Classifier
2024-12-04 23:14:15,595:INFO:Total runtime is 0.2324289083480835 minutes
2024-12-04 23:14:15,595:INFO:SubProcess create_model() called ==================================
2024-12-04 23:14:15,595:INFO:Initializing create_model()
2024-12-04 23:14:15,595:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:14:15,595:INFO:Checking exceptions
2024-12-04 23:14:15,595:INFO:Importing libraries
2024-12-04 23:14:15,596:INFO:Copying training dataset
2024-12-04 23:14:15,616:INFO:Defining folds
2024-12-04 23:14:15,616:INFO:Declaring metric variables
2024-12-04 23:14:15,616:INFO:Importing untrained model
2024-12-04 23:14:15,616:INFO:K Neighbors Classifier Imported successfully
2024-12-04 23:14:15,617:INFO:Starting cross validation
2024-12-04 23:14:15,617:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:14:16,380:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,380:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,388:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,396:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,396:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,405:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,411:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,417:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,421:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,422:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,433:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,436:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,449:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,451:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,465:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,467:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,478:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,483:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,495:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,498:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,507:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,520:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,537:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,554:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,757:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,769:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,772:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,782:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,785:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,793:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:16,811:INFO:Calculating mean and std
2024-12-04 23:14:16,812:INFO:Creating metrics dataframe
2024-12-04 23:14:16,815:INFO:Uploading results into container
2024-12-04 23:14:16,816:INFO:Uploading model into container now
2024-12-04 23:14:16,816:INFO:_master_model_container: 2
2024-12-04 23:14:16,816:INFO:_display_container: 2
2024-12-04 23:14:16,817:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-12-04 23:14:16,817:INFO:create_model() successfully completed......................................
2024-12-04 23:14:16,891:INFO:SubProcess create_model() end ==================================
2024-12-04 23:14:16,891:INFO:Creating metrics dataframe
2024-12-04 23:14:16,894:INFO:Initializing Naive Bayes
2024-12-04 23:14:16,894:INFO:Total runtime is 0.2540821035703023 minutes
2024-12-04 23:14:16,894:INFO:SubProcess create_model() called ==================================
2024-12-04 23:14:16,894:INFO:Initializing create_model()
2024-12-04 23:14:16,894:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:14:16,894:INFO:Checking exceptions
2024-12-04 23:14:16,894:INFO:Importing libraries
2024-12-04 23:14:16,894:INFO:Copying training dataset
2024-12-04 23:14:16,909:INFO:Defining folds
2024-12-04 23:14:16,909:INFO:Declaring metric variables
2024-12-04 23:14:16,909:INFO:Importing untrained model
2024-12-04 23:14:16,910:INFO:Naive Bayes Imported successfully
2024-12-04 23:14:16,910:INFO:Starting cross validation
2024-12-04 23:14:16,911:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:14:17,045:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,047:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,048:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,050:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,056:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,058:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,061:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,062:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,064:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,066:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,075:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,076:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,077:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,080:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,081:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,088:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,094:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,097:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,106:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,112:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,120:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,126:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,138:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,148:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,164:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,171:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,172:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,179:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,188:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:17,210:INFO:Calculating mean and std
2024-12-04 23:14:17,211:INFO:Creating metrics dataframe
2024-12-04 23:14:17,213:INFO:Uploading results into container
2024-12-04 23:14:17,213:INFO:Uploading model into container now
2024-12-04 23:14:17,214:INFO:_master_model_container: 3
2024-12-04 23:14:17,214:INFO:_display_container: 2
2024-12-04 23:14:17,214:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2024-12-04 23:14:17,214:INFO:create_model() successfully completed......................................
2024-12-04 23:14:17,268:INFO:SubProcess create_model() end ==================================
2024-12-04 23:14:17,268:INFO:Creating metrics dataframe
2024-12-04 23:14:17,272:INFO:Initializing Decision Tree Classifier
2024-12-04 23:14:17,272:INFO:Total runtime is 0.2603697180747986 minutes
2024-12-04 23:14:17,272:INFO:SubProcess create_model() called ==================================
2024-12-04 23:14:17,272:INFO:Initializing create_model()
2024-12-04 23:14:17,272:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:14:17,272:INFO:Checking exceptions
2024-12-04 23:14:17,273:INFO:Importing libraries
2024-12-04 23:14:17,273:INFO:Copying training dataset
2024-12-04 23:14:17,285:INFO:Defining folds
2024-12-04 23:14:17,285:INFO:Declaring metric variables
2024-12-04 23:14:17,285:INFO:Importing untrained model
2024-12-04 23:14:17,285:INFO:Decision Tree Classifier Imported successfully
2024-12-04 23:14:17,285:INFO:Starting cross validation
2024-12-04 23:14:17,286:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:14:18,010:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,020:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,024:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,033:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,035:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,046:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,097:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,108:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,121:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,146:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,161:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,176:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,195:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,197:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,208:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,208:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,211:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,220:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,225:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,259:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,271:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,279:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,624:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,631:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,640:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,653:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,661:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,668:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:18,680:INFO:Calculating mean and std
2024-12-04 23:14:18,681:INFO:Creating metrics dataframe
2024-12-04 23:14:18,683:INFO:Uploading results into container
2024-12-04 23:14:18,683:INFO:Uploading model into container now
2024-12-04 23:14:18,683:INFO:_master_model_container: 4
2024-12-04 23:14:18,683:INFO:_display_container: 2
2024-12-04 23:14:18,684:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=6166, splitter='best')
2024-12-04 23:14:18,684:INFO:create_model() successfully completed......................................
2024-12-04 23:14:18,749:INFO:SubProcess create_model() end ==================================
2024-12-04 23:14:18,749:INFO:Creating metrics dataframe
2024-12-04 23:14:18,752:INFO:Initializing SVM - Linear Kernel
2024-12-04 23:14:18,753:INFO:Total runtime is 0.28505918979644773 minutes
2024-12-04 23:14:18,753:INFO:SubProcess create_model() called ==================================
2024-12-04 23:14:18,753:INFO:Initializing create_model()
2024-12-04 23:14:18,753:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:14:18,753:INFO:Checking exceptions
2024-12-04 23:14:18,753:INFO:Importing libraries
2024-12-04 23:14:18,754:INFO:Copying training dataset
2024-12-04 23:14:18,770:INFO:Defining folds
2024-12-04 23:14:18,770:INFO:Declaring metric variables
2024-12-04 23:14:18,772:INFO:Importing untrained model
2024-12-04 23:14:18,772:INFO:SVM - Linear Kernel Imported successfully
2024-12-04 23:14:18,773:INFO:Starting cross validation
2024-12-04 23:14:18,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:14:19,786:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:19,789:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:19,791:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:19,794:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:19,797:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:19,802:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:19,813:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:19,815:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:19,818:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:19,825:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:19,826:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:19,828:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:19,833:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:19,863:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:19,878:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:19,904:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:19,909:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:19,919:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:19,930:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,432:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:20,437:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,450:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,466:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,472:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:20,477:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,489:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,531:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,576:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:20,581:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,609:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,622:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,885:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:20,889:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,898:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,907:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,929:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:20,932:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,939:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,947:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:20,968:INFO:Calculating mean and std
2024-12-04 23:14:20,969:INFO:Creating metrics dataframe
2024-12-04 23:14:20,970:INFO:Uploading results into container
2024-12-04 23:14:20,970:INFO:Uploading model into container now
2024-12-04 23:14:20,971:INFO:_master_model_container: 5
2024-12-04 23:14:20,971:INFO:_display_container: 2
2024-12-04 23:14:20,971:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6166, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-12-04 23:14:20,971:INFO:create_model() successfully completed......................................
2024-12-04 23:14:21,026:INFO:SubProcess create_model() end ==================================
2024-12-04 23:14:21,026:INFO:Creating metrics dataframe
2024-12-04 23:14:21,028:INFO:Initializing Ridge Classifier
2024-12-04 23:14:21,029:INFO:Total runtime is 0.3229861497879028 minutes
2024-12-04 23:14:21,029:INFO:SubProcess create_model() called ==================================
2024-12-04 23:14:21,029:INFO:Initializing create_model()
2024-12-04 23:14:21,029:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:14:21,029:INFO:Checking exceptions
2024-12-04 23:14:21,029:INFO:Importing libraries
2024-12-04 23:14:21,029:INFO:Copying training dataset
2024-12-04 23:14:21,041:INFO:Defining folds
2024-12-04 23:14:21,041:INFO:Declaring metric variables
2024-12-04 23:14:21,041:INFO:Importing untrained model
2024-12-04 23:14:21,042:INFO:Ridge Classifier Imported successfully
2024-12-04 23:14:21,042:INFO:Starting cross validation
2024-12-04 23:14:21,043:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:14:21,161:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:21,166:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,170:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:21,171:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:21,171:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:21,177:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,177:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,178:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,179:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:21,180:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:21,184:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:21,185:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,185:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,190:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,193:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,198:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,200:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,200:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,203:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,205:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,207:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,210:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:21,211:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,214:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,215:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,215:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,218:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,227:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,238:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,239:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,289:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:21,293:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,294:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:21,298:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,300:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,307:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,309:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,314:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:21,326:INFO:Calculating mean and std
2024-12-04 23:14:21,327:INFO:Creating metrics dataframe
2024-12-04 23:14:21,329:INFO:Uploading results into container
2024-12-04 23:14:21,329:INFO:Uploading model into container now
2024-12-04 23:14:21,330:INFO:_master_model_container: 6
2024-12-04 23:14:21,330:INFO:_display_container: 2
2024-12-04 23:14:21,330:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6166, solver='auto',
                tol=0.0001)
2024-12-04 23:14:21,330:INFO:create_model() successfully completed......................................
2024-12-04 23:14:21,395:INFO:SubProcess create_model() end ==================================
2024-12-04 23:14:21,395:INFO:Creating metrics dataframe
2024-12-04 23:14:21,398:INFO:Initializing Random Forest Classifier
2024-12-04 23:14:21,398:INFO:Total runtime is 0.32915098269780474 minutes
2024-12-04 23:14:21,398:INFO:SubProcess create_model() called ==================================
2024-12-04 23:14:21,398:INFO:Initializing create_model()
2024-12-04 23:14:21,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:14:21,398:INFO:Checking exceptions
2024-12-04 23:14:21,398:INFO:Importing libraries
2024-12-04 23:14:21,398:INFO:Copying training dataset
2024-12-04 23:14:21,413:INFO:Defining folds
2024-12-04 23:14:21,413:INFO:Declaring metric variables
2024-12-04 23:14:21,414:INFO:Importing untrained model
2024-12-04 23:14:21,414:INFO:Random Forest Classifier Imported successfully
2024-12-04 23:14:21,414:INFO:Starting cross validation
2024-12-04 23:14:21,415:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:14:29,591:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,594:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,603:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,606:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,617:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,629:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,651:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,668:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,695:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,719:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,741:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,747:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,754:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,755:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,754:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,771:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,771:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,772:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,774:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,785:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,788:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,788:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:29,804:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:31,803:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:31,813:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:31,824:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:31,854:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:31,862:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:31,868:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:31,891:INFO:Calculating mean and std
2024-12-04 23:14:31,892:INFO:Creating metrics dataframe
2024-12-04 23:14:31,895:INFO:Uploading results into container
2024-12-04 23:14:31,895:INFO:Uploading model into container now
2024-12-04 23:14:31,896:INFO:_master_model_container: 7
2024-12-04 23:14:31,896:INFO:_display_container: 2
2024-12-04 23:14:31,897:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=6166, verbose=0,
                       warm_start=False)
2024-12-04 23:14:31,897:INFO:create_model() successfully completed......................................
2024-12-04 23:14:31,975:INFO:SubProcess create_model() end ==================================
2024-12-04 23:14:31,975:INFO:Creating metrics dataframe
2024-12-04 23:14:31,979:INFO:Initializing Quadratic Discriminant Analysis
2024-12-04 23:14:31,979:INFO:Total runtime is 0.505496339003245 minutes
2024-12-04 23:14:31,979:INFO:SubProcess create_model() called ==================================
2024-12-04 23:14:31,979:INFO:Initializing create_model()
2024-12-04 23:14:31,980:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:14:31,980:INFO:Checking exceptions
2024-12-04 23:14:31,980:INFO:Importing libraries
2024-12-04 23:14:31,980:INFO:Copying training dataset
2024-12-04 23:14:31,997:INFO:Defining folds
2024-12-04 23:14:31,997:INFO:Declaring metric variables
2024-12-04 23:14:31,998:INFO:Importing untrained model
2024-12-04 23:14:31,998:INFO:Quadratic Discriminant Analysis Imported successfully
2024-12-04 23:14:31,998:INFO:Starting cross validation
2024-12-04 23:14:31,999:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:14:33,508:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:33,508:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:33,508:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:33,513:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

 custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:33,513:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,513:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:33,514:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,516:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,517:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,522:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,522:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,522:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,523:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,525:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,527:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,527:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,532:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,533:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,534:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,534:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,537:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,537:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:33,541:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,542:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,545:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,556:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,565:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,615:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:33,618:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:33,618:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,621:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,624:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,627:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,630:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,633:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:33,651:INFO:Calculating mean and std
2024-12-04 23:14:33,652:INFO:Creating metrics dataframe
2024-12-04 23:14:33,653:INFO:Uploading results into container
2024-12-04 23:14:33,654:INFO:Uploading model into container now
2024-12-04 23:14:33,654:INFO:_master_model_container: 8
2024-12-04 23:14:33,654:INFO:_display_container: 2
2024-12-04 23:14:33,654:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2024-12-04 23:14:33,654:INFO:create_model() successfully completed......................................
2024-12-04 23:14:33,713:INFO:SubProcess create_model() end ==================================
2024-12-04 23:14:33,713:INFO:Creating metrics dataframe
2024-12-04 23:14:33,715:INFO:Initializing Ada Boost Classifier
2024-12-04 23:14:33,715:INFO:Total runtime is 0.5344253301620483 minutes
2024-12-04 23:14:33,715:INFO:SubProcess create_model() called ==================================
2024-12-04 23:14:33,715:INFO:Initializing create_model()
2024-12-04 23:14:33,715:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:14:33,715:INFO:Checking exceptions
2024-12-04 23:14:33,715:INFO:Importing libraries
2024-12-04 23:14:33,715:INFO:Copying training dataset
2024-12-04 23:14:33,727:INFO:Defining folds
2024-12-04 23:14:33,727:INFO:Declaring metric variables
2024-12-04 23:14:33,728:INFO:Importing untrained model
2024-12-04 23:14:33,728:INFO:Ada Boost Classifier Imported successfully
2024-12-04 23:14:33,728:INFO:Starting cross validation
2024-12-04 23:14:33,729:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:14:33,839:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:14:33,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:14:33,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:14:33,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:14:33,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:14:33,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:14:33,840:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:14:35,820:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:35,826:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:35,827:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:35,841:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:35,844:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:35,846:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:35,849:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:35,859:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:35,862:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:35,873:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:35,879:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:35,883:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:35,945:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:14:35,946:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-12-04 23:14:36,262:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:36,267:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,271:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:36,276:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,281:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,296:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:36,297:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,301:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,302:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,311:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,315:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,326:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,406:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:36,410:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:36,415:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,417:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,427:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,429:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,440:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:36,441:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:37,471:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:37,473:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:37,480:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:37,488:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:37,542:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:14:37,546:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:37,555:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:37,564:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:14:37,579:INFO:Calculating mean and std
2024-12-04 23:14:37,580:INFO:Creating metrics dataframe
2024-12-04 23:14:37,582:INFO:Uploading results into container
2024-12-04 23:14:37,582:INFO:Uploading model into container now
2024-12-04 23:14:37,583:INFO:_master_model_container: 9
2024-12-04 23:14:37,583:INFO:_display_container: 2
2024-12-04 23:14:37,583:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=6166)
2024-12-04 23:14:37,583:INFO:create_model() successfully completed......................................
2024-12-04 23:14:37,649:INFO:SubProcess create_model() end ==================================
2024-12-04 23:14:37,649:INFO:Creating metrics dataframe
2024-12-04 23:14:37,652:INFO:Initializing Gradient Boosting Classifier
2024-12-04 23:14:37,652:INFO:Total runtime is 0.6000498572985331 minutes
2024-12-04 23:14:37,652:INFO:SubProcess create_model() called ==================================
2024-12-04 23:14:37,652:INFO:Initializing create_model()
2024-12-04 23:14:37,652:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:14:37,652:INFO:Checking exceptions
2024-12-04 23:14:37,652:INFO:Importing libraries
2024-12-04 23:14:37,652:INFO:Copying training dataset
2024-12-04 23:14:37,666:INFO:Defining folds
2024-12-04 23:14:37,667:INFO:Declaring metric variables
2024-12-04 23:14:37,667:INFO:Importing untrained model
2024-12-04 23:14:37,667:INFO:Gradient Boosting Classifier Imported successfully
2024-12-04 23:14:37,668:INFO:Starting cross validation
2024-12-04 23:14:37,669:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:15:12,340:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:12,345:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:12,376:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:12,389:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:12,725:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:12,733:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:12,749:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:12,762:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:14,357:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:14,362:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:14,392:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:14,406:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:14,888:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:14,894:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:14,907:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:14,920:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:16,258:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:16,263:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:16,277:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:16,289:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:16,765:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:16,771:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:16,786:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:16,800:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:18,010:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:18,015:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:18,028:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:18,038:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:18,510:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:18,514:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:18,525:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:18,531:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:35,791:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:35,796:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:35,803:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:35,809:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:35,956:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:35,959:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:35,964:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:35,968:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:35,980:INFO:Calculating mean and std
2024-12-04 23:15:35,981:INFO:Creating metrics dataframe
2024-12-04 23:15:35,982:INFO:Uploading results into container
2024-12-04 23:15:35,982:INFO:Uploading model into container now
2024-12-04 23:15:35,983:INFO:_master_model_container: 10
2024-12-04 23:15:35,983:INFO:_display_container: 2
2024-12-04 23:15:35,983:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6166, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-12-04 23:15:35,983:INFO:create_model() successfully completed......................................
2024-12-04 23:15:36,041:INFO:SubProcess create_model() end ==================================
2024-12-04 23:15:36,041:INFO:Creating metrics dataframe
2024-12-04 23:15:36,043:INFO:Initializing Linear Discriminant Analysis
2024-12-04 23:15:36,043:INFO:Total runtime is 1.573234208424886 minutes
2024-12-04 23:15:36,043:INFO:SubProcess create_model() called ==================================
2024-12-04 23:15:36,043:INFO:Initializing create_model()
2024-12-04 23:15:36,043:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:15:36,043:INFO:Checking exceptions
2024-12-04 23:15:36,043:INFO:Importing libraries
2024-12-04 23:15:36,043:INFO:Copying training dataset
2024-12-04 23:15:36,060:INFO:Defining folds
2024-12-04 23:15:36,060:INFO:Declaring metric variables
2024-12-04 23:15:36,060:INFO:Importing untrained model
2024-12-04 23:15:36,061:INFO:Linear Discriminant Analysis Imported successfully
2024-12-04 23:15:36,061:INFO:Starting cross validation
2024-12-04 23:15:36,062:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:15:36,196:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:36,198:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:36,205:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,212:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:36,215:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,219:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:36,220:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:36,222:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,224:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,225:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,228:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,231:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:36,231:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,233:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:36,236:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,237:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,237:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,238:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,239:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,242:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,243:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:36,247:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,248:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,249:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,251:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,256:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,257:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,259:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,261:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,264:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,275:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,325:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:36,325:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py:204: FitFailedWarning: Metric 'make_scorer(roc_auc_score, response_method=('decision_function', 'predict_proba'), average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 196, in _score
    return super()._score(
           ^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_scorer.py", line 350, in _score
    return self._sign * self._score_func(y_true, y_pred, **scoring_kwargs)
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\metrics.py", line 144, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 634, in roc_auc_score
    return _multiclass_roc_auc_score(
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_ranking.py", line 707, in _multiclass_roc_auc_score
    raise ValueError(
ValueError: Target scores need to be probabilities for multiclass roc_auc, i.e. they should sum up to 1.0 over classes

  warnings.warn(

2024-12-04 23:15:36,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,328:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,333:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,334:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,340:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,341:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:36,358:INFO:Calculating mean and std
2024-12-04 23:15:36,359:INFO:Creating metrics dataframe
2024-12-04 23:15:36,361:INFO:Uploading results into container
2024-12-04 23:15:36,361:INFO:Uploading model into container now
2024-12-04 23:15:36,361:INFO:_master_model_container: 11
2024-12-04 23:15:36,361:INFO:_display_container: 2
2024-12-04 23:15:36,362:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2024-12-04 23:15:36,362:INFO:create_model() successfully completed......................................
2024-12-04 23:15:36,417:INFO:SubProcess create_model() end ==================================
2024-12-04 23:15:36,417:INFO:Creating metrics dataframe
2024-12-04 23:15:36,419:INFO:Initializing Extra Trees Classifier
2024-12-04 23:15:36,419:INFO:Total runtime is 1.5794872681299845 minutes
2024-12-04 23:15:36,420:INFO:SubProcess create_model() called ==================================
2024-12-04 23:15:36,420:INFO:Initializing create_model()
2024-12-04 23:15:36,420:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:15:36,420:INFO:Checking exceptions
2024-12-04 23:15:36,420:INFO:Importing libraries
2024-12-04 23:15:36,420:INFO:Copying training dataset
2024-12-04 23:15:36,432:INFO:Defining folds
2024-12-04 23:15:36,432:INFO:Declaring metric variables
2024-12-04 23:15:36,432:INFO:Importing untrained model
2024-12-04 23:15:36,433:INFO:Extra Trees Classifier Imported successfully
2024-12-04 23:15:36,433:INFO:Starting cross validation
2024-12-04 23:15:36,433:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:15:40,870:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:40,902:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:40,907:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:40,939:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:40,940:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:40,953:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:40,972:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:40,974:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:40,979:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:40,981:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:40,982:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:40,992:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:40,997:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:41,006:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:41,011:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:41,011:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:41,102:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:41,114:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:41,129:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:41,131:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:41,146:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:41,160:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:42,206:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:42,216:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:42,229:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:42,240:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:42,252:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:42,264:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:15:42,282:INFO:Calculating mean and std
2024-12-04 23:15:42,283:INFO:Creating metrics dataframe
2024-12-04 23:15:42,287:INFO:Uploading results into container
2024-12-04 23:15:42,287:INFO:Uploading model into container now
2024-12-04 23:15:42,288:INFO:_master_model_container: 12
2024-12-04 23:15:42,288:INFO:_display_container: 2
2024-12-04 23:15:42,289:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6166, verbose=0,
                     warm_start=False)
2024-12-04 23:15:42,289:INFO:create_model() successfully completed......................................
2024-12-04 23:15:42,404:INFO:SubProcess create_model() end ==================================
2024-12-04 23:15:42,405:INFO:Creating metrics dataframe
2024-12-04 23:15:42,408:INFO:Initializing Extreme Gradient Boosting
2024-12-04 23:15:42,409:INFO:Total runtime is 1.6793210228284199 minutes
2024-12-04 23:15:42,409:INFO:SubProcess create_model() called ==================================
2024-12-04 23:15:42,409:INFO:Initializing create_model()
2024-12-04 23:15:42,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:15:42,409:INFO:Checking exceptions
2024-12-04 23:15:42,409:INFO:Importing libraries
2024-12-04 23:15:42,410:INFO:Copying training dataset
2024-12-04 23:15:42,435:INFO:Defining folds
2024-12-04 23:15:42,435:INFO:Declaring metric variables
2024-12-04 23:15:42,435:INFO:Importing untrained model
2024-12-04 23:15:42,436:INFO:Extreme Gradient Boosting Imported successfully
2024-12-04 23:15:42,437:INFO:Starting cross validation
2024-12-04 23:15:42,438:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:16:07,242:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:07,267:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:07,281:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:08,046:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:08,061:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:08,074:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:09,176:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:09,191:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:09,210:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:09,324:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:09,333:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:09,342:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:09,345:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:09,355:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:09,356:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:09,642:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:09,656:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:09,665:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:10,116:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:10,126:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:10,139:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:10,490:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:10,497:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:10,505:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:20,885:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:20,891:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:20,897:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:21,050:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:21,056:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:21,060:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:21,071:INFO:Calculating mean and std
2024-12-04 23:16:21,072:INFO:Creating metrics dataframe
2024-12-04 23:16:21,073:INFO:Uploading results into container
2024-12-04 23:16:21,074:INFO:Uploading model into container now
2024-12-04 23:16:21,074:INFO:_master_model_container: 13
2024-12-04 23:16:21,074:INFO:_display_container: 2
2024-12-04 23:16:21,075:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, gamma=None,
              gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_to_onehot=None, max_delta_step=None, max_depth=None,
              max_leaves=None, min_child_weight=None, missing=nan,
              monotone_constraints=None, n_estimators=100, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic',
              predictor=None, random_state=6166, reg_alpha=None, ...)
2024-12-04 23:16:21,075:INFO:create_model() successfully completed......................................
2024-12-04 23:16:21,134:INFO:SubProcess create_model() end ==================================
2024-12-04 23:16:21,134:INFO:Creating metrics dataframe
2024-12-04 23:16:21,136:INFO:Initializing Light Gradient Boosting Machine
2024-12-04 23:16:21,136:INFO:Total runtime is 2.324784433841705 minutes
2024-12-04 23:16:21,136:INFO:SubProcess create_model() called ==================================
2024-12-04 23:16:21,136:INFO:Initializing create_model()
2024-12-04 23:16:21,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:16:21,136:INFO:Checking exceptions
2024-12-04 23:16:21,136:INFO:Importing libraries
2024-12-04 23:16:21,136:INFO:Copying training dataset
2024-12-04 23:16:21,149:INFO:Defining folds
2024-12-04 23:16:21,149:INFO:Declaring metric variables
2024-12-04 23:16:21,149:INFO:Importing untrained model
2024-12-04 23:16:21,149:INFO:Light Gradient Boosting Machine Imported successfully
2024-12-04 23:16:21,149:INFO:Starting cross validation
2024-12-04 23:16:21,150:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:16:28,175:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,188:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,189:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,202:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,203:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,240:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,321:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,333:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,342:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,503:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,514:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,525:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,539:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,553:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,567:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,733:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,744:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:28,754:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:29,518:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:29,543:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:29,554:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:29,604:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:29,615:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:29,626:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,064:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,075:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,085:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,085:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,098:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,110:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,124:INFO:Calculating mean and std
2024-12-04 23:16:31,125:INFO:Creating metrics dataframe
2024-12-04 23:16:31,128:INFO:Uploading results into container
2024-12-04 23:16:31,129:INFO:Uploading model into container now
2024-12-04 23:16:31,129:INFO:_master_model_container: 14
2024-12-04 23:16:31,130:INFO:_display_container: 2
2024-12-04 23:16:31,130:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6166, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-12-04 23:16:31,130:INFO:create_model() successfully completed......................................
2024-12-04 23:16:31,222:INFO:SubProcess create_model() end ==================================
2024-12-04 23:16:31,222:INFO:Creating metrics dataframe
2024-12-04 23:16:31,225:INFO:Initializing Dummy Classifier
2024-12-04 23:16:31,225:INFO:Total runtime is 2.492921682198842 minutes
2024-12-04 23:16:31,225:INFO:SubProcess create_model() called ==================================
2024-12-04 23:16:31,225:INFO:Initializing create_model()
2024-12-04 23:16:31,225:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001CFBDF49810>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:16:31,225:INFO:Checking exceptions
2024-12-04 23:16:31,225:INFO:Importing libraries
2024-12-04 23:16:31,225:INFO:Copying training dataset
2024-12-04 23:16:31,241:INFO:Defining folds
2024-12-04 23:16:31,241:INFO:Declaring metric variables
2024-12-04 23:16:31,241:INFO:Importing untrained model
2024-12-04 23:16:31,241:INFO:Dummy Classifier Imported successfully
2024-12-04 23:16:31,242:INFO:Starting cross validation
2024-12-04 23:16:31,243:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-12-04 23:16:31,347:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,348:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,362:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,362:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,368:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,368:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:16:31,370:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,374:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,377:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,378:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:16:31,381:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,382:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:16:31,382:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,384:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,387:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,390:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:16:31,390:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,391:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,394:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,395:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,400:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:16:31,400:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:16:31,406:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,407:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,406:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,411:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,416:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:16:31,423:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,425:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,430:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:16:31,434:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,466:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,469:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,473:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,476:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,477:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:16:31,480:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,480:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-12-04 23:16:31,483:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:31,498:INFO:Calculating mean and std
2024-12-04 23:16:31,498:INFO:Creating metrics dataframe
2024-12-04 23:16:31,500:INFO:Uploading results into container
2024-12-04 23:16:31,500:INFO:Uploading model into container now
2024-12-04 23:16:31,501:INFO:_master_model_container: 15
2024-12-04 23:16:31,501:INFO:_display_container: 2
2024-12-04 23:16:31,501:INFO:DummyClassifier(constant=None, random_state=6166, strategy='prior')
2024-12-04 23:16:31,501:INFO:create_model() successfully completed......................................
2024-12-04 23:16:31,559:INFO:SubProcess create_model() end ==================================
2024-12-04 23:16:31,559:INFO:Creating metrics dataframe
2024-12-04 23:16:31,563:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py:339: FutureWarning: Styler.applymap has been deprecated. Use Styler.map instead.
  .applymap(highlight_cols, subset=["TT (Sec)"])

2024-12-04 23:16:31,566:INFO:Initializing create_model()
2024-12-04 23:16:31,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6166, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-12-04 23:16:31,566:INFO:Checking exceptions
2024-12-04 23:16:31,567:INFO:Importing libraries
2024-12-04 23:16:31,567:INFO:Copying training dataset
2024-12-04 23:16:31,580:INFO:Defining folds
2024-12-04 23:16:31,580:INFO:Declaring metric variables
2024-12-04 23:16:31,581:INFO:Importing untrained model
2024-12-04 23:16:31,581:INFO:Declaring custom model
2024-12-04 23:16:31,581:INFO:Extra Trees Classifier Imported successfully
2024-12-04 23:16:31,582:INFO:Cross validation set to False
2024-12-04 23:16:31,582:INFO:Fitting Model
2024-12-04 23:16:32,134:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6166, verbose=0,
                     warm_start=False)
2024-12-04 23:16:32,134:INFO:create_model() successfully completed......................................
2024-12-04 23:16:32,199:INFO:_master_model_container: 15
2024-12-04 23:16:32,200:INFO:_display_container: 2
2024-12-04 23:16:32,200:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6166, verbose=0,
                     warm_start=False)
2024-12-04 23:16:32,200:INFO:compare_models() successfully completed......................................
2024-12-04 23:16:32,201:INFO:Initializing evaluate_model()
2024-12-04 23:16:32,201:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6166, verbose=0,
                     warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None)
2024-12-04 23:16:32,337:INFO:Initializing plot_model()
2024-12-04 23:16:32,337:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6166, verbose=0,
                     warm_start=False), plot=pipeline, scale=1, save=False, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), fit_kwargs={}, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=False, system=True, display=None, display_format=None)
2024-12-04 23:16:32,337:INFO:Checking exceptions
2024-12-04 23:16:32,373:INFO:Preloading libraries
2024-12-04 23:16:32,555:INFO:Copying training dataset
2024-12-04 23:16:32,555:INFO:Plot type: pipeline
2024-12-04 23:16:37,280:INFO:Visual Rendered Successfully
2024-12-04 23:16:37,359:INFO:plot_model() successfully completed......................................
2024-12-04 23:16:37,380:INFO:Initializing plot_model()
2024-12-04 23:16:37,380:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6166, verbose=0,
                     warm_start=False), plot=auc, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 23:16:37,380:INFO:Checking exceptions
2024-12-04 23:16:37,421:INFO:Preloading libraries
2024-12-04 23:16:37,592:INFO:Copying training dataset
2024-12-04 23:16:37,593:INFO:Plot type: auc
2024-12-04 23:16:37,803:INFO:Fitting Model
2024-12-04 23:16:37,806:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-12-04 23:16:37,807:INFO:Scoring test/hold-out set
2024-12-04 23:16:38,171:INFO:Visual Rendered Successfully
2024-12-04 23:16:38,239:INFO:plot_model() successfully completed......................................
2024-12-04 23:16:38,253:INFO:Initializing plot_model()
2024-12-04 23:16:38,253:INFO:plot_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6166, verbose=0,
                     warm_start=False), plot=confusion_matrix, scale=1, save=False, fold=None, fit_kwargs=None, plot_kwargs=None, groups=None, feature_name=None, label=False, verbose=True, system=True, display=None, display_format=None)
2024-12-04 23:16:38,253:INFO:Checking exceptions
2024-12-04 23:16:38,288:INFO:Preloading libraries
2024-12-04 23:16:38,466:INFO:Copying training dataset
2024-12-04 23:16:38,466:INFO:Plot type: confusion_matrix
2024-12-04 23:16:38,630:INFO:Fitting Model
2024-12-04 23:16:38,630:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\base.py:493: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2024-12-04 23:16:38,631:INFO:Scoring test/hold-out set
2024-12-04 23:16:38,958:INFO:Visual Rendered Successfully
2024-12-04 23:16:39,033:INFO:plot_model() successfully completed......................................
2024-12-04 23:16:39,046:INFO:Initializing predict_model()
2024-12-04 23:16:39,047:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6166, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CFBD7F1940>)
2024-12-04 23:16:39,047:INFO:Checking exceptions
2024-12-04 23:16:39,047:INFO:Preloading libraries
2024-12-04 23:16:39,275:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:39,299:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:39,327:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:39,734:INFO:Initializing predict_model()
2024-12-04 23:16:39,735:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001CFA65C2C50>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6166, verbose=0,
                     warm_start=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000001CFBD7F1940>)
2024-12-04 23:16:39,735:INFO:Checking exceptions
2024-12-04 23:16:39,735:INFO:Preloading libraries
2024-12-04 23:16:39,735:INFO:Set up data.
2024-12-04 23:16:39,755:INFO:Set up index.
2024-12-04 23:16:40,001:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:40,036:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:40,063:WARNING:C:\Users\olenk\GitHub\s25241_Lung-Cancer-Prediction\venv\Lib\site-packages\sklearn\metrics\_classification.py:1561: UserWarning: Note that pos_label (set to 'Targeted Therapy') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2024-12-04 23:16:40,230:INFO:Initializing save_model()
2024-12-04 23:16:40,230:INFO:save_model(model=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=6166, verbose=0,
                     warm_start=False), model_name=Airflow/models/my_best_pipeline, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\olenk\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnici...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2024-12-04 23:16:40,231:INFO:Adding model into prep_pipe
2024-12-04 23:16:40,323:INFO:Airflow/models/my_best_pipeline.pkl saved in current working directory
2024-12-04 23:16:40,328:INFO:Pipeline(memory=Memory(location=None),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'Gender', 'Smoking_History',
                                             'Tumor_Size_mm', 'Tumor_Location',
                                             'Stage', 'Survival_Months',
                                             'Ethnicity', 'Family_History',
                                             'Comorbidity_Diabet...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=6166, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-12-04 23:16:40,328:INFO:save_model() successfully completed......................................
